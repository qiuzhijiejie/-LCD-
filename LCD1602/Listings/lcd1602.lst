C51 COMPILER V9.60.7.0   LCD1602                                                           10/09/2024 19:47:56 PAGE 1   


C51 COMPILER V9.60.7.0, COMPILATION OF MODULE LCD1602
OBJECT MODULE PLACED IN .\Objects\lcd1602.obj
COMPILER INVOKED BY: D:\KEIL_STM32\C51\BIN\C51.EXE lcd1602.c LARGE OPTIMIZE(8,SPEED) BROWSE DEBUG OBJECTEXTEND PRINT(.\L
                    -istings\lcd1602.lst) OBJECT(.\Objects\lcd1602.obj)

line level    source

   1          #include "LCD1602.h"
   2          #include <REGX52.H>
   3          
   4          
   5          
   6          sbit LCD_RS = P3^0; 
   7          sbit LCD_RW = P3^1;
   8          sbit LCD_EN = P3^2;
   9          sbit   KEY1  = P2^0;    
  10          
  11          extern unsigned int i,j,maxSteps;
  12          
  13          
  14          unsigned int ReadKey1() // 按键检测函数
  15          {
  16   1          if (KEY1 == 1) 
  17   1              {  // 按键被按下
  18   2              Delay(1);  // 简单的去抖动处理
  19   2              if (KEY1 == 1) 
  20   2                      {  // 检查按键是否仍然按下
  21   3                  while (KEY1 == 1);  // 等待按键释放
  22   3                  return 1;  // 返回按键被按下
  23   3              }
  24   2          }
  25   1          return 0;  // 按键没有被按下
  26   1      }
  27          
  28          
  29          
  30          
  31          
  32          
  33          
  34          void  Delay(xms)        //@12.000MHz
  35          {
  36   1      while(xms--){
  37   2              unsigned char data i, j;
  38   2      
  39   2              i = 12;
  40   2              j = 169;
  41   2              do
  42   2              {
  43   3                      while (--j);
  44   3              } while (--i);
  45   2      }
  46   1              }
  47          
  48          
  49          //判断忙不忙
  50          void Busy()
  51          {
  52   1              unsigned char temp;
  53   1              LCD_DataPort=0xff;
  54   1              LCD_RS=0;//RW=1,RS=0读状态
C51 COMPILER V9.60.7.0   LCD1602                                                           10/09/2024 19:47:56 PAGE 2   

  55   1              LCD_RW=1;
  56   1              
  57   1              do{
  58   2                      LCD_EN=1;
  59   2                      temp=LCD_DataPort;
  60   2                      LCD_EN=0;
  61   2              }while(temp&0x80);}/*对控制器每次进行读写操作之前， 
  62                                                    都必须进行读写检测，确保STA7为0*/
  63          
  64          
  65          
  66          /**
  67            * @brief  LCD1602写命令
  68            * @param  Command 要写入的命令
  69            * @retval 无
  70            */
  71          void LCD_WriteCommand(unsigned char Command) 
  72          {
  73   1              Busy();
  74   1          LCD_RS = 0; // 选择为指令，1为数据，0为指令
  75   1          LCD_RW = 0; // 选择为写， 1为读，0为写
  76   1          LCD_DataPort = Command; // 写入指令的内容
  77   1          LCD_EN = 1;   // 使能脚E先上升沿写入
  78   1          Delay(0.1);
  79   1          LCD_EN = 0;   // 使能脚E后负跳变完成写入
  80   1      }
  81          
  82          
  83          
  84          /**
  85            * @brief  LCD1602写数据
  86            * @param  Data 要写入的数据,搭配LCD_SetCursor()光标使用。
  87            * @retval 无
  88            */
  89          void LCD_WriteData(unsigned char Data) 
  90          {
  91   1              Busy();
  92   1          LCD_RS = 1; // 选择为数据，1为数据，0为指令
  93   1          LCD_RW = 0; // 选择为写， 1为读，0为写
  94   1          LCD_DataPort = Data; // 写入指数据的内容
  95   1          LCD_EN = 1;   // 使能脚E先上升沿写入
  96   1          Delay(0.1);
  97   1          LCD_EN = 0;   // 使能脚E后负跳变完成写入
  98   1              Delay(0.1);
  99   1        
 100   1      }
 101          
 102          
 103          
 104          /**
 105            * @brief  LCD1602初始化函数
 106            * @param  无
 107            * @retval 无
 108            */
 109          void LCD_Init() 
 110          {
 111   1          LCD_WriteCommand(0x38); // 设置16X2显示,5X7点阵,8位数据接口 
 112   1          LCD_WriteCommand(0x0c); // 显示开,光标开,闪烁开
 113   1          LCD_WriteCommand(0x06); // 当读或写一个字符后地址指针加一,且光标加一,画面不动
 114   1          LCD_WriteCommand(0x01); // 光标复位，清屏
 115   1              Delay(1.5); 
 116   1      }
C51 COMPILER V9.60.7.0   LCD1602                                                           10/09/2024 19:47:56 PAGE 3   

 117          
 118          /**
 119            * @brief  LCD1602清屏
 120            * @param  无
 121            * @retval 无
 122            */
 123          void LCD_Clear() 
 124          {
 125   1          Busy();
 126   1          LCD_WriteCommand(0x01);
 127   1              Delay(1.5);           // 等待清屏完成
 128   1      }
 129          
 130          
 131          /**
 132            * @brief  LCD1602设置光标位置
 133            * @param  Line 行位置，范围：1~2
 134            * @param  Column 列位置，范围：1~16
 135            * @retval 无
 136            */
 137          void LCD_SetCursor(unsigned char Line, unsigned char Column) 
 138          {
 139   1              
 140   1                              if (Line == 1) 
 141   1                                      {
 142   2                                              LCD_WriteCommand(0x80 | (Column - 1)); // 第一行
 143   2                                      } 
 144   1                              else  
 145   1                                      {
 146   2                                              LCD_WriteCommand(0x80 | (Column - 1 + 0x40)); // 第二行
 147   2                                      }
 148   1              
 149   1      }
 150                  
 151           
 152          /**
 153           * @brief LCD1602显示字符串
 154           * @param Line1-2行 Column 1-16列 *String 输入字符""
 155           * @retval 无
 156           */
 157          void LCD_ShowString(unsigned char Line, unsigned char Column, char *String) 
 158          {       unsigned char i;                
 159   1              LCD_SetCursor(Line, Column);
 160   1          for (i = 0; String[i] != '\0'; i++) 
 161   1              {
 162   2            LCD_WriteData(String[i]);
 163   2          }
 164   1      }
 165          
 166          
 167          unsigned char LCD_Readdata(void)               //读数据子程序
 168          {   unsigned char d;
 169   1          Busy();                       //HD44780液晶显示控制器忙检测
 170   1          LCD_DataPort=0xff;
 171   1          LCD_RS=1;                             //RS=1 RW=1 E=高电平
 172   1          LCD_RW=1;
 173   1          LCD_EN=1;
 174   1          Delay(0.005);
 175   1          d=LCD_DataPort;
 176   1          LCD_EN=0;
 177   1          return d;
 178   1      }
C51 COMPILER V9.60.7.0   LCD1602                                                           10/09/2024 19:47:56 PAGE 4   

 179          
 180          
 181          
 182          
 183          /**
 184           * @brief  显示字符函数
 185           * @param  Line1-2行 Column 1-16列 i字符
 186           * @retval
 187           */
 188          void LCD_USER_ShowString(unsigned char Line, unsigned char Column, unsigned char  i) 
 189          {
 190   1                              
 191   1                              LCD_SetCursor(Line, Column); // 光标
 192   1                              LCD_WriteData(i );
 193   1      }
 194          
 195          
 196          /**
 197           * @brief  全屏显示HD44780 内置字符
 198           * @param  0x...输入16进制
 199           * @retval 无
 200           */
 201          unsigned int Line,Column;
 202          void HD44780_DisplayChar(unsigned char pattern) {
 203   1          for (Line = 1; Line <= 2; Line++) {
 204   2              for (Column = 1; Column <= 16; Column++) {
 205   3                  LCD_USER_ShowString(Line, Column, pattern);
 206   3              }
 207   2          }
 208   1      }
 209          
 210          
 211          
 212          
 213          // 存入自定义字符函数：向LCD1602内部的CGRAM中存入自定义字符
 214          void LCD_USER_SetCustomChar(const char data  *table, unsigned char num) 
 215          {
 216   1              
 217   1                      switch (num) {
 218   2              case 1: LCD_WriteCommand(0x40); break;
 219   2              case 2: LCD_WriteCommand(0x48); break;
 220   2              case 3: LCD_WriteCommand(0x50); break;
 221   2              case 4: LCD_WriteCommand(0x58); break;
 222   2              case 5: LCD_WriteCommand(0x60); break;
 223   2              case 6: LCD_WriteCommand(0x68); break;
 224   2              case 7: LCD_WriteCommand(0x70); break;
 225   2              case 8: LCD_WriteCommand(0x78); break;
 226   2          }
 227   1          for (i = 0; i < 8; i++) {
 228   2              LCD_WriteData(table[i]);
 229   2          }
 230   1      }
 231          
 232          
 233          
 234          //写入CGRAM
 235          void Write_CGRAM(unsigned char  a[])
 236          {
 237   1              unsigned char i=64,k;
 238   1              LCD_WriteCommand(0x40);
 239   1              for(k=0;k<64;k++)
 240   1               {
C51 COMPILER V9.60.7.0   LCD1602                                                           10/09/2024 19:47:56 PAGE 5   

 241   2                LCD_WriteData(a[k]);
 242   2               }
 243   1      }
 244          
 245          
 246          
 247          
 248          


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    507    ----
   CONSTANT SIZE    =   ----    ----
   XDATA SIZE       =      4       7
   PDATA SIZE       =   ----    ----
   DATA SIZE        =   ----       2
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
