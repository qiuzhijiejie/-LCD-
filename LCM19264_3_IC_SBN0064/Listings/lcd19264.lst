C51 COMPILER V9.60.7.0   LCD19264                                                          12/14/2024 11:22:52 PAGE 1   


C51 COMPILER V9.60.7.0, COMPILATION OF MODULE LCD19264
OBJECT MODULE PLACED IN .\Objects\lcd19264.obj
COMPILER INVOKED BY: D:\KEIL_STM32\C51\BIN\C51.EXE lcd19264.c OPTIMIZE(8,SPEED) BROWSE DEBUG OBJECTEXTEND PRINT(.\Listin
                    -gs\lcd19264.lst) OBJECT(.\Objects\lcd19264.obj)

line level    source

   1          #include <INTRINS.H>    
   2          #include <STDIO.H>     
   3          #include <MATH.H>    
   4          #include <ABSACC.H>    
   5          #include <REG52.H>  
   6          #include "lcd19264.h"
   7          #include "picture.h"
   8          
   9          sbit RS  =P3^0;    
  10          sbit RW  =P3^1;     
  11          sbit E   =P3^2;     
  12          sbit CSB =P3^3;    
  13          sbit CSA =P3^4;    
  14          sbit RES =P3^5; 
  15          bit  Log =0;  
  16          sbit int0=P2^1;
  17          sbit KEY=P2^0;
  18          
  19          unsigned char Page;     
  20          unsigned char Col;  
  21           
  22          
  23          
  24          void BusyL(void)   
  25          {
  26   1          unsigned char flag = 0xFF; 
  27   1          
  28   1      
  29   1          CSB = 0;  
  30   1          CSA = 0;   
  31   1          RS = 0;    
  32   1          RW = 1;   
  33   1          P1 = 0xFF; 
  34   1      
  35   1          while ((flag & 0x80) == 0x80)
  36   1          {
  37   2              E = 1;    
  38   2              _nop_();     
  39   2              flag = P1;   
  40   2              E = 0;       
  41   2          }
  42   1      }
  43          
  44          
  45          void BusyM(void)   
  46          {
  47   1          unsigned char flag = 0xFF; 
  48   1      
  49   1          
  50   1          CSB = 0;   
  51   1          CSA = 1;   
  52   1          RS = 0;   
  53   1          RW = 1;    
  54   1      
C51 COMPILER V9.60.7.0   LCD19264                                                          12/14/2024 11:22:52 PAGE 2   

  55   1          P1 = 0xFF;
  56   1      
  57   1      
  58   1      
  59   1      
  60   1          while ((flag & 0x80) == 0x80)
  61   1          {
  62   2              E = 1;      
  63   2      
  64   2              _nop_();    
  65   2      
  66   2              flag = P1;   
  67   2      
  68   2              E = 0;       
  69   2              }
  70   1      }
  71             
  72          
  73            
  74          void BusyR(void)   
  75          {
  76   1              unsigned char  flag=0xff; 
  77   1              CSB= 1;   
  78   1              CSA= 0;     
  79   1              RS = 0;    
  80   1              RW = 1;   
  81   1              P1 = 0xFF;   
  82   1              while ((flag&0x80)==0x80)
  83   1              {
  84   2                      E=1;
  85   2                      _nop_();
  86   2                      flag=P1;
  87   2                      E=0;
  88   2              }  
  89   1      }   
  90             
  91             
  92          
  93          void Locatexy(void)   
  94          {   
  95   1               unsigned char x,y;   
  96   1               switch (Col&0xc0) /*  col.and.0xC0 */   
  97   1               {    
  98   2                        case 0: {BusyL();break;}  
  99   2                        case 0x40: {BusyM();break;}  
 100   2                        case 0x80: {BusyR();break;} 
 101   2               }   
 102   1               x = Col&0x3F|0x40; /* col.and.0x3f.or.Set X Address*/   
 103   1               y = Page&0x07|0xB8; /* row.and.0x07.or.set Page */   
 104   1                 
 105   1               RS = 0;      
 106   1               RW = 0;      
 107   1               P1 = y;  
 108   1               E  = 1;   
 109   1               _nop_();   
 110   1               E  = 0;   
 111   1               _nop_();   
 112   1               
 113   1               RS = 0;   
 114   1               RW = 0;   
 115   1               P1 = x;      
 116   1               E  = 1;   
C51 COMPILER V9.60.7.0   LCD19264                                                          12/14/2024 11:22:52 PAGE 3   

 117   1               _nop_();   
 118   1               E  = 0;   
 119   1               _nop_(); 
 120   1       
 121   1      
 122   1      }   
 123          
 124          //1-64    
 125          void WriteCommandL( unsigned char CommandByte )   
 126          {   
 127   1               BusyL();   
 128   1               P1 = CommandByte;   
 129   1               RS = 0;   
 130   1               RW = 0;   
 131   1               E  = 1;   
 132   1               _nop_();   
 133   1               E  = 0;   
 134   1               _nop_();   
 135   1      }   
 136          
 137          // 65-128      
 138          void WriteCommandM( unsigned char CommandByte )   
 139          {   
 140   1               BusyM();   
 141   1               P1 = CommandByte;   
 142   1               RS = 0;    
 143   1               RW = 0;   
 144   1               E  = 1;   
 145   1               _nop_();   
 146   1               E  = 0;   
 147   1               _nop_();   
 148   1      }   
 149          
 150          //129-192    
 151          void WriteCommandR( unsigned char CommandByte )   
 152          {   
 153   1               BusyR();   
 154   1               P1 = CommandByte;   
 155   1               RS = 0;   
 156   1               RW = 0;   
 157   1               E  = 1;   
 158   1               _nop_();   
 159   1               E  = 0;   
 160   1               _nop_();   
 161   1      }   
 162             
 163          
 164          /*Read data  */   
 165          unsigned char ReadData( void )   
 166          {   
 167   1               unsigned char DataByte;   
 168   1               Locatexy();   
 169   1               RS = 1;    
 170   1               RW = 1;  
 171   1               P1 = 0xFF;  
 172   1                _nop_();   
 173   1               
 174   1               E  = 1;    
 175   1               _nop_();   
 176   1      
 177   1               DataByte = P1;  
 178   1               E  = 0;   
C51 COMPILER V9.60.7.0   LCD19264                                                          12/14/2024 11:22:52 PAGE 4   

 179   1               _nop_();  
 180   1               CSB=1;
 181   1               CSA=1;
 182   1               return DataByte;   
 183   1      }   
 184             
 185          
 186          
 187          
 188           
 189          /*Write data   */   
 190          void WriteData( unsigned char DataByte )   
 191          {   
 192   1               Locatexy();   
 193   1               RS = 1;    
 194   1               RW = 0;     
 195   1               P1 = DataByte; 
 196   1               E  = 1;    
 197   1               _nop_();   
 198   1               E  = 0;   
 199   1               _nop_(); 
 200   1               CSB=1;
 201   1               CSA=1;
 202   1      }   
 203          
 204          
 205             
 206          void LcmClear( void )   
 207          {   
 208   1               Page = 0;   
 209   1               Col  = 0;   
 210   1               for(Page=0;Page<8;Page++)   
 211   1                for(Col=0;Col<192;Col++)   
 212   1                 WriteData(0);   
 213   1      }   
 214          
 215            
 216          void LcmInit( void )   
 217          {       
 218   1              RES=0; 
 219   1              Delay(10);
 220   1          RES=1;
 221   1      
 222   1               WriteCommandL(0x3f); //DISPALY ON
 223   1               WriteCommandM(0x3f);   
 224   1               WriteCommandR(0x3f);   
 225   1                 
 226   1               WriteCommandL(0xc0); //SET START ADDRESS  
 227   1               WriteCommandM(0xc0);   
 228   1               WriteCommandR(0xc0);   
 229   1                 
 230   1               WriteCommandL(0x3f); //DISPLAY ON  
 231   1               WriteCommandM(0x3f);   
 232   1               WriteCommandR(0x3f);   
 233   1                       
 234   1      }   
 235             
 236          void LcmPutDots( unsigned char DotByte,unsigned char DotByte1 )   
 237          {   
 238   1               Page = 0;   
 239   1               Col  = 0;   
 240   1               for(Page=0;Page<8;Page++)   
C51 COMPILER V9.60.7.0   LCD19264                                                          12/14/2024 11:22:52 PAGE 5   

 241   1               {   
 242   2                        for(Col=0;Col<192;Col++)   
 243   2                        {   
 244   3                                 WriteData( DotByte );
 245   3                                 Col++;
 246   3                                 WriteData( DotByte1 );  
 247   3                        } 
 248   2                      
 249   2               }   
 250   1      }   
 251             
 252          void LcmPutBMP( unsigned char *puts )   
 253          {   
 254   1               unsigned int X=0;         
 255   1               Page = 0;   
 256   1               Col  = 0;   
 257   1               for(Page=0;Page<8;Page++)   
 258   1               {   
 259   2                        for(Col=0;Col<192;Col++)   
 260   2                        {   
 261   3                                 WriteData( puts[X] );   
 262   3                                 X++;   
 263   3                        }   
 264   2               }   
 265   1      }   
 266             
 267          void LcmReverseBMP( void )   
 268          {   
 269   1       unsigned char temp;   
 270   1               Page = 0;   
 271   1               Col  = 0;   
 272   1               for(Page=0;Page<8;Page++)   
 273   1               {   
 274   2                        for(Col=0;Col<192;Col++)   
 275   2                        {   
 276   3                                 temp = ReadData();   
 277   3      
 278   3                                 temp = ReadData();   
 279   3                                 temp = ~temp;   
 280   3                                 WriteData(temp);   
 281   3                        }   
 282   2               }   
 283   1      }   
 284          
 285          void Display_8_8(unsigned char C[],unsigned char i)
 286          { 
 287   1               unsigned char k,num=0;
 288   1               num=i*0x08;
 289   1               for(k=0;k<0x08;k++)
 290   1               {
 291   2                        WriteData(C[num+k]);
 292   2                        Col+=0x01;
 293   2               } 
 294   1      
 295   1      }
 296          
 297          
 298          void Display_16_16(unsigned char F[],unsigned char i)
 299          {
 300   1               unsigned char k=0;
 301   1               unsigned int num=0;
 302   1               num=i*0x20;
C51 COMPILER V9.60.7.0   LCD19264                                                          12/14/2024 11:22:52 PAGE 6   

 303   1      
 304   1               for(k=0;k<0x10;k++)
 305   1               {
 306   2                        WriteData(F[num+k]);
 307   2                        Col+=0x01;
 308   2               } 
 309   1                Col-=0x10;
 310   1                Page+=0x01;   
 311   1                for(k=16;k<0x20;k++)
 312   1               {
 313   2                        WriteData(F[num+k]);
 314   2                        Col+=0x01;
 315   2               } 
 316   1                Page-=0x01; 
 317   1                Delay(10); 
 318   1      }
 319          
 320          void Display_character()
 321          { 
 322   1              unsigned char k,c, a=0;
 323   1               Col  = 0;
 324   1               for(c=0;c<8;c++)
 325   1               { 
 326   2                       Page = c; 
 327   2                      for(k=0;k<24;k++)
 328   2                      { 
 329   3                              Display_8_8(character,0);
 330   3                      }
 331   2                Col  = 0;
 332   2               }
 333   1                Delay(100);
 334   1      
 335   1               for(c=0;c<8;c++)
 336   1               { Page = c; 
 337   2                      for(k=0;k<24;k++)
 338   2                      { 
 339   3                              Display_8_8(character,1);
 340   3                      }
 341   2                Col  = 0;
 342   2               }
 343   1                Delay(100);
 344   1      
 345   1               for(c=0;c<8;c++)
 346   1               { Page = c; 
 347   2                      for(k=0;k<24;k++)
 348   2                      { 
 349   3                              Display_8_8(character,2);
 350   3                      }
 351   2                Col  = 0;
 352   2               }
 353   1                Delay(100);
 354   1      
 355   1      
 356   1      }
 357          
 358          
 359          
 360          void Display_Chinese()
 361          {
 362   1              unsigned char a=0;
 363   1      //       Page = 0;   
 364   1      //       Col  = 0;
C51 COMPILER V9.60.7.0   LCD19264                                                          12/14/2024 11:22:52 PAGE 7   

 365   1      //       for(a=0;a<12;a++)
 366   1      //       {
 367   1      //         Display_16_16(font,a);
 368   1      //       }
 369   1      //       Page = 2;   
 370   1      //       Col  = 0;
 371   1      //       for(a=12;a<24;a++)
 372   1      //       {
 373   1      //              Display_16_16(font,a);
 374   1      //       }
 375   1      
 376   1      //       Page = 4;   
 377   1      //       Col  = 0;
 378   1      //       for(a=24;a<36;a++)
 379   1      //       {
 380   1      //              Display_16_16(font,a);
 381   1      //       }
 382   1      
 383   1      //       Page = 6;   
 384   1      //       Col  = 0;
 385   1      //       for(a=36;a<48;a++)
 386   1      //      {
 387   1      //              Display_16_16(font,a);
 388   1      //       }
 389   1      
 390   1      
 391   1       Page = 1;   
 392   1       Col  = 16;
 393   1       for(a=0;a<10;a++)
 394   1       {
 395   2         Display_16_16(font,a);
 396   2       }
 397   1       
 398   1       Page = 4;   
 399   1       Col  = 16;
 400   1       for(a=10;a<20;a++)
 401   1       {
 402   2         Display_16_16(font,a);
 403   2       }
 404   1      
 405   1      }
 406           
 407          void Delay(unsigned int MS)   
 408          {   
 409   1               unsigned char us,usn;   
 410   1               while(MS!=0)   
 411   1               {   
 412   2                usn = 2; //for 12M    
 413   2                while(usn!=0)   
 414   2                {   
 415   3                         us=0xf6;   
 416   3                         while (us!=0){us--;};   
 417   3                         usn--;   
 418   3                }   
 419   2                      MS--;   
 420   2               }  
 421   1               while(Log);
 422   1      }   
 423          
 424          
 425          
 426          void Step(void) interrupt 0 using 0
C51 COMPILER V9.60.7.0   LCD19264                                                          12/14/2024 11:22:52 PAGE 8   

 427          { _nop_(); 
 428   1        _nop_(); 
 429   1        _nop_();
 430   1        _nop_();
 431   1        _nop_();
 432   1        _nop_();
 433   1        _nop_();
 434   1        _nop_();
 435   1        _nop_();
 436   1        _nop_();
 437   1        _nop_();
 438   1        _nop_();
 439   1        _nop_();
 440   1        _nop_();
 441   1        _nop_();
 442   1        _nop_();
 443   1        _nop_();
 444   1        _nop_();
 445   1        _nop_();
 446   1        _nop_(); 
 447   1        _nop_(); 
 448   1        _nop_();
 449   1        _nop_();
 450   1        _nop_();
 451   1        _nop_();
 452   1        _nop_();
 453   1        _nop_();
 454   1        _nop_();
 455   1        _nop_();
 456   1        _nop_();
 457   1        _nop_();
 458   1        _nop_();
 459   1        _nop_();
 460   1        _nop_();
 461   1        _nop_();
 462   1        _nop_();
 463   1        _nop_();
 464   1        _nop_();
 465   1              if(int0==0)
 466   1              Log=!Log;
 467   1          while(!int0);
 468   1        return;
 469   1      
 470   1      }
 471          
 472          unsigned char key()
 473          {
 474   1          if (KEY == 0) 
 475   1          {
 476   2              Delay(1);  
 477   2              if (KEY == 0) 
 478   2              {
 479   3                  while (KEY == 0);
 480   3                  return 1; 
 481   3              }
 482   2          }
 483   1          return 0; 
 484   1      }
 485          
 486          
 487          void DisplayPatterns() 
 488          {
C51 COMPILER V9.60.7.0   LCD19264                                                          12/14/2024 11:22:52 PAGE 9   

 489   1          static int step = 0; 
 490   1      
 491   1          switch (step) 
 492   1          {
 493   2              case 0: LcmPutDots(0x55, 0xaa); Delay(100); break;
 494   2              case 1: LcmPutDots(0xaa, 0x55); Delay(100); break;
 495   2              case 2: LcmPutDots(0x55, 0x55); Delay(100); break;
 496   2              case 3: LcmPutDots(0xaa, 0xaa); Delay(100); break;
 497   2              case 4: LcmPutDots(0xff, 0x00); Delay(100); break;
 498   2              case 5: LcmPutDots(0x00, 0xff); Delay(100); break;
 499   2              case 6: LcmPutDots(0xff, 0xff); Delay(100); break;
 500   2              case 7: LcmPutBMP(BMP0);Display_Chinese();Delay(100); break;
 501   2          }
 502   1          step++;
 503   1          if (step > 7) step = 0;
 504   1      }
 505          
 506          void HandleKey() 
 507          {
 508   1              unsigned char mode;
 509   1          mode++;           
 510   1          mode%=6;    
 511   1          LcmClear();       
 512   1          switch (mode) 
 513   1          {   
 514   2              case 0: LcmPutDots(0xff, 0x00); Delay(1000); break;
 515   2              case 1: LcmPutDots(0x55, 0xaa); Delay(1000); break;
 516   2              case 2: LcmPutDots(0x55, 0x55); Delay(1000); break;
 517   2              case 3: LcmPutDots(0x00, 0xff); Delay(1000); break;
 518   2              case 4: LcmPutDots(0xaa, 0xaa); Delay(1000); break;
 519   2              case 5: LcmPutBMP(BMP0);Display_Chinese(); Delay(1000); break;
 520   2      
 521   2      
 522   2          }
 523   1      }


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =   1049    ----
   CONSTANT SIZE    =   ----    ----
   XDATA SIZE       =   ----    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =      4      11
   IDATA SIZE       =   ----    ----
   BIT SIZE         =      1    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
