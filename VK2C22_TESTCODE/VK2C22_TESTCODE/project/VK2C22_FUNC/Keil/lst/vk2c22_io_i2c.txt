; generated by Component: ARM Compiler 5.05 update 2 (build 169) Tool: ArmCC [4d0f38]
; commandline ArmCC [--list --debug -c --asm --interleave -o.\obj\vk2c22_io_i2c.o --asm_dir=.\lst\ --list_dir=.\lst\ --depend=.\obj\vk2c22_io_i2c.d --cpu=Cortex-M4.fp --apcs=interwork -O0 --diag_suppress=9931 -I..\..\..\Library\CMSIS\Include -I..\..\..\Library\Device\Nuvoton\M451Series\Include -I..\..\..\Library\StdDriver\inc -I..\Bsp -I..\User -I..\lcd_driver -I..\exti_driver -I..\led_driver -I..\touch -I..\dotmatix_lcd -I..\KH -ID:\工作\A工程资料\LCD\抗干扰系列_VK2C\VK2C例程\VK2C22_TESTCODE\project\VK2C22_FUNC\Keil\RTE -IC:\Keil_v5\ARM\PACK\ARM\CMSIS\4.3.0\CMSIS\Include -D__UVISION_VERSION=515 -D_RTE_ --omf_browse=.\obj\vk2c22_io_i2c.crf ..\lcd_driver\VK2C22_IO_I2C.c]
                          THUMB

                          AREA ||.text||, CODE, READONLY, ALIGN=2

                  Delay_nuS PROC
;;;66     *******************************************************************************/
;;;67     void Delay_nuS(unsigned int n)	   
000000  e007              B        |L1.18|
                  |L1.2|
;;;68     {
;;;69     	unsigned char i;
;;;70     	while(n--)
;;;71     	{
;;;72     		i=10;
000002  210a              MOVS     r1,#0xa
;;;73     		while(i--)
000004  e000              B        |L1.8|
                  |L1.6|
;;;74     		{//nop指令根据单片机做相应的修改
;;;75     			__nop();
000006  bf00              NOP      
                  |L1.8|
000008  000a              MOVS     r2,r1                 ;73
00000a  f1a10301          SUB      r3,r1,#1              ;73
00000e  b2d9              UXTB     r1,r3                 ;73
000010  d1f9              BNE      |L1.6|
                  |L1.18|
000012  0002              MOVS     r2,r0                 ;70
000014  f1a00001          SUB      r0,r0,#1              ;70
000018  d1f3              BNE      |L1.2|
;;;76     		}
;;;77     	}
;;;78     }
00001a  4770              BX       lr
;;;79     /*******************************************************************************
                          ENDP

                  Delay_nmS PROC
;;;85     *******************************************************************************/
;;;86     void Delay_nmS(unsigned long int n)
00001c  b510              PUSH     {r4,lr}
;;;87     {
00001e  4604              MOV      r4,r0
;;;88     	while(n--)
000020  e003              B        |L1.42|
                  |L1.34|
;;;89     	{
;;;90     		Delay_nuS(1000);
000022  f44f707a          MOV      r0,#0x3e8
000026  f7fffffe          BL       Delay_nuS
                  |L1.42|
00002a  0020              MOVS     r0,r4                 ;88
00002c  f1a40401          SUB      r4,r4,#1              ;88
000030  d1f7              BNE      |L1.34|
;;;91     	}
;;;92     }
000032  bd10              POP      {r4,pc}
;;;93     /*******************************************************************************
                          ENDP

                  WriteCmdVK2C22 PROC
;;;99     *******************************************************************************/
;;;100    void  WriteCmdVK2C22(unsigned char Cmd)
000034  b510              PUSH     {r4,lr}
;;;101    {
000036  4604              MOV      r4,r0
;;;102    	VK2C22_I2C_WRCmd(Cmd);
000038  4620              MOV      r0,r4
00003a  f7fffffe          BL       VK2C22_I2C_WRCmd
;;;103    }
00003e  bd10              POP      {r4,pc}
;;;104    /*******************************************************************************
                          ENDP

                  WritenDataVK2C22 PROC
;;;112    *******************************************************************************/
;;;113    unsigned char WritenDataVK2C22(unsigned char Addr,unsigned char *Databuf,unsigned char Cnt)
000040  b570              PUSH     {r4-r6,lr}
;;;114    {
000042  4604              MOV      r4,r0
000044  460d              MOV      r5,r1
000046  4616              MOV      r6,r2
;;;115      VK2C22_I2C_WRDat(Addr,Databuf,Cnt);
000048  4632              MOV      r2,r6
00004a  4629              MOV      r1,r5
00004c  4620              MOV      r0,r4
00004e  f7fffffe          BL       VK2C22_I2C_WRDat
;;;116    	return 0;
000052  2000              MOVS     r0,#0
;;;117    }
000054  bd70              POP      {r4-r6,pc}
;;;118    /*******************************************************************************
                          ENDP

                  ReadnDataVK2C22 PROC
;;;126    *******************************************************************************/
;;;127    unsigned char  ReadnDataVK2C22(unsigned char Addr,unsigned char *Databuf,unsigned char Cnt)
000056  b570              PUSH     {r4-r6,lr}
;;;128    {
000058  4604              MOV      r4,r0
00005a  460d              MOV      r5,r1
00005c  4616              MOV      r6,r2
;;;129      VK2C22_I2C_RDDat(Addr,Databuf,Cnt);
00005e  4632              MOV      r2,r6
000060  4629              MOV      r1,r5
000062  4620              MOV      r0,r4
000064  f7fffffe          BL       VK2C22_I2C_RDDat
;;;130    	return 0;
000068  2000              MOVS     r0,#0
;;;131    }
00006a  bd70              POP      {r4-r6,pc}
;;;132    /*******************************************************************************
                          ENDP

                  VK2C22_DisAll PROC
;;;139    *******************************************************************************/
;;;140    void VK2C22_DisAll(unsigned char dat)
00006c  b570              PUSH     {r4-r6,lr}
;;;141    {
00006e  4605              MOV      r5,r0
;;;142    	unsigned char segi;
;;;143    	
;;;144    	for(segi=0;segi<22;segi++)
000070  2400              MOVS     r4,#0
000072  e003              B        |L1.124|
                  |L1.116|
;;;145    	{
;;;146    		VK2C22_dispram[segi]=dat;
000074  489a              LDR      r0,|L1.736|
000076  5505              STRB     r5,[r0,r4]
000078  1c60              ADDS     r0,r4,#1              ;144
00007a  b2c4              UXTB     r4,r0                 ;144
                  |L1.124|
00007c  2c16              CMP      r4,#0x16              ;144
00007e  dbf9              BLT      |L1.116|
;;;147    	}
;;;148    	WritenDataVK2C22(0,VK2C22_dispram,22);//这里送8bit数据对应2个SEG，每8bit数据地址加1，每8位数据1个ACK	
000080  2216              MOVS     r2,#0x16
000082  4997              LDR      r1,|L1.736|
000084  2000              MOVS     r0,#0
000086  f7fffffe          BL       WritenDataVK2C22
;;;149    	
;;;150    }
00008a  bd70              POP      {r4-r6,pc}
;;;151    /*******************************************************************************
                          ENDP

                  VK2C22_DisDotOn PROC
;;;158    *******************************************************************************/
;;;159    void VK2C22_DisDotOn(unsigned char seg,unsigned char com)
00008c  b5f8              PUSH     {r3-r7,lr}
;;;160    {
00008e  4604              MOV      r4,r0
000090  460d              MOV      r5,r1
;;;161    	unsigned char addrbit,tempdat;
;;;162    	
;;;163      if(seg%2==0)
000092  4620              MOV      r0,r4
000094  eb0471d0          ADD      r1,r4,r0,LSR #31
000098  1049              ASRS     r1,r1,#1
00009a  eba40141          SUB      r1,r4,r1,LSL #1
00009e  b919              CBNZ     r1,|L1.168|
;;;164    			addrbit=(1<<com);//这里送8位数据低4bit有效，每8bit数据地址加1，每8位数据1个ACK
0000a0  2001              MOVS     r0,#1
0000a2  40a8              LSLS     r0,r0,r5
0000a4  b2c6              UXTB     r6,r0
0000a6  e003              B        |L1.176|
                  |L1.168|
;;;165    		else
;;;166    			addrbit=(1<<(4+com));//这里送8位数据高4bit有效，每8bit数据地址加1，每8位数据1个ACK
0000a8  1d28              ADDS     r0,r5,#4
0000aa  2101              MOVS     r1,#1
0000ac  4081              LSLS     r1,r1,r0
0000ae  b2ce              UXTB     r6,r1
                  |L1.176|
;;;167    		tempdat=VK2C22_dispram[seg/2]|addrbit;
0000b0  4620              MOV      r0,r4
0000b2  eb0471d0          ADD      r1,r4,r0,LSR #31
0000b6  1049              ASRS     r1,r1,#1
0000b8  4a89              LDR      r2,|L1.736|
0000ba  5c51              LDRB     r1,[r2,r1]
0000bc  4331              ORRS     r1,r1,r6
0000be  9100              STR      r1,[sp,#0]
;;;168    	  VK2C22_dispram[seg/2]=tempdat;
0000c0  f89d1000          LDRB     r1,[sp,#0]
0000c4  eb0472d0          ADD      r2,r4,r0,LSR #31
0000c8  1052              ASRS     r2,r2,#1
0000ca  4b85              LDR      r3,|L1.736|
0000cc  5499              STRB     r1,[r3,r2]
;;;169    		WritenDataVK2C22(seg/2,&tempdat,1);	
0000ce  4627              MOV      r7,r4
0000d0  eb0471d7          ADD      r1,r4,r7,LSR #31
0000d4  f3c10047          UBFX     r0,r1,#1,#8
0000d8  2201              MOVS     r2,#1
0000da  4669              MOV      r1,sp
0000dc  f7fffffe          BL       WritenDataVK2C22
;;;170    }
0000e0  bdf8              POP      {r3-r7,pc}
;;;171    /*******************************************************************************
                          ENDP

                  VK2C22_DisDotOff PROC
;;;178    *******************************************************************************/
;;;179    void VK2C22_DisDotOff(unsigned char seg,unsigned char com)
0000e2  b5f8              PUSH     {r3-r7,lr}
;;;180    {
0000e4  4604              MOV      r4,r0
0000e6  460d              MOV      r5,r1
;;;181    	unsigned char addrbit,tempdat;
;;;182      
;;;183    	if(seg%2==0)
0000e8  4620              MOV      r0,r4
0000ea  eb0471d0          ADD      r1,r4,r0,LSR #31
0000ee  1049              ASRS     r1,r1,#1
0000f0  eba40141          SUB      r1,r4,r1,LSL #1
0000f4  b919              CBNZ     r1,|L1.254|
;;;184    			addrbit=(1<<com);//这里送8位数据低4bit有效，每8bit数据地址加1，每8位数据1个ACK
0000f6  2001              MOVS     r0,#1
0000f8  40a8              LSLS     r0,r0,r5
0000fa  b2c6              UXTB     r6,r0
0000fc  e003              B        |L1.262|
                  |L1.254|
;;;185    		else
;;;186    			addrbit=(1<<(4+com));//这里送8位数据高4bit有效，每8bit数据地址加1，每8位数据1个ACK
0000fe  1d28              ADDS     r0,r5,#4
000100  2101              MOVS     r1,#1
000102  4081              LSLS     r1,r1,r0
000104  b2ce              UXTB     r6,r1
                  |L1.262|
;;;187    		tempdat=VK2C22_dispram[seg/2]&~addrbit;
000106  4620              MOV      r0,r4
000108  eb0471d0          ADD      r1,r4,r0,LSR #31
00010c  1049              ASRS     r1,r1,#1
00010e  4a74              LDR      r2,|L1.736|
000110  5c51              LDRB     r1,[r2,r1]
000112  43b1              BICS     r1,r1,r6
000114  9100              STR      r1,[sp,#0]
;;;188    	  VK2C22_dispram[seg/2]=tempdat;
000116  f89d1000          LDRB     r1,[sp,#0]
00011a  eb0472d0          ADD      r2,r4,r0,LSR #31
00011e  1052              ASRS     r2,r2,#1
000120  4b6f              LDR      r3,|L1.736|
000122  5499              STRB     r1,[r3,r2]
;;;189    		WritenDataVK2C22(seg/2,&tempdat,1);
000124  4627              MOV      r7,r4
000126  eb0471d7          ADD      r1,r4,r7,LSR #31
00012a  f3c10047          UBFX     r0,r1,#1,#8
00012e  2201              MOVS     r2,#1
000130  4669              MOV      r1,sp
000132  f7fffffe          BL       WritenDataVK2C22
;;;190    	
;;;191    }
000136  bdf8              POP      {r3-r7,pc}
;;;192    /*******************************************************************************
                          ENDP

                  VK2C22_Enter_PowerOff PROC
;;;198    *******************************************************************************/
;;;199    void VK2C22_Enter_PowerOff(void)
000138  b510              PUSH     {r4,lr}
;;;200    {		
;;;201    	//	WriteCmdVK2C22(VK2C22_MODESET|BIAS_1_2|F_80HZ|RCOFF_LCDOFF);  //模式设置  1/2 Bais 1/4 Duty帧频率80Hz,内部系统振荡器开，lcd关显示
;;;202    	WriteCmdVK2C22(VK2C22_MODESET|BIAS_1_3|F_80HZ|RCOFF_LCDOFF);  //模式设置  1/3 Bais 1/4 Duty帧频率80Hz,内部系统振荡器开，lcd关显示
00013a  2080              MOVS     r0,#0x80
00013c  f7fffffe          BL       WriteCmdVK2C22
;;;203    //	WriteCmdVK2C22(VK2C22_MODESET|BIAS_1_2|F_160HZ|RCOFF_LCDOFF); //模式设置  1/2 Bais 1/4 Duty帧频率160Hz,内部系统振荡器开，lcd关显示
;;;204    //	WriteCmdVK2C22(VK2C22_MODESET|BIAS_1_3|F_160HZ|RCOFF_LCDOFF); //模式设置  1/3 Bais 1/4 Duty帧频?60Hz,内部系统振荡器开，lcd关显示
;;;205    }
000140  bd10              POP      {r4,pc}
;;;206    /*******************************************************************************
                          ENDP

                  VK2C22_Exit_PowerOff PROC
;;;212    *******************************************************************************/
;;;213    void VK2C22_Exit_PowerOff(void)
000142  b510              PUSH     {r4,lr}
;;;214    {	
;;;215    	//	WriteCmdVK2C22(VK2C22_MODESET|BIAS_1_2|F_80HZ|RCON_LCDON);  //模式设置  1/2 Bais 1/4 Duty帧频率80Hz,内部系统振荡器开，lcd开显示
;;;216    	WriteCmdVK2C22(VK2C22_MODESET|BIAS_1_3|F_80HZ|RCON_LCDON);  //模式设置  1/3 Bais 1/4 Duty帧频率80Hz,内部系统振荡器开，lcd开显示
000144  208c              MOVS     r0,#0x8c
000146  f7fffffe          BL       WriteCmdVK2C22
;;;217    //	WriteCmdVK2C22(VK2C22_MODESET|BIAS_1_2|F_160HZ|RCON_LCDON); //模式设置  1/2 Bais 1/4 Duty帧频率160Hz,内部系统振荡器开，lcd开显示
;;;218    //	WriteCmdVK2C22(VK2C22_MODESET|BIAS_1_3|F_160HZ|RCON_LCDON); //模式设置  1/3 Bais 1/4 Duty帧频?60Hz,内部系统振荡器开，lcd开显示
;;;219    }
00014a  bd10              POP      {r4,pc}
;;;220    /*******************************************************************************
                          ENDP

                  VK2C22_InitSequence PROC
;;;226    *******************************************************************************/
;;;227    void VK2C22_InitSequence(void)
00014c  b510              PUSH     {r4,lr}
;;;228    {	
;;;229    	//1/4 Duty
;;;230    //	WriteCmdVK2C22(VK2C22_MODESET|BIAS_1_2|F_80HZ|RCON_LCDON);  //模式设置  1/2 Bais 1/4 Duty帧频率80Hz,内部系统振荡器开，lcd开显示
;;;231    	WriteCmdVK2C22(VK2C22_MODESET|BIAS_1_3|F_80HZ|RCON_LCDON);  //模式设置  1/3 Bais 1/4 Duty帧频率80Hz,内部系统振荡器开，lcd开显示
00014e  208c              MOVS     r0,#0x8c
000150  f7fffffe          BL       WriteCmdVK2C22
;;;232    //	WriteCmdVK2C22(VK2C22_MODESET|BIAS_1_2|F_160HZ|RCON_LCDON); //模式设置  1/2 Bais 1/4 Duty帧频率160Hz,内部系统振荡器开，lcd开显示
;;;233    //	WriteCmdVK2C22(VK2C22_MODESET|BIAS_1_3|F_160HZ|RCON_LCDON); //模式设置  1/3 Bais 1/4 Duty帧频?60Hz,内部系统振荡器开，lcd开显示
;;;234    	VK2C22_maxcom=4;
000154  2004              MOVS     r0,#4
000156  4963              LDR      r1,|L1.740|
000158  7008              STRB     r0,[r1,#0]
;;;235    	WriteCmdVK2C22(VK2C22_BLINKSET|BLINK_OFF); 		//闪烁关闭	
00015a  20c0              MOVS     r0,#0xc0
00015c  f7fffffe          BL       WriteCmdVK2C22
;;;236    //	WriteCmdVK2C22(VK2C22_BLINKSET|BLINK_2HZ); 		//闪烁2HZ
;;;237    //	WriteCmdVK2C22(VK2C22_BLINKSET|BLINK_1HZ); 		//闪烁1HZ
;;;238    //	WriteCmdVK2C22(VK2C22_BLINKSET|BLINK_0D5HZ); 	//闪烁0.5HZ
;;;239    	//SEG/VLCD共用脚设为VLCD，内部电压调整功能关闭,VLCD和VDD短接VR=0偏置电压=VDD
;;;240    //	WriteCmdVK2C22(VK2C22_IVASET|VLCDSEL_IVAOFF_R0); 
;;;241    	//SEG/VLCD共用脚设为VLCD，内部电压调整功能关闭,VLCD和VDD串接电阻VR>0偏置电压=VLCD
;;;242    //	WriteCmdVK2C22(VK2C22_IVASET|VLCDSEL_IVAOFF_R1); 
;;;243    	//SEG/VLCD共用脚设为SEG，内部偏置电压调整：1/3bias=0.652VDD 1/4bias=0.714VDD
;;;244    	WriteCmdVK2C22(VK2C22_IVASET|SEGSEL_IVA02H);	 
000160  2072              MOVS     r0,#0x72
000162  f7fffffe          BL       WriteCmdVK2C22
;;;245    }
000166  bd10              POP      {r4,pc}
;;;246    /*******************************************************************************
                          ENDP

                  VK2C22_Init PROC
;;;252    *******************************************************************************/
;;;253    void VK2C22_Init(void)
000168  b510              PUSH     {r4,lr}
;;;254    {	
;;;255    	//初始化时序
;;;256    	VK2C22_InitSequence();
00016a  f7fffffe          BL       VK2C22_InitSequence
;;;257    }
00016e  bd10              POP      {r4,pc}
;;;258    
                          ENDP

                  VK2C22_Main PROC
;;;265    *******************************************************************************/
;;;266    void VK2C22_Main(void)
000170  f7fffffe          BL       VK2C22_Init
;;;267    {	
;;;268    	VK2C22_Init();
;;;269    	//上电后显示数据清0
;;;270    	VK2C22_DisAll(0x00);	
000174  2000              MOVS     r0,#0
000176  f7fffffe          BL       VK2C22_DisAll
;;;271    	while(1)
00017a  e0af              B        |L1.732|
                  |L1.380|
;;;272    	{			
;;;273    		VK2C22_DisAll(0xff);			//LCD全显
00017c  20ff              MOVS     r0,#0xff
00017e  f7fffffe          BL       VK2C22_DisAll
;;;274    		Delay_nmS(3000);					//延时1S
000182  f64030b8          MOV      r0,#0xbb8
000186  f7fffffe          BL       Delay_nmS
;;;275    	
;;;276    		VK2C22_DisAll(0x00);			//LCD全关
00018a  2000              MOVS     r0,#0
00018c  f7fffffe          BL       VK2C22_DisAll
;;;277    		Delay_nmS(3000);					//延时1S
000190  f64030b8          MOV      r0,#0xbb8
000194  f7fffffe          BL       Delay_nmS
;;;278    		
;;;279    
;;;280    		
;;;281    		//LCD半显
;;;282    		VK2C22_DisAll(0xAA);			
000198  20aa              MOVS     r0,#0xaa
00019a  f7fffffe          BL       VK2C22_DisAll
;;;283    		ReadnDataVK2C22(0,VK2C22_readbuf,22);	//读回RAM数据
00019e  2216              MOVS     r2,#0x16
0001a0  4951              LDR      r1,|L1.744|
0001a2  2000              MOVS     r0,#0
0001a4  f7fffffe          BL       ReadnDataVK2C22
;;;284    		Delay_nmS(1500);					//延时
0001a8  f24050dc          MOV      r0,#0x5dc
0001ac  f7fffffe          BL       Delay_nmS
;;;285    		VK2C22_DisAll(0x55);			
0001b0  2055              MOVS     r0,#0x55
0001b2  f7fffffe          BL       VK2C22_DisAll
;;;286    		ReadnDataVK2C22(0,VK2C22_readbuf,22);	//读回RAM数据
0001b6  2216              MOVS     r2,#0x16
0001b8  494b              LDR      r1,|L1.744|
0001ba  2000              MOVS     r0,#0
0001bc  f7fffffe          BL       ReadnDataVK2C22
;;;287    		Delay_nmS(1500);					//延时
0001c0  f24050dc          MOV      r0,#0x5dc
0001c4  f7fffffe          BL       Delay_nmS
;;;288    
;;;289    		//掉电
;;;290    		VK2C22_DisAll(0x00);			//LCD全关		
0001c8  2000              MOVS     r0,#0
0001ca  f7fffffe          BL       VK2C22_DisAll
;;;291    		VK2C22_Enter_PowerOff();	//进入掉电模式
0001ce  f7fffffe          BL       VK2C22_Enter_PowerOff
;;;292    		Delay_nmS(5000);					//延时5S		
0001d2  f2413088          MOV      r0,#0x1388
0001d6  f7fffffe          BL       Delay_nmS
;;;293    		VK2C22_Exit_PowerOff();	//退出掉电模式
0001da  f7fffffe          BL       VK2C22_Exit_PowerOff
;;;294    		
;;;295    		VK2C22_DisAll(0x00);			//LCD全关
0001de  2000              MOVS     r0,#0
0001e0  f7fffffe          BL       VK2C22_DisAll
;;;296    		Delay_nmS(500);					  //延时
0001e4  f44f70fa          MOV      r0,#0x1f4
0001e8  f7fffffe          BL       Delay_nmS
;;;297    		for(VK2C22_segi=0;VK2C22_segi<VK2C22_SEGNUM;VK2C22_segi++)//seg
0001ec  2000              MOVS     r0,#0
0001ee  493f              LDR      r1,|L1.748|
0001f0  7008              STRB     r0,[r1,#0]
0001f2  e027              B        |L1.580|
                  |L1.500|
;;;298    		{
;;;299    			for(VK2C22_comi=0;VK2C22_comi<VK2C22_maxcom;VK2C22_comi++)//com
0001f4  2000              MOVS     r0,#0
0001f6  493e              LDR      r1,|L1.752|
0001f8  7008              STRB     r0,[r1,#0]
0001fa  e018              B        |L1.558|
                  |L1.508|
;;;300    			{
;;;301    				VK2C22_DisDotOn(VK2C22_segtab[VK2C22_segi],VK2C22_comi);	//LCD单点点亮
0001fc  493d              LDR      r1,|L1.756|
0001fe  4a3b              LDR      r2,|L1.748|
000200  7812              LDRB     r2,[r2,#0]  ; VK2C22_segi
000202  5c88              LDRB     r0,[r1,r2]
000204  493a              LDR      r1,|L1.752|
000206  7809              LDRB     r1,[r1,#0]  ; VK2C22_comi
000208  f7fffffe          BL       VK2C22_DisDotOn
;;;302    				Delay_nmS(300);				//延时300mS
00020c  f44f7096          MOV      r0,#0x12c
000210  f7fffffe          BL       Delay_nmS
;;;303    				VK2C22_DisDotOff(VK2C22_segtab[VK2C22_segi],VK2C22_comi);	  //此行配合单点点亮函数实现单点点亮，屏蔽此行顺序点亮
000214  4937              LDR      r1,|L1.756|
000216  4a35              LDR      r2,|L1.748|
000218  7812              LDRB     r2,[r2,#0]  ; VK2C22_segi
00021a  5c88              LDRB     r0,[r1,r2]
00021c  4934              LDR      r1,|L1.752|
00021e  7809              LDRB     r1,[r1,#0]  ; VK2C22_comi
000220  f7fffffe          BL       VK2C22_DisDotOff
000224  4832              LDR      r0,|L1.752|
000226  7800              LDRB     r0,[r0,#0]            ;299  ; VK2C22_comi
000228  1c40              ADDS     r0,r0,#1              ;299
00022a  4931              LDR      r1,|L1.752|
00022c  7008              STRB     r0,[r1,#0]            ;299
                  |L1.558|
00022e  4830              LDR      r0,|L1.752|
000230  7800              LDRB     r0,[r0,#0]            ;299  ; VK2C22_comi
000232  492c              LDR      r1,|L1.740|
000234  7809              LDRB     r1,[r1,#0]            ;299  ; VK2C22_maxcom
000236  4288              CMP      r0,r1                 ;299
000238  dbe0              BLT      |L1.508|
00023a  482c              LDR      r0,|L1.748|
00023c  7800              LDRB     r0,[r0,#0]            ;297  ; VK2C22_segi
00023e  1c40              ADDS     r0,r0,#1              ;297
000240  492a              LDR      r1,|L1.748|
000242  7008              STRB     r0,[r1,#0]            ;297
                  |L1.580|
000244  4829              LDR      r0,|L1.748|
000246  7800              LDRB     r0,[r0,#0]            ;297  ; VK2C22_segi
000248  2828              CMP      r0,#0x28              ;297
00024a  dbd3              BLT      |L1.500|
;;;304    			}
;;;305    		}
;;;306    		
;;;307    		VK2C22_DisAll(0xff);			//LCD全显
00024c  20ff              MOVS     r0,#0xff
00024e  f7fffffe          BL       VK2C22_DisAll
;;;308    		Delay_nmS(500);					  //延时
000252  f44f70fa          MOV      r0,#0x1f4
000256  f7fffffe          BL       Delay_nmS
;;;309    		for(VK2C22_segi=0;VK2C22_segi<VK2C22_SEGNUM;VK2C22_segi++)//seg
00025a  2000              MOVS     r0,#0
00025c  4923              LDR      r1,|L1.748|
00025e  7008              STRB     r0,[r1,#0]
000260  e034              B        |L1.716|
                  |L1.610|
;;;310    		{
;;;311    			for(VK2C22_comi=0;VK2C22_comi<VK2C22_maxcom;VK2C22_comi++)//com
000262  2000              MOVS     r0,#0
000264  4922              LDR      r1,|L1.752|
000266  7008              STRB     r0,[r1,#0]
000268  e025              B        |L1.694|
                  |L1.618|
;;;312    			{
;;;313    				if(VK2C22_maxcom==8)
00026a  481e              LDR      r0,|L1.740|
00026c  7800              LDRB     r0,[r0,#0]  ; VK2C22_maxcom
00026e  2808              CMP      r0,#8
000270  d108              BNE      |L1.644|
;;;314    					VK2C22_DisDotOff(VK2C22_segtab[VK2C22_segi],VK2C22_comi);	//LCD单点关闭
000272  4920              LDR      r1,|L1.756|
000274  4a1d              LDR      r2,|L1.748|
000276  7812              LDRB     r2,[r2,#0]  ; VK2C22_segi
000278  5c88              LDRB     r0,[r1,r2]
00027a  491d              LDR      r1,|L1.752|
00027c  7809              LDRB     r1,[r1,#0]  ; VK2C22_comi
00027e  f7fffffe          BL       VK2C22_DisDotOff
000282  e007              B        |L1.660|
                  |L1.644|
;;;315    				else
;;;316    					VK2C22_DisDotOff(VK2C22_segtab[VK2C22_segi],VK2C22_comi);	//LCD单点关闭
000284  491b              LDR      r1,|L1.756|
000286  4a19              LDR      r2,|L1.748|
000288  7812              LDRB     r2,[r2,#0]  ; VK2C22_segi
00028a  5c88              LDRB     r0,[r1,r2]
00028c  4918              LDR      r1,|L1.752|
00028e  7809              LDRB     r1,[r1,#0]  ; VK2C22_comi
000290  f7fffffe          BL       VK2C22_DisDotOff
                  |L1.660|
;;;317    				Delay_nmS(300);				//延时300mS
000294  f44f7096          MOV      r0,#0x12c
000298  f7fffffe          BL       Delay_nmS
;;;318    				VK2C22_DisDotOn(VK2C22_segtab[VK2C22_segi],VK2C22_comi);  //此行配合单点关闭函数实现单点关闭，屏蔽此行顺序关闭
00029c  4915              LDR      r1,|L1.756|
00029e  4a13              LDR      r2,|L1.748|
0002a0  7812              LDRB     r2,[r2,#0]  ; VK2C22_segi
0002a2  5c88              LDRB     r0,[r1,r2]
0002a4  4912              LDR      r1,|L1.752|
0002a6  7809              LDRB     r1,[r1,#0]  ; VK2C22_comi
0002a8  f7fffffe          BL       VK2C22_DisDotOn
0002ac  4810              LDR      r0,|L1.752|
0002ae  7800              LDRB     r0,[r0,#0]            ;311  ; VK2C22_comi
0002b0  1c40              ADDS     r0,r0,#1              ;311
0002b2  490f              LDR      r1,|L1.752|
0002b4  7008              STRB     r0,[r1,#0]            ;311
                  |L1.694|
0002b6  480e              LDR      r0,|L1.752|
0002b8  7800              LDRB     r0,[r0,#0]            ;311  ; VK2C22_comi
0002ba  490a              LDR      r1,|L1.740|
0002bc  7809              LDRB     r1,[r1,#0]            ;311  ; VK2C22_maxcom
0002be  4288              CMP      r0,r1                 ;311
0002c0  dbd3              BLT      |L1.618|
0002c2  480a              LDR      r0,|L1.748|
0002c4  7800              LDRB     r0,[r0,#0]            ;309  ; VK2C22_segi
0002c6  1c40              ADDS     r0,r0,#1              ;309
0002c8  4908              LDR      r1,|L1.748|
0002ca  7008              STRB     r0,[r1,#0]            ;309
                  |L1.716|
0002cc  4807              LDR      r0,|L1.748|
0002ce  7800              LDRB     r0,[r0,#0]            ;309  ; VK2C22_segi
0002d0  2828              CMP      r0,#0x28              ;309
0002d2  dbc6              BLT      |L1.610|
;;;319    			}
;;;320    		}
;;;321    		Delay_nmS(1000);					  //延时
0002d4  f44f707a          MOV      r0,#0x3e8
0002d8  f7fffffe          BL       Delay_nmS
                  |L1.732|
0002dc  e74e              B        |L1.380|
;;;322    	}
;;;323    }
;;;324    /************************END OF FILE****/
                          ENDP

0002de  0000              DCW      0x0000
                  |L1.736|
                          DCD      VK2C22_dispram
                  |L1.740|
                          DCD      VK2C22_maxcom
                  |L1.744|
                          DCD      VK2C22_readbuf
                  |L1.748|
                          DCD      VK2C22_segi
                  |L1.752|
                          DCD      VK2C22_comi
                  |L1.756|
                          DCD      VK2C22_segtab

                          AREA ||.bss||, DATA, NOINIT, ALIGN=0

                  VK2C22_dispram
                          %        20
                  VK2C22_readbuf
                          %        20

                          AREA ||.data||, DATA, ALIGN=0

                  VK2C22_segtab
000000  00010203          DCB      0x00,0x01,0x02,0x03
000004  04050607          DCB      0x04,0x05,0x06,0x07
000008  08090a0b          DCB      0x08,0x09,0x0a,0x0b
00000c  0c0d0e0f          DCB      0x0c,0x0d,0x0e,0x0f
000010  10111213          DCB      0x10,0x11,0x12,0x13
000014  14151617          DCB      0x14,0x15,0x16,0x17
000018  18191a1b          DCB      0x18,0x19,0x1a,0x1b
00001c  1c1d1e1f          DCB      0x1c,0x1d,0x1e,0x1f
000020  20212223          DCB      0x20,0x21,0x22,0x23
000024  24252627          DCB      0x24,0x25,0x26,0x27
                  VK2C22_segi
000028  00                DCB      0x00
                  VK2C22_comi
000029  00                DCB      0x00
                  VK2C22_maxcom
00002a  00                DCB      0x00

;*** Start embedded assembler ***

#line 1 "..\\lcd_driver\\VK2C22_IO_I2C.c"
	AREA ||.rev16_text||, CODE
	THUMB
	EXPORT |__asm___15_VK2C22_IO_I2C_c_06e40452____REV16|
#line 114 "..\\..\\..\\Library\\CMSIS\\Include\\core_cmInstr.h"
|__asm___15_VK2C22_IO_I2C_c_06e40452____REV16| PROC
#line 115

 rev16 r0, r0
 bx lr
	ENDP
	AREA ||.revsh_text||, CODE
	THUMB
	EXPORT |__asm___15_VK2C22_IO_I2C_c_06e40452____REVSH|
#line 128
|__asm___15_VK2C22_IO_I2C_c_06e40452____REVSH| PROC
#line 129

 revsh r0, r0
 bx lr
	ENDP

;*** End   embedded assembler ***
