; generated by Component: ARM Compiler 5.05 update 2 (build 169) Tool: ArmCC [4d0f38]
; commandline ArmCC [--list --debug -c --asm --interleave -o.\obj\vk2c21a_io_i2c_dir.o --asm_dir=.\lst\ --list_dir=.\lst\ --depend=.\obj\vk2c21a_io_i2c_dir.d --cpu=Cortex-M4.fp --apcs=interwork -O0 --diag_suppress=9931 -I..\..\..\Library\CMSIS\Include -I..\..\..\Library\Device\Nuvoton\M451Series\Include -I..\..\..\Library\StdDriver\inc -I..\Bsp -I..\User -I..\lcd_driver -I..\exti_driver -I..\led_driver -I..\touch -I..\dotmatix_lcd -I..\KH -ID:\工作\A工程资料\LCD\抗干扰系列_VK2C\VK2C例程\VK2C22_TESTCODE\project\VK2C22_FUNC\Keil\RTE -IC:\Keil_v5\ARM\PACK\ARM\CMSIS\4.3.0\CMSIS\Include -D__UVISION_VERSION=515 -D_RTE_ --omf_browse=.\obj\vk2c21a_io_i2c_dir.crf ..\lcd_driver\VK2C21A_IO_I2C_DIR.c]
                          THUMB

                          AREA ||.text||, CODE, READONLY, ALIGN=2

                  Delay_nuS PROC
;;;85     *******************************************************************************/
;;;86     void Delay_nuS(unsigned int n)	   
000000  e007              B        |L1.18|
                  |L1.2|
;;;87     {
;;;88     	unsigned char i;
;;;89     	while(n--)
;;;90     	{
;;;91     		i=10;
000002  210a              MOVS     r1,#0xa
;;;92     		while(i--)
000004  e000              B        |L1.8|
                  |L1.6|
;;;93     		{//nop指令根据单片机做相应的修改
;;;94     			__nop();
000006  bf00              NOP      
                  |L1.8|
000008  000a              MOVS     r2,r1                 ;92
00000a  f1a10301          SUB      r3,r1,#1              ;92
00000e  b2d9              UXTB     r1,r3                 ;92
000010  d1f9              BNE      |L1.6|
                  |L1.18|
000012  0002              MOVS     r2,r0                 ;89
000014  f1a00001          SUB      r0,r0,#1              ;89
000018  d1f3              BNE      |L1.2|
;;;95     		}
;;;96     	}
;;;97     }
00001a  4770              BX       lr
;;;98     /*******************************************************************************
                          ENDP

                  Delay_nmS PROC
;;;104    *******************************************************************************/
;;;105    void Delay_nmS(unsigned long int n)
00001c  b510              PUSH     {r4,lr}
;;;106    {
00001e  4604              MOV      r4,r0
;;;107    	while(n--)
000020  e003              B        |L1.42|
                  |L1.34|
;;;108    	{
;;;109    		Delay_nuS(1000);
000022  f44f707a          MOV      r0,#0x3e8
000026  f7fffffe          BL       Delay_nuS
                  |L1.42|
00002a  0020              MOVS     r0,r4                 ;107
00002c  f1a40401          SUB      r4,r4,#1              ;107
000030  d1f7              BNE      |L1.34|
;;;110    	}
;;;111    }
000032  bd10              POP      {r4,pc}
;;;112    /*******************************************************************************
                          ENDP

                  VK2C21A_I2CStart PROC
;;;118    *******************************************************************************/
;;;119    void VK2C21A_I2CStart( void )
000034  b500              PUSH     {lr}
;;;120    {
;;;121      VK2C21A_SCL_H();
000036  2001              MOVS     r0,#1
000038  49fa              LDR      r1,|L1.1060|
00003a  6008              STR      r0,[r1,#0]
;;;122      VK2C21A_SDA_H();
00003c  1f09              SUBS     r1,r1,#4
00003e  6008              STR      r0,[r1,#0]
;;;123      Delay_nuS(VK2C21A_CLK);
000040  2064              MOVS     r0,#0x64
000042  f7fffffe          BL       Delay_nuS
;;;124      VK2C21A_SDA_L();
000046  2000              MOVS     r0,#0
000048  49f6              LDR      r1,|L1.1060|
00004a  1f09              SUBS     r1,r1,#4
00004c  6008              STR      r0,[r1,#0]
;;;125      Delay_nuS(VK2C21A_CLK);
00004e  2064              MOVS     r0,#0x64
000050  f7fffffe          BL       Delay_nuS
;;;126    }
000054  bd00              POP      {pc}
;;;127    /*******************************************************************************
                          ENDP

                  VK2C21A_I2CStop PROC
;;;133    *******************************************************************************/
;;;134    void VK2C21A_I2CStop( void )
000056  b500              PUSH     {lr}
;;;135    {
;;;136      VK2C21A_SCL_H();
000058  2001              MOVS     r0,#1
00005a  49f2              LDR      r1,|L1.1060|
00005c  6008              STR      r0,[r1,#0]
;;;137      VK2C21A_SDA_L();
00005e  2000              MOVS     r0,#0
000060  1f09              SUBS     r1,r1,#4
000062  6008              STR      r0,[r1,#0]
;;;138      Delay_nuS(VK2C21A_CLK);
000064  2064              MOVS     r0,#0x64
000066  f7fffffe          BL       Delay_nuS
;;;139      VK2C21A_SDA_H();
00006a  2001              MOVS     r0,#1
00006c  49ed              LDR      r1,|L1.1060|
00006e  1f09              SUBS     r1,r1,#4
000070  6008              STR      r0,[r1,#0]
;;;140      Delay_nuS(VK2C21A_CLK);
000072  2064              MOVS     r0,#0x64
000074  f7fffffe          BL       Delay_nuS
;;;141    }
000078  bd00              POP      {pc}
;;;142    /*******************************************************************************
                          ENDP

                  VK2C21A_I2CSlaveAck PROC
;;;148    *******************************************************************************/
;;;149    unsigned char VK2C21A_I2CSlaveAck( void )
00007a  b570              PUSH     {r4-r6,lr}
;;;150    {
;;;151      unsigned int TimeOut;
;;;152      unsigned char RetValue;
;;;153    	
;;;154    	VK2C21A_SET_SDA_IN();
00007c  2200              MOVS     r2,#0
00007e  f44f6100          MOV      r1,#0x800
000082  48e9              LDR      r0,|L1.1064|
000084  f7fffffe          BL       GPIO_SetMode
;;;155    //	VK2C21A_SDA_H();	
;;;156    	VK2C21A_SDA_L();	//SDA脚设为输入后，有些单片机需送1，有些单片机需送0
000088  2000              MOVS     r0,#0
00008a  49e6              LDR      r1,|L1.1060|
00008c  1f09              SUBS     r1,r1,#4
00008e  6008              STR      r0,[r1,#0]
;;;157      VK2C21A_SCL_L();
000090  1d09              ADDS     r1,r1,#4
000092  6008              STR      r0,[r1,#0]
;;;158      Delay_nuS(VK2C21A_CLK);
000094  2064              MOVS     r0,#0x64
000096  f7fffffe          BL       Delay_nuS
;;;159      VK2C21A_SCL_H();//第9个sclk上升沿
00009a  2001              MOVS     r0,#1
00009c  49e1              LDR      r1,|L1.1060|
00009e  6008              STR      r0,[r1,#0]
;;;160      TimeOut = 10000;
0000a0  f2427510          MOV      r5,#0x2710
;;;161      while( TimeOut-- > 0 )
0000a4  e007              B        |L1.182|
                  |L1.166|
;;;162      {
;;;163        if( VK2C21A_GET_SDA()!=0 )//读取ack
0000a6  48df              LDR      r0,|L1.1060|
0000a8  1f00              SUBS     r0,r0,#4
0000aa  6800              LDR      r0,[r0,#0]
0000ac  b108              CBZ      r0,|L1.178|
;;;164        {
;;;165          RetValue = 1;
0000ae  2401              MOVS     r4,#1
0000b0  e001              B        |L1.182|
                  |L1.178|
;;;166        }
;;;167        else
;;;168        {
;;;169          RetValue = 0;
0000b2  2400              MOVS     r4,#0
;;;170          break;
0000b4  e003              B        |L1.190|
                  |L1.182|
0000b6  0028              MOVS     r0,r5                 ;161
0000b8  f1a50501          SUB      r5,r5,#1              ;161
0000bc  d1f3              BNE      |L1.166|
                  |L1.190|
0000be  bf00              NOP      
;;;171        }
;;;172      } 
;;;173    	VK2C21A_SCL_L();
0000c0  2000              MOVS     r0,#0
0000c2  49d8              LDR      r1,|L1.1060|
0000c4  6008              STR      r0,[r1,#0]
;;;174      VK2C21A_SET_SDA_OUT();
0000c6  2201              MOVS     r2,#1
0000c8  14c9              ASRS     r1,r1,#19
0000ca  48d7              LDR      r0,|L1.1064|
0000cc  f7fffffe          BL       GPIO_SetMode
;;;175      return RetValue;
0000d0  4620              MOV      r0,r4
;;;176    }
0000d2  bd70              POP      {r4-r6,pc}
;;;177    /*******************************************************************************
                          ENDP

                  VK2C21A_I2CSendAck PROC
;;;183    *******************************************************************************/
;;;184    void VK2C21A_I2CSendAck( void )
0000d4  b500              PUSH     {lr}
;;;185    {
;;;186      VK2C21A_SCL_L();
0000d6  2000              MOVS     r0,#0
0000d8  49d2              LDR      r1,|L1.1060|
0000da  6008              STR      r0,[r1,#0]
;;;187      VK2C21A_SDA_L();
0000dc  1f09              SUBS     r1,r1,#4
0000de  6008              STR      r0,[r1,#0]
;;;188      Delay_nuS(VK2C21A_CLK*2);
0000e0  20c8              MOVS     r0,#0xc8
0000e2  f7fffffe          BL       Delay_nuS
;;;189      VK2C21A_SCL_H();
0000e6  2001              MOVS     r0,#1
0000e8  49ce              LDR      r1,|L1.1060|
0000ea  6008              STR      r0,[r1,#0]
;;;190      Delay_nuS(VK2C21A_CLK*2);
0000ec  20c8              MOVS     r0,#0xc8
0000ee  f7fffffe          BL       Delay_nuS
;;;191      VK2C21A_SCL_L();
0000f2  2000              MOVS     r0,#0
0000f4  49cb              LDR      r1,|L1.1060|
0000f6  6008              STR      r0,[r1,#0]
;;;192      VK2C21A_SDA_H();
0000f8  2001              MOVS     r0,#1
0000fa  1f09              SUBS     r1,r1,#4
0000fc  6008              STR      r0,[r1,#0]
;;;193    }
0000fe  bd00              POP      {pc}
;;;194    /*******************************************************************************
                          ENDP

                  VK2C21A_I2CSendNAck PROC
;;;200    *******************************************************************************/
;;;201    void VK2C21A_I2CSendNAck( void )
000100  b500              PUSH     {lr}
;;;202    {
;;;203      VK2C21A_SCL_L();
000102  2000              MOVS     r0,#0
000104  49c7              LDR      r1,|L1.1060|
000106  6008              STR      r0,[r1,#0]
;;;204      VK2C21A_SDA_H();
000108  2001              MOVS     r0,#1
00010a  1f09              SUBS     r1,r1,#4
00010c  6008              STR      r0,[r1,#0]
;;;205      Delay_nuS(VK2C21A_CLK);
00010e  2064              MOVS     r0,#0x64
000110  f7fffffe          BL       Delay_nuS
;;;206      VK2C21A_SCL_H();
000114  2001              MOVS     r0,#1
000116  49c3              LDR      r1,|L1.1060|
000118  6008              STR      r0,[r1,#0]
;;;207      Delay_nuS(VK2C21A_CLK);
00011a  2064              MOVS     r0,#0x64
00011c  f7fffffe          BL       Delay_nuS
;;;208    }
000120  bd00              POP      {pc}
;;;209    /*******************************************************************************
                          ENDP

                  VK2C21A_I2CWriteByte PROC
;;;215    *******************************************************************************/
;;;216    void VK2C21A_I2CWriteByte( unsigned char byte )
000122  b530              PUSH     {r4,r5,lr}
;;;217    {
000124  4604              MOV      r4,r0
;;;218    	unsigned char i=8;
000126  2508              MOVS     r5,#8
;;;219    	while (i--)
000128  e018              B        |L1.348|
                  |L1.298|
;;;220    	{ 
;;;221    		VK2C21A_SCL_L();
00012a  2000              MOVS     r0,#0
00012c  49bd              LDR      r1,|L1.1060|
00012e  6008              STR      r0,[r1,#0]
;;;222    		if(byte&0x80)
000130  f0040080          AND      r0,r4,#0x80
000134  b118              CBZ      r0,|L1.318|
;;;223    			VK2C21A_SDA_H();
000136  2001              MOVS     r0,#1
000138  1f09              SUBS     r1,r1,#4
00013a  6008              STR      r0,[r1,#0]
00013c  e003              B        |L1.326|
                  |L1.318|
;;;224    		else
;;;225    			VK2C21A_SDA_L();
00013e  2000              MOVS     r0,#0
000140  49b8              LDR      r1,|L1.1060|
000142  1f09              SUBS     r1,r1,#4
000144  6008              STR      r0,[r1,#0]
                  |L1.326|
;;;226    		byte<<=1; 
000146  0660              LSLS     r0,r4,#25
000148  0e04              LSRS     r4,r0,#24
;;;227    		Delay_nuS(VK2C21A_CLK);
00014a  2064              MOVS     r0,#0x64
00014c  f7fffffe          BL       Delay_nuS
;;;228    		VK2C21A_SCL_H();     
000150  2001              MOVS     r0,#1
000152  49b4              LDR      r1,|L1.1060|
000154  6008              STR      r0,[r1,#0]
;;;229    		Delay_nuS(VK2C21A_CLK);
000156  2064              MOVS     r0,#0x64
000158  f7fffffe          BL       Delay_nuS
                  |L1.348|
00015c  0028              MOVS     r0,r5                 ;219
00015e  f1a50101          SUB      r1,r5,#1              ;219
000162  b2cd              UXTB     r5,r1                 ;219
000164  d1e1              BNE      |L1.298|
;;;230    	}
;;;231    }
000166  bd30              POP      {r4,r5,pc}
;;;232    
                          ENDP

                  WriteCmdVK2C21A PROC
;;;240    **************************************************************/
;;;241    unsigned char WriteCmdVK2C21A(unsigned char cmd, unsigned char data )
000168  b570              PUSH     {r4-r6,lr}
;;;242    {
00016a  4605              MOV      r5,r0
00016c  460c              MOV      r4,r1
;;;243    	VK2C21A_I2CStart();
00016e  f7fffffe          BL       VK2C21A_I2CStart
;;;244    
;;;245    	VK2C21A_I2CWriteByte( VK2C21A_ADDRWR );
000172  2070              MOVS     r0,#0x70
000174  f7fffffe          BL       VK2C21A_I2CWriteByte
;;;246    	if( 1 == VK2C21A_I2CSlaveAck() )
000178  f7fffffe          BL       VK2C21A_I2CSlaveAck
00017c  2801              CMP      r0,#1
00017e  d103              BNE      |L1.392|
;;;247    	{
;;;248    		VK2C21A_I2CStop(); 
000180  f7fffffe          BL       VK2C21A_I2CStop
;;;249    		return 0;   
000184  2000              MOVS     r0,#0
                  |L1.390|
;;;250    	}
;;;251    	VK2C21A_I2CWriteByte( cmd );
;;;252    	if( 1 == VK2C21A_I2CSlaveAck() )
;;;253    	{
;;;254    		VK2C21A_I2CStop(); 
;;;255    		return 0;   
;;;256    	}
;;;257    	VK2C21A_I2CWriteByte( data );
;;;258    	if( 1 == VK2C21A_I2CSlaveAck() )
;;;259    	{
;;;260    		VK2C21A_I2CStop(); 
;;;261    		return 0;   
;;;262    	}
;;;263      VK2C21A_I2CStop();
;;;264     
;;;265      return 0;    //返回操作成败标志
;;;266    }
000186  bd70              POP      {r4-r6,pc}
                  |L1.392|
000188  4628              MOV      r0,r5                 ;251
00018a  f7fffffe          BL       VK2C21A_I2CWriteByte
00018e  f7fffffe          BL       VK2C21A_I2CSlaveAck
000192  2801              CMP      r0,#1                 ;252
000194  d103              BNE      |L1.414|
000196  f7fffffe          BL       VK2C21A_I2CStop
00019a  2000              MOVS     r0,#0                 ;255
00019c  e7f3              B        |L1.390|
                  |L1.414|
00019e  4620              MOV      r0,r4                 ;257
0001a0  f7fffffe          BL       VK2C21A_I2CWriteByte
0001a4  f7fffffe          BL       VK2C21A_I2CSlaveAck
0001a8  2801              CMP      r0,#1                 ;258
0001aa  d103              BNE      |L1.436|
0001ac  f7fffffe          BL       VK2C21A_I2CStop
0001b0  2000              MOVS     r0,#0                 ;261
0001b2  e7e8              B        |L1.390|
                  |L1.436|
0001b4  f7fffffe          BL       VK2C21A_I2CStop
0001b8  2000              MOVS     r0,#0                 ;265
0001ba  e7e4              B        |L1.390|
;;;267    /*******************************************************************************
                          ENDP

                  VK2C21A_I2CRDDat PROC
;;;273    *******************************************************************************/
;;;274    unsigned char VK2C21A_I2CRDDat( void )
0001bc  b570              PUSH     {r4-r6,lr}
;;;275    {
;;;276    	unsigned char i,RetValue,bit;
;;;277    	
;;;278    	VK2C21A_SET_SDA_IN();
0001be  2200              MOVS     r2,#0
0001c0  f44f6100          MOV      r1,#0x800
0001c4  4898              LDR      r0,|L1.1064|
0001c6  f7fffffe          BL       GPIO_SetMode
;;;279    	//VK2C21A_SDA_H();	
;;;280    	VK2C21A_SDA_L();	//SDA脚设为输入后，有些单片机需送1，有些单片机需送0
0001ca  2000              MOVS     r0,#0
0001cc  4995              LDR      r1,|L1.1060|
0001ce  1f09              SUBS     r1,r1,#4
0001d0  6008              STR      r0,[r1,#0]
;;;281    	RetValue=0;	
0001d2  2500              MOVS     r5,#0
;;;282      for( i=0; i<8; i++ )
0001d4  2400              MOVS     r4,#0
0001d6  e018              B        |L1.522|
                  |L1.472|
;;;283      {
;;;284    		VK2C21A_SCL_H(); 
0001d8  2001              MOVS     r0,#1
0001da  4992              LDR      r1,|L1.1060|
0001dc  6008              STR      r0,[r1,#0]
;;;285        Delay_nuS(VK2C21A_CLK);
0001de  2064              MOVS     r0,#0x64
0001e0  f7fffffe          BL       Delay_nuS
;;;286        if( 1 == VK2C21A_GET_SDA() )
0001e4  488f              LDR      r0,|L1.1060|
0001e6  1f00              SUBS     r0,r0,#4
0001e8  6800              LDR      r0,[r0,#0]
0001ea  2801              CMP      r0,#1
0001ec  d101              BNE      |L1.498|
;;;287          bit = 0X01;
0001ee  2601              MOVS     r6,#1
0001f0  e000              B        |L1.500|
                  |L1.498|
;;;288        else
;;;289          bit = 0x00;
0001f2  2600              MOVS     r6,#0
                  |L1.500|
;;;290          
;;;291        RetValue = (RetValue<<1)|bit;
0001f4  ea460045          ORR      r0,r6,r5,LSL #1
0001f8  b2c5              UXTB     r5,r0
;;;292        VK2C21A_SCL_L();
0001fa  2000              MOVS     r0,#0
0001fc  4989              LDR      r1,|L1.1060|
0001fe  6008              STR      r0,[r1,#0]
;;;293        Delay_nuS(VK2C21A_CLK);
000200  2064              MOVS     r0,#0x64
000202  f7fffffe          BL       Delay_nuS
000206  1c60              ADDS     r0,r4,#1              ;282
000208  b2c4              UXTB     r4,r0                 ;282
                  |L1.522|
00020a  2c08              CMP      r4,#8                 ;282
00020c  dbe4              BLT      |L1.472|
;;;294    	}
;;;295      VK2C21A_SET_SDA_OUT();
00020e  2201              MOVS     r2,#1
000210  02d1              LSLS     r1,r2,#11
000212  4885              LDR      r0,|L1.1064|
000214  f7fffffe          BL       GPIO_SetMode
;;;296      return RetValue;
000218  4628              MOV      r0,r5
;;;297    }
00021a  bd70              POP      {r4-r6,pc}
;;;298    /*******************************************************************************
                          ENDP

                  WritenDataVK2C21A PROC
;;;306    *******************************************************************************/
;;;307    unsigned char  WritenDataVK2C21A(unsigned char Addr,unsigned char *Databuf,unsigned char Cnt)
00021c  e92d41f0          PUSH     {r4-r8,lr}
;;;308    {
000220  4607              MOV      r7,r0
000222  460c              MOV      r4,r1
000224  4616              MOV      r6,r2
;;;309    	unsigned char n;
;;;310    	
;;;311    	//START信号	
;;;312    	VK2C21A_I2CStart(); 									
000226  f7fffffe          BL       VK2C21A_I2CStart
;;;313    	//SLAVE地址
;;;314    	VK2C21A_I2CWriteByte(VK2C21A_ADDRWR); 	
00022a  2070              MOVS     r0,#0x70
00022c  f7fffffe          BL       VK2C21A_I2CWriteByte
;;;315    	if( 1 == VK2C21A_I2CSlaveAck() )
000230  f7fffffe          BL       VK2C21A_I2CSlaveAck
000234  2801              CMP      r0,#1
000236  d104              BNE      |L1.578|
;;;316    	{
;;;317    		VK2C21A_I2CStop();													
000238  f7fffffe          BL       VK2C21A_I2CStop
;;;318    		return 0;										
00023c  2000              MOVS     r0,#0
                  |L1.574|
;;;319    	}
;;;320    	//写显示RAM命令
;;;321    	VK2C21A_I2CWriteByte(VK2C21A_RWRAM); 						
;;;322    	if( 1 == VK2C21A_I2CSlaveAck() )
;;;323    	{
;;;324    		VK2C21A_I2CStop();													
;;;325    		return 0;
;;;326    	}
;;;327    	//显示RAM起始地址
;;;328    	VK2C21A_I2CWriteByte(Addr); 						
;;;329    	if( 1 == VK2C21A_I2CSlaveAck() )
;;;330    	{
;;;331    		VK2C21A_I2CStop();													
;;;332    		return 0;
;;;333    	}
;;;334    	//发送Cnt个数据到显示RAM
;;;335    	for(n=0;n<Cnt;n++)
;;;336    	{ 
;;;337    		VK2C21A_I2CWriteByte(*Databuf++);
;;;338    		if( VK2C21A_I2CSlaveAck()==1 )
;;;339    		{
;;;340    			VK2C21A_I2CStop();													
;;;341    			return 0;
;;;342    		}
;;;343    	}
;;;344    	//STOP信号
;;;345    	 VK2C21A_I2CStop();											
;;;346    	 return 0;    
;;;347    }
00023e  e8bd81f0          POP      {r4-r8,pc}
                  |L1.578|
000242  2080              MOVS     r0,#0x80              ;321
000244  f7fffffe          BL       VK2C21A_I2CWriteByte
000248  f7fffffe          BL       VK2C21A_I2CSlaveAck
00024c  2801              CMP      r0,#1                 ;322
00024e  d103              BNE      |L1.600|
000250  f7fffffe          BL       VK2C21A_I2CStop
000254  2000              MOVS     r0,#0                 ;325
000256  e7f2              B        |L1.574|
                  |L1.600|
000258  4638              MOV      r0,r7                 ;328
00025a  f7fffffe          BL       VK2C21A_I2CWriteByte
00025e  f7fffffe          BL       VK2C21A_I2CSlaveAck
000262  2801              CMP      r0,#1                 ;329
000264  d103              BNE      |L1.622|
000266  f7fffffe          BL       VK2C21A_I2CStop
00026a  2000              MOVS     r0,#0                 ;332
00026c  e7e7              B        |L1.574|
                  |L1.622|
00026e  2500              MOVS     r5,#0                 ;335
000270  e00d              B        |L1.654|
                  |L1.626|
000272  f8140b01          LDRB     r0,[r4],#1            ;337
000276  f7fffffe          BL       VK2C21A_I2CWriteByte
00027a  f7fffffe          BL       VK2C21A_I2CSlaveAck
00027e  2801              CMP      r0,#1                 ;338
000280  d103              BNE      |L1.650|
000282  f7fffffe          BL       VK2C21A_I2CStop
000286  2000              MOVS     r0,#0                 ;341
000288  e7d9              B        |L1.574|
                  |L1.650|
00028a  1c68              ADDS     r0,r5,#1              ;335
00028c  b2c5              UXTB     r5,r0                 ;335
                  |L1.654|
00028e  42b5              CMP      r5,r6                 ;335
000290  dbef              BLT      |L1.626|
000292  f7fffffe          BL       VK2C21A_I2CStop
000296  2000              MOVS     r0,#0                 ;346
000298  e7d1              B        |L1.574|
;;;348    /*******************************************************************************
                          ENDP

                  ReadnDataVK2C21A PROC
;;;356    *******************************************************************************/
;;;357    unsigned char  ReadnDataVK2C21A(unsigned char Addr,unsigned char *Databuf,unsigned char Cnt)
00029a  e92d41f0          PUSH     {r4-r8,lr}
;;;358    {
00029e  4607              MOV      r7,r0
0002a0  460c              MOV      r4,r1
0002a2  4616              MOV      r6,r2
;;;359    	unsigned char n;
;;;360    	
;;;361    	//START信号	
;;;362    	VK2C21A_I2CStart(); 									
0002a4  f7fffffe          BL       VK2C21A_I2CStart
;;;363    	//SLAVE地址写
;;;364    	VK2C21A_I2CWriteByte(VK2C21A_ADDRWR); 	
0002a8  2070              MOVS     r0,#0x70
0002aa  f7fffffe          BL       VK2C21A_I2CWriteByte
;;;365    	if( 1 == VK2C21A_I2CSlaveAck() )
0002ae  f7fffffe          BL       VK2C21A_I2CSlaveAck
0002b2  2801              CMP      r0,#1
0002b4  d104              BNE      |L1.704|
;;;366    	{
;;;367    		VK2C21A_I2CStop();													
0002b6  f7fffffe          BL       VK2C21A_I2CStop
;;;368    		return 0;										
0002ba  2000              MOVS     r0,#0
                  |L1.700|
;;;369    	}                        
;;;370    	//写显示RAM命令
;;;371    	VK2C21A_I2CWriteByte(VK2C21A_RWRAM); 						
;;;372    	if( 1 == VK2C21A_I2CSlaveAck() )
;;;373    	{
;;;374    		VK2C21A_I2CStop();													
;;;375    		return 0;
;;;376    	}
;;;377    	//显示RAM起始地址
;;;378    	VK2C21A_I2CWriteByte(Addr); 						
;;;379    	if( 1 == VK2C21A_I2CSlaveAck() )
;;;380    	{
;;;381    		VK2C21A_I2CStop();													
;;;382    		return 0;
;;;383    	}
;;;384    	
;;;385    	//STOP信号
;;;386    	VK2C21A_I2CStop();	
;;;387    	//START信号	
;;;388    	VK2C21A_I2CStart(); 									
;;;389    	//SLAVE地址读
;;;390    	VK2C21A_I2CWriteByte(VK2C21A_ADDRRD); 	
;;;391    		if( 1 == VK2C21A_I2CSlaveAck() )
;;;392    	{
;;;393    		VK2C21A_I2CStop();													
;;;394    		return 0;										
;;;395    	}  
;;;396    	//读Cnt个数据到显示RAM
;;;397    	for(n=0;n<Cnt-1;n++)
;;;398    	{ 
;;;399    		*Databuf++=VK2C21A_I2CRDDat();
;;;400    		VK2C21A_I2CSendAck();
;;;401    	}
;;;402    	*Databuf++=VK2C21A_I2CRDDat();
;;;403    	VK2C21A_I2CSendNAck();
;;;404    	//STOP信号
;;;405    	VK2C21A_I2CStop();											
;;;406    	return 0;    
;;;407    }
0002bc  e8bd81f0          POP      {r4-r8,pc}
                  |L1.704|
0002c0  2080              MOVS     r0,#0x80              ;371
0002c2  f7fffffe          BL       VK2C21A_I2CWriteByte
0002c6  f7fffffe          BL       VK2C21A_I2CSlaveAck
0002ca  2801              CMP      r0,#1                 ;372
0002cc  d103              BNE      |L1.726|
0002ce  f7fffffe          BL       VK2C21A_I2CStop
0002d2  2000              MOVS     r0,#0                 ;375
0002d4  e7f2              B        |L1.700|
                  |L1.726|
0002d6  4638              MOV      r0,r7                 ;378
0002d8  f7fffffe          BL       VK2C21A_I2CWriteByte
0002dc  f7fffffe          BL       VK2C21A_I2CSlaveAck
0002e0  2801              CMP      r0,#1                 ;379
0002e2  d103              BNE      |L1.748|
0002e4  f7fffffe          BL       VK2C21A_I2CStop
0002e8  2000              MOVS     r0,#0                 ;382
0002ea  e7e7              B        |L1.700|
                  |L1.748|
0002ec  f7fffffe          BL       VK2C21A_I2CStop
0002f0  f7fffffe          BL       VK2C21A_I2CStart
0002f4  2071              MOVS     r0,#0x71              ;390
0002f6  f7fffffe          BL       VK2C21A_I2CWriteByte
0002fa  f7fffffe          BL       VK2C21A_I2CSlaveAck
0002fe  2801              CMP      r0,#1                 ;391
000300  d103              BNE      |L1.778|
000302  f7fffffe          BL       VK2C21A_I2CStop
000306  2000              MOVS     r0,#0                 ;394
000308  e7d8              B        |L1.700|
                  |L1.778|
00030a  2500              MOVS     r5,#0                 ;397
00030c  e007              B        |L1.798|
                  |L1.782|
00030e  f7fffffe          BL       VK2C21A_I2CRDDat
000312  f8040b01          STRB     r0,[r4],#1            ;399
000316  f7fffffe          BL       VK2C21A_I2CSendAck
00031a  1c68              ADDS     r0,r5,#1              ;397
00031c  b2c5              UXTB     r5,r0                 ;397
                  |L1.798|
00031e  1e70              SUBS     r0,r6,#1              ;397
000320  42a8              CMP      r0,r5                 ;397
000322  dcf4              BGT      |L1.782|
000324  f7fffffe          BL       VK2C21A_I2CRDDat
000328  f8040b01          STRB     r0,[r4],#1            ;402
00032c  f7fffffe          BL       VK2C21A_I2CSendNAck
000330  f7fffffe          BL       VK2C21A_I2CStop
000334  2000              MOVS     r0,#0                 ;406
000336  e7c1              B        |L1.700|
;;;408    /*******************************************************************************
                          ENDP

                  VK2C21A_DisAll PROC
;;;415    *******************************************************************************/
;;;416    void VK2C21A_DisAll(unsigned char dat)
000338  b570              PUSH     {r4-r6,lr}
;;;417    {
00033a  4605              MOV      r5,r0
;;;418    	unsigned char segi;
;;;419    	
;;;420    	if(VK2C21A_maxcom==4)
00033c  483b              LDR      r0,|L1.1068|
00033e  7800              LDRB     r0,[r0,#0]  ; VK2C21A_maxcom
000340  2804              CMP      r0,#4
000342  d10d              BNE      |L1.864|
;;;421    	{
;;;422    		for(segi=0;segi<10;segi++)
000344  2400              MOVS     r4,#0
000346  e003              B        |L1.848|
                  |L1.840|
;;;423    		{				
;;;424    			VK2C21A_dispram[segi]=dat;
000348  4839              LDR      r0,|L1.1072|
00034a  5505              STRB     r5,[r0,r4]
00034c  1c60              ADDS     r0,r4,#1              ;422
00034e  b2c4              UXTB     r4,r0                 ;422
                  |L1.848|
000350  2c0a              CMP      r4,#0xa               ;422
000352  dbf9              BLT      |L1.840|
;;;425    		}
;;;426    		WritenDataVK2C21A(0,VK2C21A_dispram,10);//这里送8bit数据对应2个SEG，每8bit数据地址加1，每8位数据1个ACK
000354  220a              MOVS     r2,#0xa
000356  4936              LDR      r1,|L1.1072|
000358  2000              MOVS     r0,#0
00035a  f7fffffe          BL       WritenDataVK2C21A
00035e  e00c              B        |L1.890|
                  |L1.864|
;;;427    	}
;;;428    	else
;;;429    	{
;;;430    		for(segi=0;segi<16;segi++)
000360  2400              MOVS     r4,#0
000362  e003              B        |L1.876|
                  |L1.868|
;;;431    		{
;;;432    			VK2C21A_dispram[segi]=dat;
000364  4832              LDR      r0,|L1.1072|
000366  5505              STRB     r5,[r0,r4]
000368  1c60              ADDS     r0,r4,#1              ;430
00036a  b2c4              UXTB     r4,r0                 ;430
                  |L1.876|
00036c  2c10              CMP      r4,#0x10              ;430
00036e  dbf9              BLT      |L1.868|
;;;433    		}
;;;434    		WritenDataVK2C21A(0,VK2C21A_dispram,16);//这里送8bit数据对应1个SEG，每8bit数据地址加1，每8位数据1个ACK
000370  2210              MOVS     r2,#0x10
000372  492f              LDR      r1,|L1.1072|
000374  2000              MOVS     r0,#0
000376  f7fffffe          BL       WritenDataVK2C21A
                  |L1.890|
;;;435    	}
;;;436    }
00037a  bd70              POP      {r4-r6,pc}
;;;437    /*******************************************************************************
                          ENDP

                  VK2C21A_DisDotOn PROC
;;;444    *******************************************************************************/
;;;445    void VK2C21A_DisDotOn(unsigned char seg,unsigned char com)
00037c  b5f8              PUSH     {r3-r7,lr}
;;;446    {
00037e  4604              MOV      r4,r0
000380  460e              MOV      r6,r1
;;;447    	unsigned char addrbit,tempdat;
;;;448    	
;;;449    	//判断8COM还是4COM
;;;450    	if(VK2C21A_maxcom==4)
000382  482a              LDR      r0,|L1.1068|
000384  7800              LDRB     r0,[r0,#0]  ; VK2C21A_maxcom
000386  2804              CMP      r0,#4
000388  d127              BNE      |L1.986|
;;;451    	{
;;;452    		if(seg%2==0)
00038a  4620              MOV      r0,r4
00038c  eb0471d0          ADD      r1,r4,r0,LSR #31
000390  1049              ASRS     r1,r1,#1
000392  eba40141          SUB      r1,r4,r1,LSL #1
000396  b919              CBNZ     r1,|L1.928|
;;;453    			addrbit=(1<<com);//这里送8位数据低4bit有效，每8bit数据地址加1，每8位数据1个ACK
000398  2001              MOVS     r0,#1
00039a  40b0              LSLS     r0,r0,r6
00039c  b2c5              UXTB     r5,r0
00039e  e003              B        |L1.936|
                  |L1.928|
;;;454    		else
;;;455    			addrbit=(1<<(4+com));//这里送8位数据高4bit有效，每8bit数据地址加1，每8位数据1个ACK
0003a0  1d30              ADDS     r0,r6,#4
0003a2  2101              MOVS     r1,#1
0003a4  4081              LSLS     r1,r1,r0
0003a6  b2cd              UXTB     r5,r1
                  |L1.936|
;;;456    		tempdat=VK2C21A_dispram[seg/2]|addrbit;
0003a8  4620              MOV      r0,r4
0003aa  eb0471d0          ADD      r1,r4,r0,LSR #31
0003ae  1049              ASRS     r1,r1,#1
0003b0  4a1f              LDR      r2,|L1.1072|
0003b2  5c51              LDRB     r1,[r2,r1]
0003b4  4329              ORRS     r1,r1,r5
0003b6  9100              STR      r1,[sp,#0]
;;;457    	  VK2C21A_dispram[seg/2]=tempdat;
0003b8  f89d1000          LDRB     r1,[sp,#0]
0003bc  eb0472d0          ADD      r2,r4,r0,LSR #31
0003c0  1052              ASRS     r2,r2,#1
0003c2  4b1b              LDR      r3,|L1.1072|
0003c4  5499              STRB     r1,[r3,r2]
;;;458    		WritenDataVK2C21A(seg/2,&tempdat,1);
0003c6  4627              MOV      r7,r4
0003c8  eb0471d7          ADD      r1,r4,r7,LSR #31
0003cc  f3c10047          UBFX     r0,r1,#1,#8
0003d0  2201              MOVS     r2,#1
0003d2  4669              MOV      r1,sp
0003d4  f7fffffe          BL       WritenDataVK2C21A
0003d8  e011              B        |L1.1022|
                  |L1.986|
;;;459    	}
;;;460    	else
;;;461    	{
;;;462    		seg=seg-4; //8com seg4为起始地址=0x00
0003da  1f20              SUBS     r0,r4,#4
0003dc  b2c4              UXTB     r4,r0
;;;463    		addrbit=(1<<com);
0003de  2001              MOVS     r0,#1
0003e0  40b0              LSLS     r0,r0,r6
0003e2  b2c5              UXTB     r5,r0
;;;464    		tempdat=VK2C21A_dispram[seg]|addrbit;
0003e4  4812              LDR      r0,|L1.1072|
0003e6  5d00              LDRB     r0,[r0,r4]
0003e8  4328              ORRS     r0,r0,r5
0003ea  9000              STR      r0,[sp,#0]
;;;465    	  VK2C21A_dispram[seg]=tempdat;
0003ec  f89d0000          LDRB     r0,[sp,#0]
0003f0  490f              LDR      r1,|L1.1072|
0003f2  5508              STRB     r0,[r1,r4]
;;;466    		WritenDataVK2C21A(seg,&tempdat,1);//这里送8位数据低4bit有效，每8bit数据地址加1，每8位数据1个ACK
0003f4  2201              MOVS     r2,#1
0003f6  4669              MOV      r1,sp
0003f8  4620              MOV      r0,r4
0003fa  f7fffffe          BL       WritenDataVK2C21A
                  |L1.1022|
;;;467    	}
;;;468    }
0003fe  bdf8              POP      {r3-r7,pc}
;;;469    /*******************************************************************************
                          ENDP

                  VK2C21A_DisDotOff PROC
;;;476    *******************************************************************************/
;;;477    void VK2C21A_DisDotOff(unsigned char seg,unsigned char com)
000400  b5f8              PUSH     {r3-r7,lr}
;;;478    {
000402  4604              MOV      r4,r0
000404  460e              MOV      r6,r1
;;;479    	unsigned char addrbit,tempdat;
;;;480    	
;;;481    	//判断8COM还是4COM
;;;482    	if(VK2C21A_maxcom==4)
000406  4809              LDR      r0,|L1.1068|
000408  7800              LDRB     r0,[r0,#0]  ; VK2C21A_maxcom
00040a  2804              CMP      r0,#4
00040c  d12f              BNE      |L1.1134|
;;;483    	{
;;;484    		if(seg%2==0)
00040e  4620              MOV      r0,r4
000410  eb0471d0          ADD      r1,r4,r0,LSR #31
000414  1049              ASRS     r1,r1,#1
000416  eba40141          SUB      r1,r4,r1,LSL #1
00041a  b959              CBNZ     r1,|L1.1076|
;;;485    			addrbit=(1<<com);//这里送8位数据低4bit有效，每8bit数据地址加1，每8位数据1个ACK
00041c  2001              MOVS     r0,#1
00041e  40b0              LSLS     r0,r0,r6
000420  b2c5              UXTB     r5,r0
000422  e00b              B        |L1.1084|
                  |L1.1060|
                          DCD      0x40004870
                  |L1.1064|
                          DCD      0x40004040
                  |L1.1068|
                          DCD      VK2C21A_maxcom
                  |L1.1072|
                          DCD      VK2C21A_dispram
                  |L1.1076|
;;;486    		else
;;;487    			addrbit=(1<<(4+com));//这里送8位数据高4bit有效，每8bit数据地址加1，每8位数据1个ACK
000434  1d30              ADDS     r0,r6,#4
000436  2101              MOVS     r1,#1
000438  4081              LSLS     r1,r1,r0
00043a  b2cd              UXTB     r5,r1
                  |L1.1084|
;;;488    		tempdat=VK2C21A_dispram[seg/2]&~addrbit;
00043c  4620              MOV      r0,r4
00043e  eb0471d0          ADD      r1,r4,r0,LSR #31
000442  1049              ASRS     r1,r1,#1
000444  4a97              LDR      r2,|L1.1700|
000446  5c51              LDRB     r1,[r2,r1]
000448  43a9              BICS     r1,r1,r5
00044a  9100              STR      r1,[sp,#0]
;;;489    	  VK2C21A_dispram[seg/2]=tempdat;
00044c  f89d1000          LDRB     r1,[sp,#0]
000450  eb0472d0          ADD      r2,r4,r0,LSR #31
000454  1052              ASRS     r2,r2,#1
000456  4b93              LDR      r3,|L1.1700|
000458  5499              STRB     r1,[r3,r2]
;;;490    		WritenDataVK2C21A(seg/2,&tempdat,1);
00045a  4627              MOV      r7,r4
00045c  eb0471d7          ADD      r1,r4,r7,LSR #31
000460  f3c10047          UBFX     r0,r1,#1,#8
000464  2201              MOVS     r2,#1
000466  4669              MOV      r1,sp
000468  f7fffffe          BL       WritenDataVK2C21A
00046c  e011              B        |L1.1170|
                  |L1.1134|
;;;491    	}
;;;492    	else
;;;493    	{
;;;494    		seg=seg-4;  //8com seg4为起始地址=0x00
00046e  1f20              SUBS     r0,r4,#4
000470  b2c4              UXTB     r4,r0
;;;495    		addrbit=(1<<com);
000472  2001              MOVS     r0,#1
000474  40b0              LSLS     r0,r0,r6
000476  b2c5              UXTB     r5,r0
;;;496    		tempdat=VK2C21A_dispram[seg]&~addrbit;
000478  488a              LDR      r0,|L1.1700|
00047a  5d00              LDRB     r0,[r0,r4]
00047c  43a8              BICS     r0,r0,r5
00047e  9000              STR      r0,[sp,#0]
;;;497    	  VK2C21A_dispram[seg]=tempdat;
000480  f89d0000          LDRB     r0,[sp,#0]
000484  4987              LDR      r1,|L1.1700|
000486  5508              STRB     r0,[r1,r4]
;;;498    		WritenDataVK2C21A(seg,&tempdat,1);//这里送8位数据低4bit有效，每8bit数据地址加1，每8位数据1个ACK
000488  2201              MOVS     r2,#1
00048a  4669              MOV      r1,sp
00048c  4620              MOV      r0,r4
00048e  f7fffffe          BL       WritenDataVK2C21A
                  |L1.1170|
;;;499    	}
;;;500    }
000492  bdf8              POP      {r3-r7,pc}
;;;501    /*******************************************************************************
                          ENDP

                  VK2C21A_Enter_PowerOff PROC
;;;507    *******************************************************************************/
;;;508    void VK2C21A_Enter_PowerOff(void)
000494  b510              PUSH     {r4,lr}
;;;509    {		
;;;510    	WriteCmdVK2C21A(VK2C21A_SYSSET,SYSOFF_LCDOFF);
000496  2100              MOVS     r1,#0
000498  2084              MOVS     r0,#0x84
00049a  f7fffffe          BL       WriteCmdVK2C21A
;;;511    }
00049e  bd10              POP      {r4,pc}
;;;512    /*******************************************************************************
                          ENDP

                  VK2C21A_Exit_PowerOff PROC
;;;518    *******************************************************************************/
;;;519    void VK2C21A_Exit_PowerOff(void)
0004a0  b510              PUSH     {r4,lr}
;;;520    {	
;;;521    	WriteCmdVK2C21A(VK2C21A_SYSSET,SYSON_LCDON);
0004a2  2103              MOVS     r1,#3
0004a4  2084              MOVS     r0,#0x84
0004a6  f7fffffe          BL       WriteCmdVK2C21A
;;;522    }
0004aa  bd10              POP      {r4,pc}
;;;523    
                          ENDP

                  VK2C21A_Lowlevel_Init PROC
;;;530    *******************************************************************************/
;;;531    void VK2C21A_Lowlevel_Init(void)
0004ac  b510              PUSH     {r4,lr}
;;;532    {
;;;533    	//通信线电平不同，建议加电平转换电路
;;;534    	//此函数根据客户单片机做相应的修改	
;;;535    	GPIO_SetMode(VK2C21A_SCL_PORT, VK2C21A_SCL_PIN, GPIO_MODE_QUASI);
0004ae  2203              MOVS     r2,#3
0004b0  f44f5180          MOV      r1,#0x1000
0004b4  487c              LDR      r0,|L1.1704|
0004b6  f7fffffe          BL       GPIO_SetMode
;;;536    	GPIO_SetMode(VK2C21A_SDA_PORT, VK2C21A_SDA_PIN, GPIO_MODE_OUTPUT);
0004ba  2201              MOVS     r2,#1
0004bc  02d1              LSLS     r1,r2,#11
0004be  487a              LDR      r0,|L1.1704|
0004c0  f7fffffe          BL       GPIO_SetMode
;;;537    	
;;;538      //I2C总线空闲为高电平		
;;;539    	VK2C21A_SCL_H();  
0004c4  2001              MOVS     r0,#1
0004c6  4979              LDR      r1,|L1.1708|
0004c8  6008              STR      r0,[r1,#0]
;;;540    	VK2C21A_SDA_H(); 	
0004ca  1f09              SUBS     r1,r1,#4
0004cc  6008              STR      r0,[r1,#0]
;;;541    }
0004ce  bd10              POP      {r4,pc}
;;;542    /*******************************************************************************
                          ENDP

                  VK2C21A_InitSequence PROC
;;;548    *******************************************************************************/
;;;549    void VK2C21A_InitSequence(void)
0004d0  b510              PUSH     {r4,lr}
;;;550    {	
;;;551    	WriteCmdVK2C21A(VK2C21A_MODESET,CCOM_1_3__4); 	//模式设置  1/3 Bais 1/4 Duty
0004d2  2100              MOVS     r1,#0
0004d4  2082              MOVS     r0,#0x82
0004d6  f7fffffe          BL       WriteCmdVK2C21A
;;;552    //	WriteCmdVK2C21A(VK2C21A_MODESET,CCOM_1_4__4); //模式设置  1/4 Bais 1/4 Duty
;;;553    	VK2C21A_maxcom=4;
0004da  2004              MOVS     r0,#4
0004dc  4974              LDR      r1,|L1.1712|
0004de  7008              STRB     r0,[r1,#0]
;;;554    	VK2C21A_maxseg=20;//VK2C21A 4COM时为20个SEG
0004e0  2014              MOVS     r0,#0x14
0004e2  4974              LDR      r1,|L1.1716|
0004e4  7008              STRB     r0,[r1,#0]
;;;555    //	WriteCmdVK2C21A(VK2C21A_MODESET,CCOM_1_3__8); //模式设置  1/3 Bais 1/8 Duty
;;;556    //	WriteCmdVK2C21A(VK2C21A_MODESET,CCOM_1_4__8); //模式设置  1/4 Bais 1/8 Duty
;;;557    //	VK2C21A_maxcom=8;
;;;558    //	VK2C21A_maxseg=16;//VK2C21A 8COM时为16个SEG
;;;559    	WriteCmdVK2C21A(VK2C21A_SYSSET,SYSON_LCDON); 		//内部系统振荡器开，lcd开显示
0004e6  2103              MOVS     r1,#3
0004e8  2084              MOVS     r0,#0x84
0004ea  f7fffffe          BL       WriteCmdVK2C21A
;;;560    	WriteCmdVK2C21A(VK2C21A_FRAMESET,FRAME_80HZ); 	//帧频率80Hz
0004ee  2100              MOVS     r1,#0
0004f0  2086              MOVS     r0,#0x86
0004f2  f7fffffe          BL       WriteCmdVK2C21A
;;;561    //	WriteCmdVK2C21A(VK2C21A_FRAMESET,FRAME_160HZ);//帧频率160Hz
;;;562    	WriteCmdVK2C21A(VK2C21A_BLINKSET,BLINK_OFF);  //闪烁关闭
0004f6  2100              MOVS     r1,#0
0004f8  2088              MOVS     r0,#0x88
0004fa  f7fffffe          BL       WriteCmdVK2C21A
;;;563    //	WriteCmdVK2C21A(VK2C21A_BLINKSET,BLINK_2HZ); 		//闪烁2HZ
;;;564    //	WriteCmdVK2C21A(VK2C21A_BLINKSET,BLINK_1HZ); 		//闪烁1HZ
;;;565    //	WriteCmdVK2C21A(VK2C21A_BLINKSET,BLINK_0D5HZ); 	//闪烁0.5HZ
;;;566    	
;;;567    	//SEG/VLCD共用脚设为VLCD，内部电压调整功能关闭,VLCD和VDD短接VR=0偏置电压=VDD
;;;568    //	WriteCmdVK2C21A(VK2C21A_IVASET,VLCDSEL_IVAOFF_R0); 
;;;569    
;;;570    	//SEG/VLCD共用脚设为SEG，内部偏置电压调整：1/3bias=0.652VDD 1/4bias=0.714VDD
;;;571    	WriteCmdVK2C21A(VK2C21A_IVASET,SEGSEL_IVA02H);	
0004fe  2132              MOVS     r1,#0x32
000500  208a              MOVS     r0,#0x8a
000502  f7fffffe          BL       WriteCmdVK2C21A
;;;572    }
000506  bd10              POP      {r4,pc}
;;;573    /*******************************************************************************
                          ENDP

                  VK2C21A_Init PROC
;;;579    *******************************************************************************/
;;;580    void VK2C21A_Init(void)
000508  b510              PUSH     {r4,lr}
;;;581    {	
;;;582    	//管脚配置根据客户单片机做相应的修改
;;;583    	VK2C21A_Lowlevel_Init();
00050a  f7fffffe          BL       VK2C21A_Lowlevel_Init
;;;584    	//初始化时序
;;;585    	VK2C21A_InitSequence();
00050e  f7fffffe          BL       VK2C21A_InitSequence
;;;586    }
000512  bd10              POP      {r4,pc}
;;;587    
                          ENDP

                  VK2C21A_Main PROC
;;;594    *******************************************************************************/
;;;595    void VK2C21A_Main(void)
000514  f7fffffe          BL       VK2C21A_Init
;;;596    {	
;;;597    	VK2C21A_Init();
;;;598    	//上电后显示数据清0
;;;599    	VK2C21A_DisAll(0x00);	
000518  2000              MOVS     r0,#0
00051a  f7fffffe          BL       VK2C21A_DisAll
;;;600    	while(1)
00051e  e0c0              B        |L1.1698|
                  |L1.1312|
;;;601    	{		
;;;602    		VK2C21A_DisAll(0xff);			//LCD全显
000520  20ff              MOVS     r0,#0xff
000522  f7fffffe          BL       VK2C21A_DisAll
;;;603    		Delay_nmS(3000);					//延时1S
000526  f64030b8          MOV      r0,#0xbb8
00052a  f7fffffe          BL       Delay_nmS
;;;604    		
;;;605    		VK2C21A_DisAll(0x00);			//LCD全关
00052e  2000              MOVS     r0,#0
000530  f7fffffe          BL       VK2C21A_DisAll
;;;606    		Delay_nmS(3000);					//延时1S
000534  f64030b8          MOV      r0,#0xbb8
000538  f7fffffe          BL       Delay_nmS
;;;607    		
;;;608    		//LCD半显
;;;609    		VK2C21A_DisAll(0x55);			
00053c  2055              MOVS     r0,#0x55
00053e  f7fffffe          BL       VK2C21A_DisAll
;;;610    		ReadnDataVK2C21A(0,VK2C21A_readbuf,1);	//读回RAM数据
000542  2201              MOVS     r2,#1
000544  495c              LDR      r1,|L1.1720|
000546  2000              MOVS     r0,#0
000548  f7fffffe          BL       ReadnDataVK2C21A
;;;611    		Delay_nmS(1000);					//延时
00054c  f44f707a          MOV      r0,#0x3e8
000550  f7fffffe          BL       Delay_nmS
;;;612    		VK2C21A_DisAll(0xAA);			
000554  20aa              MOVS     r0,#0xaa
000556  f7fffffe          BL       VK2C21A_DisAll
;;;613    		ReadnDataVK2C21A(0,VK2C21A_readbuf,16);	//读回RAM数据
00055a  2210              MOVS     r2,#0x10
00055c  4956              LDR      r1,|L1.1720|
00055e  2000              MOVS     r0,#0
000560  f7fffffe          BL       ReadnDataVK2C21A
;;;614    		Delay_nmS(1500);					//延时
000564  f24050dc          MOV      r0,#0x5dc
000568  f7fffffe          BL       Delay_nmS
;;;615    
;;;616    		//掉电
;;;617    		VK2C21A_DisAll(0x00);			//LCD全关		
00056c  2000              MOVS     r0,#0
00056e  f7fffffe          BL       VK2C21A_DisAll
;;;618    		VK2C21A_Enter_PowerOff();	//进入掉电模式
000572  f7fffffe          BL       VK2C21A_Enter_PowerOff
;;;619    		Delay_nmS(5000);					//延时5S		
000576  f2413088          MOV      r0,#0x1388
00057a  f7fffffe          BL       Delay_nmS
;;;620    		VK2C21A_Exit_PowerOff();	//退出掉电模式
00057e  f7fffffe          BL       VK2C21A_Exit_PowerOff
;;;621    		
;;;622    		VK2C21A_DisAll(0x00);			//LCD全关
000582  2000              MOVS     r0,#0
000584  f7fffffe          BL       VK2C21A_DisAll
;;;623    		Delay_nmS(500);					  //延时
000588  f44f70fa          MOV      r0,#0x1f4
00058c  f7fffffe          BL       Delay_nmS
;;;624    		for(VK2C21A_segi=0;VK2C21A_segi<VK2C21A_maxseg;VK2C21A_segi++)//seg
000590  2000              MOVS     r0,#0
000592  494a              LDR      r1,|L1.1724|
000594  7008              STRB     r0,[r1,#0]
000596  e034              B        |L1.1538|
                  |L1.1432|
;;;625    		{
;;;626    			for(VK2C21A_comi=0;VK2C21A_comi<VK2C21A_maxcom;VK2C21A_comi++)//com
000598  2000              MOVS     r0,#0
00059a  4949              LDR      r1,|L1.1728|
00059c  7008              STRB     r0,[r1,#0]
00059e  e025              B        |L1.1516|
                  |L1.1440|
;;;627    			{
;;;628    				if(VK2C21A_maxcom==8)
0005a0  4843              LDR      r0,|L1.1712|
0005a2  7800              LDRB     r0,[r0,#0]  ; VK2C21A_maxcom
0005a4  2808              CMP      r0,#8
0005a6  d108              BNE      |L1.1466|
;;;629    					VK2C21A_DisDotOn(VK2C21A_segtab[VK2C21A_segi],VK2C21A_comi);	//LCD单点点亮
0005a8  4946              LDR      r1,|L1.1732|
0005aa  4a44              LDR      r2,|L1.1724|
0005ac  7812              LDRB     r2,[r2,#0]  ; VK2C21A_segi
0005ae  5c88              LDRB     r0,[r1,r2]
0005b0  4943              LDR      r1,|L1.1728|
0005b2  7809              LDRB     r1,[r1,#0]  ; VK2C21A_comi
0005b4  f7fffffe          BL       VK2C21A_DisDotOn
0005b8  e007              B        |L1.1482|
                  |L1.1466|
;;;630    				else
;;;631    					VK2C21A_DisDotOn(VK2C21A_segtab[VK2C21A_segi],VK2C21A_comi);	//LCD单点点亮
0005ba  4942              LDR      r1,|L1.1732|
0005bc  4a3f              LDR      r2,|L1.1724|
0005be  7812              LDRB     r2,[r2,#0]  ; VK2C21A_segi
0005c0  5c88              LDRB     r0,[r1,r2]
0005c2  493f              LDR      r1,|L1.1728|
0005c4  7809              LDRB     r1,[r1,#0]  ; VK2C21A_comi
0005c6  f7fffffe          BL       VK2C21A_DisDotOn
                  |L1.1482|
;;;632    				Delay_nmS(300);				//延时300mS
0005ca  f44f7096          MOV      r0,#0x12c
0005ce  f7fffffe          BL       Delay_nmS
;;;633    				VK2C21A_DisDotOff(VK2C21A_segtab[VK2C21A_segi],VK2C21A_comi);	  //此行配合单点点亮函数实现单点点亮，屏蔽此行顺序点亮
0005d2  493c              LDR      r1,|L1.1732|
0005d4  4a39              LDR      r2,|L1.1724|
0005d6  7812              LDRB     r2,[r2,#0]  ; VK2C21A_segi
0005d8  5c88              LDRB     r0,[r1,r2]
0005da  4939              LDR      r1,|L1.1728|
0005dc  7809              LDRB     r1,[r1,#0]  ; VK2C21A_comi
0005de  f7fffffe          BL       VK2C21A_DisDotOff
0005e2  4837              LDR      r0,|L1.1728|
0005e4  7800              LDRB     r0,[r0,#0]            ;626  ; VK2C21A_comi
0005e6  1c40              ADDS     r0,r0,#1              ;626
0005e8  4935              LDR      r1,|L1.1728|
0005ea  7008              STRB     r0,[r1,#0]            ;626
                  |L1.1516|
0005ec  4834              LDR      r0,|L1.1728|
0005ee  7800              LDRB     r0,[r0,#0]            ;626  ; VK2C21A_comi
0005f0  492f              LDR      r1,|L1.1712|
0005f2  7809              LDRB     r1,[r1,#0]            ;626  ; VK2C21A_maxcom
0005f4  4288              CMP      r0,r1                 ;626
0005f6  dbd3              BLT      |L1.1440|
0005f8  4830              LDR      r0,|L1.1724|
0005fa  7800              LDRB     r0,[r0,#0]            ;624  ; VK2C21A_segi
0005fc  1c40              ADDS     r0,r0,#1              ;624
0005fe  492f              LDR      r1,|L1.1724|
000600  7008              STRB     r0,[r1,#0]            ;624
                  |L1.1538|
000602  482e              LDR      r0,|L1.1724|
000604  7800              LDRB     r0,[r0,#0]            ;624  ; VK2C21A_segi
000606  492b              LDR      r1,|L1.1716|
000608  7809              LDRB     r1,[r1,#0]            ;624  ; VK2C21A_maxseg
00060a  4288              CMP      r0,r1                 ;624
00060c  dbc4              BLT      |L1.1432|
;;;634    			}
;;;635    		}
;;;636    		
;;;637    		VK2C21A_DisAll(0xff);			//LCD全显
00060e  20ff              MOVS     r0,#0xff
000610  f7fffffe          BL       VK2C21A_DisAll
;;;638    		Delay_nmS(500);					  //延时
000614  f44f70fa          MOV      r0,#0x1f4
000618  f7fffffe          BL       Delay_nmS
;;;639    		for(VK2C21A_segi=0;VK2C21A_segi<VK2C21A_maxseg;VK2C21A_segi++)//seg
00061c  2000              MOVS     r0,#0
00061e  4927              LDR      r1,|L1.1724|
000620  7008              STRB     r0,[r1,#0]
000622  e034              B        |L1.1678|
                  |L1.1572|
;;;640    		{
;;;641    			for(VK2C21A_comi=0;VK2C21A_comi<VK2C21A_maxcom;VK2C21A_comi++)//com
000624  2000              MOVS     r0,#0
000626  4926              LDR      r1,|L1.1728|
000628  7008              STRB     r0,[r1,#0]
00062a  e025              B        |L1.1656|
                  |L1.1580|
;;;642    			{
;;;643    				if(VK2C21A_maxcom==8)
00062c  4820              LDR      r0,|L1.1712|
00062e  7800              LDRB     r0,[r0,#0]  ; VK2C21A_maxcom
000630  2808              CMP      r0,#8
000632  d108              BNE      |L1.1606|
;;;644    					VK2C21A_DisDotOff(VK2C21A_segtab[VK2C21A_segi],VK2C21A_comi);	//LCD单点关闭
000634  4923              LDR      r1,|L1.1732|
000636  4a21              LDR      r2,|L1.1724|
000638  7812              LDRB     r2,[r2,#0]  ; VK2C21A_segi
00063a  5c88              LDRB     r0,[r1,r2]
00063c  4920              LDR      r1,|L1.1728|
00063e  7809              LDRB     r1,[r1,#0]  ; VK2C21A_comi
000640  f7fffffe          BL       VK2C21A_DisDotOff
000644  e007              B        |L1.1622|
                  |L1.1606|
;;;645    				else
;;;646    					VK2C21A_DisDotOff(VK2C21A_segtab[VK2C21A_segi],VK2C21A_comi);	//LCD单点关闭
000646  491f              LDR      r1,|L1.1732|
000648  4a1c              LDR      r2,|L1.1724|
00064a  7812              LDRB     r2,[r2,#0]  ; VK2C21A_segi
00064c  5c88              LDRB     r0,[r1,r2]
00064e  491c              LDR      r1,|L1.1728|
000650  7809              LDRB     r1,[r1,#0]  ; VK2C21A_comi
000652  f7fffffe          BL       VK2C21A_DisDotOff
                  |L1.1622|
;;;647    				Delay_nmS(300);				//延时300mS
000656  f44f7096          MOV      r0,#0x12c
00065a  f7fffffe          BL       Delay_nmS
;;;648    				VK2C21A_DisDotOn(VK2C21A_segtab[VK2C21A_segi],VK2C21A_comi);  //此行配合单点关闭函数实现单点关闭，屏蔽此行顺序关闭
00065e  4919              LDR      r1,|L1.1732|
000660  4a16              LDR      r2,|L1.1724|
000662  7812              LDRB     r2,[r2,#0]  ; VK2C21A_segi
000664  5c88              LDRB     r0,[r1,r2]
000666  4916              LDR      r1,|L1.1728|
000668  7809              LDRB     r1,[r1,#0]  ; VK2C21A_comi
00066a  f7fffffe          BL       VK2C21A_DisDotOn
00066e  4814              LDR      r0,|L1.1728|
000670  7800              LDRB     r0,[r0,#0]            ;641  ; VK2C21A_comi
000672  1c40              ADDS     r0,r0,#1              ;641
000674  4912              LDR      r1,|L1.1728|
000676  7008              STRB     r0,[r1,#0]            ;641
                  |L1.1656|
000678  4811              LDR      r0,|L1.1728|
00067a  7800              LDRB     r0,[r0,#0]            ;641  ; VK2C21A_comi
00067c  490c              LDR      r1,|L1.1712|
00067e  7809              LDRB     r1,[r1,#0]            ;641  ; VK2C21A_maxcom
000680  4288              CMP      r0,r1                 ;641
000682  dbd3              BLT      |L1.1580|
000684  480d              LDR      r0,|L1.1724|
000686  7800              LDRB     r0,[r0,#0]            ;639  ; VK2C21A_segi
000688  1c40              ADDS     r0,r0,#1              ;639
00068a  490c              LDR      r1,|L1.1724|
00068c  7008              STRB     r0,[r1,#0]            ;639
                  |L1.1678|
00068e  480b              LDR      r0,|L1.1724|
000690  7800              LDRB     r0,[r0,#0]            ;639  ; VK2C21A_segi
000692  4908              LDR      r1,|L1.1716|
000694  7809              LDRB     r1,[r1,#0]            ;639  ; VK2C21A_maxseg
000696  4288              CMP      r0,r1                 ;639
000698  dbc4              BLT      |L1.1572|
;;;649    			}
;;;650    		}
;;;651    		Delay_nmS(1000);					  //延时
00069a  f44f707a          MOV      r0,#0x3e8
00069e  f7fffffe          BL       Delay_nmS
                  |L1.1698|
0006a2  e73d              B        |L1.1312|
;;;652    	}
;;;653    }
;;;654    /************************END OF FILE****/
                          ENDP

                  |L1.1700|
                          DCD      VK2C21A_dispram
                  |L1.1704|
                          DCD      0x40004040
                  |L1.1708|
                          DCD      0x40004870
                  |L1.1712|
                          DCD      VK2C21A_maxcom
                  |L1.1716|
                          DCD      VK2C21A_maxseg
                  |L1.1720|
                          DCD      VK2C21A_readbuf
                  |L1.1724|
                          DCD      VK2C21A_segi
                  |L1.1728|
                          DCD      VK2C21A_comi
                  |L1.1732|
                          DCD      VK2C21A_segtab

                          AREA ||.bss||, DATA, NOINIT, ALIGN=0

                  VK2C21A_dispram
                          %        20
                  VK2C21A_readbuf
                          %        20

                          AREA ||.data||, DATA, ALIGN=0

                  VK2C21A_segtab
000000  00010203          DCB      0x00,0x01,0x02,0x03
000004  04050607          DCB      0x04,0x05,0x06,0x07
000008  08090a0b          DCB      0x08,0x09,0x0a,0x0b
00000c  0c0d0e0f          DCB      0x0c,0x0d,0x0e,0x0f
000010  10111213          DCB      0x10,0x11,0x12,0x13
                  VK2C21A_segi
000014  00                DCB      0x00
                  VK2C21A_comi
000015  00                DCB      0x00
                  VK2C21A_maxcom
000016  00                DCB      0x00
                  VK2C21A_maxseg
000017  00                DCB      0x00

;*** Start embedded assembler ***

#line 1 "..\\lcd_driver\\VK2C21A_IO_I2C_DIR.c"
	AREA ||.rev16_text||, CODE
	THUMB
	EXPORT |__asm___20_VK2C21A_IO_I2C_DIR_c_705f0fde____REV16|
#line 114 "..\\..\\..\\Library\\CMSIS\\Include\\core_cmInstr.h"
|__asm___20_VK2C21A_IO_I2C_DIR_c_705f0fde____REV16| PROC
#line 115

 rev16 r0, r0
 bx lr
	ENDP
	AREA ||.revsh_text||, CODE
	THUMB
	EXPORT |__asm___20_VK2C21A_IO_I2C_DIR_c_705f0fde____REVSH|
#line 128
|__asm___20_VK2C21A_IO_I2C_DIR_c_705f0fde____REVSH| PROC
#line 129

 revsh r0, r0
 bx lr
	ENDP

;*** End   embedded assembler ***
