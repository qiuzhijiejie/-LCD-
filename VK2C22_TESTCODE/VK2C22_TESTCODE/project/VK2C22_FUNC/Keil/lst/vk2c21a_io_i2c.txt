; generated by Component: ARM Compiler 5.05 update 2 (build 169) Tool: ArmCC [4d0f38]
; commandline ArmCC [--list --debug -c --asm --interleave -o.\obj\vk2c21a_io_i2c.o --asm_dir=.\lst\ --list_dir=.\lst\ --depend=.\obj\vk2c21a_io_i2c.d --cpu=Cortex-M4.fp --apcs=interwork -O0 --diag_suppress=9931 -I..\..\..\Library\CMSIS\Include -I..\..\..\Library\Device\Nuvoton\M451Series\Include -I..\..\..\Library\StdDriver\inc -I..\Bsp -I..\User -I..\lcd_driver -I..\exti_driver -I..\led_driver -I..\touch -I..\dotmatix_lcd -I..\KH -ID:\工作\A工程资料\LCD\抗干扰系列_VK2C\VK2C例程\VK2C22_TESTCODE\project\VK2C22_FUNC\Keil\RTE -IC:\Keil_v5\ARM\PACK\ARM\CMSIS\4.3.0\CMSIS\Include -D__UVISION_VERSION=515 -D_RTE_ --omf_browse=.\obj\vk2c21a_io_i2c.crf ..\lcd_driver\VK2C21A_IO_I2C.c]
                          THUMB

                          AREA ||.text||, CODE, READONLY, ALIGN=2

                  Delay_nuS PROC
;;;86     *******************************************************************************/
;;;87     void Delay_nuS(unsigned int n)	   
000000  e007              B        |L1.18|
                  |L1.2|
;;;88     {
;;;89     	unsigned char i;
;;;90     	while(n--)
;;;91     	{
;;;92     		i=10;
000002  210a              MOVS     r1,#0xa
;;;93     		while(i--)
000004  e000              B        |L1.8|
                  |L1.6|
;;;94     		{//nop指令根据单片机做相应的修改
;;;95     			__nop();
000006  bf00              NOP      
                  |L1.8|
000008  000a              MOVS     r2,r1                 ;93
00000a  f1a10301          SUB      r3,r1,#1              ;93
00000e  b2d9              UXTB     r1,r3                 ;93
000010  d1f9              BNE      |L1.6|
                  |L1.18|
000012  0002              MOVS     r2,r0                 ;90
000014  f1a00001          SUB      r0,r0,#1              ;90
000018  d1f3              BNE      |L1.2|
;;;96     		}
;;;97     	}
;;;98     }
00001a  4770              BX       lr
;;;99     /*******************************************************************************
                          ENDP

                  Delay_nmS PROC
;;;105    *******************************************************************************/
;;;106    void Delay_nmS(unsigned long int n)
00001c  b510              PUSH     {r4,lr}
;;;107    {
00001e  4604              MOV      r4,r0
;;;108    	while(n--)
000020  e003              B        |L1.42|
                  |L1.34|
;;;109    	{
;;;110    		Delay_nuS(1000);
000022  f44f707a          MOV      r0,#0x3e8
000026  f7fffffe          BL       Delay_nuS
                  |L1.42|
00002a  0020              MOVS     r0,r4                 ;108
00002c  f1a40401          SUB      r4,r4,#1              ;108
000030  d1f7              BNE      |L1.34|
;;;111    	}
;;;112    }
000032  bd10              POP      {r4,pc}
;;;113    /*******************************************************************************
                          ENDP

                  WriteCmdVK2C21A PROC
;;;119    *******************************************************************************/
;;;120    void  WriteCmdVK2C21A(unsigned char Addr,unsigned char Cmd)
000034  b570              PUSH     {r4-r6,lr}
;;;121    {
000036  4604              MOV      r4,r0
000038  460d              MOV      r5,r1
;;;122    	VK2C21A_I2C_WRCmd(Addr,Cmd);
00003a  4629              MOV      r1,r5
00003c  4620              MOV      r0,r4
00003e  f7fffffe          BL       VK2C21A_I2C_WRCmd
;;;123    }
000042  bd70              POP      {r4-r6,pc}
;;;124    /*******************************************************************************
                          ENDP

                  WritenDataVK2C21A PROC
;;;132    *******************************************************************************/
;;;133    unsigned char WritenDataVK2C21A(unsigned char Addr,unsigned char *Databuf,unsigned char Cnt)
000044  b570              PUSH     {r4-r6,lr}
;;;134    {
000046  4604              MOV      r4,r0
000048  460d              MOV      r5,r1
00004a  4616              MOV      r6,r2
;;;135      VK2C21A_I2C_WRDat(Addr,Databuf,Cnt);
00004c  4632              MOV      r2,r6
00004e  4629              MOV      r1,r5
000050  4620              MOV      r0,r4
000052  f7fffffe          BL       VK2C21A_I2C_WRDat
;;;136    	return 0;
000056  2000              MOVS     r0,#0
;;;137    }
000058  bd70              POP      {r4-r6,pc}
;;;138    /*******************************************************************************
                          ENDP

                  ReadnDataVK2C21A PROC
;;;146    *******************************************************************************/
;;;147    unsigned char  ReadnDataVK2C21A(unsigned char Addr,unsigned char *Databuf,unsigned char Cnt)
00005a  b570              PUSH     {r4-r6,lr}
;;;148    {
00005c  4604              MOV      r4,r0
00005e  460d              MOV      r5,r1
000060  4616              MOV      r6,r2
;;;149      VK2C21A_I2C_RDDat(Addr,Databuf,Cnt);
000062  4632              MOV      r2,r6
000064  4629              MOV      r1,r5
000066  4620              MOV      r0,r4
000068  f7fffffe          BL       VK2C21A_I2C_RDDat
;;;150    	return 0;
00006c  2000              MOVS     r0,#0
;;;151    }
00006e  bd70              POP      {r4-r6,pc}
;;;152    /*******************************************************************************
                          ENDP

                  VK2C21A_DisAll PROC
;;;159    *******************************************************************************/
;;;160    void VK2C21A_DisAll(unsigned char dat)
000070  b570              PUSH     {r4-r6,lr}
;;;161    {
000072  4605              MOV      r5,r0
;;;162    	unsigned char segi;
;;;163    	
;;;164    	if(VK2C21A_maxcom==4)
000074  48cb              LDR      r0,|L1.932|
000076  7800              LDRB     r0,[r0,#0]  ; VK2C21A_maxcom
000078  2804              CMP      r0,#4
00007a  d10d              BNE      |L1.152|
;;;165    	{
;;;166    		for(segi=0;segi<10;segi++)
00007c  2400              MOVS     r4,#0
00007e  e003              B        |L1.136|
                  |L1.128|
;;;167    		{				
;;;168    			VK2C21A_dispram[segi]=dat;
000080  48c9              LDR      r0,|L1.936|
000082  5505              STRB     r5,[r0,r4]
000084  1c60              ADDS     r0,r4,#1              ;166
000086  b2c4              UXTB     r4,r0                 ;166
                  |L1.136|
000088  2c0a              CMP      r4,#0xa               ;166
00008a  dbf9              BLT      |L1.128|
;;;169    		}
;;;170    		WritenDataVK2C21A(0,VK2C21A_dispram,10);//这里送8bit数据对应2个SEG，每8bit数据地址加1，每8位数据1个ACK
00008c  220a              MOVS     r2,#0xa
00008e  49c6              LDR      r1,|L1.936|
000090  2000              MOVS     r0,#0
000092  f7fffffe          BL       WritenDataVK2C21A
000096  e00c              B        |L1.178|
                  |L1.152|
;;;171    	}
;;;172    	else
;;;173    	{
;;;174    		for(segi=0;segi<16;segi++)
000098  2400              MOVS     r4,#0
00009a  e003              B        |L1.164|
                  |L1.156|
;;;175    		{
;;;176    			VK2C21A_dispram[segi]=dat;
00009c  48c2              LDR      r0,|L1.936|
00009e  5505              STRB     r5,[r0,r4]
0000a0  1c60              ADDS     r0,r4,#1              ;174
0000a2  b2c4              UXTB     r4,r0                 ;174
                  |L1.164|
0000a4  2c10              CMP      r4,#0x10              ;174
0000a6  dbf9              BLT      |L1.156|
;;;177    		}
;;;178    		WritenDataVK2C21A(0,VK2C21A_dispram,16);//这里送8bit数据对应1个SEG，每8bit数据地址加1，每8位数据1个ACK
0000a8  2210              MOVS     r2,#0x10
0000aa  49bf              LDR      r1,|L1.936|
0000ac  2000              MOVS     r0,#0
0000ae  f7fffffe          BL       WritenDataVK2C21A
                  |L1.178|
;;;179    	}
;;;180    }
0000b2  bd70              POP      {r4-r6,pc}
;;;181    /*******************************************************************************
                          ENDP

                  VK2C21A_DisDotOn PROC
;;;188    *******************************************************************************/
;;;189    void VK2C21A_DisDotOn(unsigned char seg,unsigned char com)
0000b4  b5f8              PUSH     {r3-r7,lr}
;;;190    {
0000b6  4604              MOV      r4,r0
0000b8  460e              MOV      r6,r1
;;;191    	unsigned char addrbit,tempdat;
;;;192    	
;;;193    	//判断8COM还是4COM
;;;194    	if(VK2C21A_maxcom==4)
0000ba  48ba              LDR      r0,|L1.932|
0000bc  7800              LDRB     r0,[r0,#0]  ; VK2C21A_maxcom
0000be  2804              CMP      r0,#4
0000c0  d127              BNE      |L1.274|
;;;195    	{
;;;196    		if(seg%2==0)
0000c2  4620              MOV      r0,r4
0000c4  eb0471d0          ADD      r1,r4,r0,LSR #31
0000c8  1049              ASRS     r1,r1,#1
0000ca  eba40141          SUB      r1,r4,r1,LSL #1
0000ce  b919              CBNZ     r1,|L1.216|
;;;197    			addrbit=(1<<com);//这里送8位数据低4bit有效，每8bit数据地址加1，每8位数据1个ACK
0000d0  2001              MOVS     r0,#1
0000d2  40b0              LSLS     r0,r0,r6
0000d4  b2c5              UXTB     r5,r0
0000d6  e003              B        |L1.224|
                  |L1.216|
;;;198    		else
;;;199    			addrbit=(1<<(4+com));//这里送8位数据高4bit有效，每8bit数据地址加1，每8位数据1个ACK
0000d8  1d30              ADDS     r0,r6,#4
0000da  2101              MOVS     r1,#1
0000dc  4081              LSLS     r1,r1,r0
0000de  b2cd              UXTB     r5,r1
                  |L1.224|
;;;200    		tempdat=VK2C21A_dispram[seg/2]|addrbit;
0000e0  4620              MOV      r0,r4
0000e2  eb0471d0          ADD      r1,r4,r0,LSR #31
0000e6  1049              ASRS     r1,r1,#1
0000e8  4aaf              LDR      r2,|L1.936|
0000ea  5c51              LDRB     r1,[r2,r1]
0000ec  4329              ORRS     r1,r1,r5
0000ee  9100              STR      r1,[sp,#0]
;;;201    	  VK2C21A_dispram[seg/2]=tempdat;
0000f0  f89d1000          LDRB     r1,[sp,#0]
0000f4  eb0472d0          ADD      r2,r4,r0,LSR #31
0000f8  1052              ASRS     r2,r2,#1
0000fa  4bab              LDR      r3,|L1.936|
0000fc  5499              STRB     r1,[r3,r2]
;;;202    		WritenDataVK2C21A(seg/2,&tempdat,1);
0000fe  4627              MOV      r7,r4
000100  eb0471d7          ADD      r1,r4,r7,LSR #31
000104  f3c10047          UBFX     r0,r1,#1,#8
000108  2201              MOVS     r2,#1
00010a  4669              MOV      r1,sp
00010c  f7fffffe          BL       WritenDataVK2C21A
000110  e011              B        |L1.310|
                  |L1.274|
;;;203    	}
;;;204    	else
;;;205    	{
;;;206    		seg=seg-4; //8com seg4为起始地址=0x00
000112  1f20              SUBS     r0,r4,#4
000114  b2c4              UXTB     r4,r0
;;;207    		addrbit=(1<<com);
000116  2001              MOVS     r0,#1
000118  40b0              LSLS     r0,r0,r6
00011a  b2c5              UXTB     r5,r0
;;;208    		tempdat=VK2C21A_dispram[seg]|addrbit;
00011c  48a2              LDR      r0,|L1.936|
00011e  5d00              LDRB     r0,[r0,r4]
000120  4328              ORRS     r0,r0,r5
000122  9000              STR      r0,[sp,#0]
;;;209    	  VK2C21A_dispram[seg]=tempdat;
000124  f89d0000          LDRB     r0,[sp,#0]
000128  499f              LDR      r1,|L1.936|
00012a  5508              STRB     r0,[r1,r4]
;;;210    		WritenDataVK2C21A(seg,&tempdat,1);//这里送8位数据低4bit有效，每8bit数据地址加1，每8位数据1个ACK
00012c  2201              MOVS     r2,#1
00012e  4669              MOV      r1,sp
000130  4620              MOV      r0,r4
000132  f7fffffe          BL       WritenDataVK2C21A
                  |L1.310|
;;;211    	}
;;;212    }
000136  bdf8              POP      {r3-r7,pc}
;;;213    /*******************************************************************************
                          ENDP

                  VK2C21A_DisDotOff PROC
;;;220    *******************************************************************************/
;;;221    void VK2C21A_DisDotOff(unsigned char seg,unsigned char com)
000138  b5f8              PUSH     {r3-r7,lr}
;;;222    {
00013a  4604              MOV      r4,r0
00013c  460e              MOV      r6,r1
;;;223    	unsigned char addrbit,tempdat;
;;;224    	
;;;225    	//判断8COM还是4COM
;;;226    	if(VK2C21A_maxcom==4)
00013e  4899              LDR      r0,|L1.932|
000140  7800              LDRB     r0,[r0,#0]  ; VK2C21A_maxcom
000142  2804              CMP      r0,#4
000144  d127              BNE      |L1.406|
;;;227    	{
;;;228    		if(seg%2==0)
000146  4620              MOV      r0,r4
000148  eb0471d0          ADD      r1,r4,r0,LSR #31
00014c  1049              ASRS     r1,r1,#1
00014e  eba40141          SUB      r1,r4,r1,LSL #1
000152  b919              CBNZ     r1,|L1.348|
;;;229    			addrbit=(1<<com);//这里送8位数据低4bit有效，每8bit数据地址加1，每8位数据1个ACK
000154  2001              MOVS     r0,#1
000156  40b0              LSLS     r0,r0,r6
000158  b2c5              UXTB     r5,r0
00015a  e003              B        |L1.356|
                  |L1.348|
;;;230    		else
;;;231    			addrbit=(1<<(4+com));//这里送8位数据高4bit有效，每8bit数据地址加1，每8位数据1个ACK
00015c  1d30              ADDS     r0,r6,#4
00015e  2101              MOVS     r1,#1
000160  4081              LSLS     r1,r1,r0
000162  b2cd              UXTB     r5,r1
                  |L1.356|
;;;232    		tempdat=VK2C21A_dispram[seg/2]&~addrbit;
000164  4620              MOV      r0,r4
000166  eb0471d0          ADD      r1,r4,r0,LSR #31
00016a  1049              ASRS     r1,r1,#1
00016c  4a8e              LDR      r2,|L1.936|
00016e  5c51              LDRB     r1,[r2,r1]
000170  43a9              BICS     r1,r1,r5
000172  9100              STR      r1,[sp,#0]
;;;233    	  VK2C21A_dispram[seg/2]=tempdat;
000174  f89d1000          LDRB     r1,[sp,#0]
000178  eb0472d0          ADD      r2,r4,r0,LSR #31
00017c  1052              ASRS     r2,r2,#1
00017e  4b8a              LDR      r3,|L1.936|
000180  5499              STRB     r1,[r3,r2]
;;;234    		WritenDataVK2C21A(seg/2,&tempdat,1);
000182  4627              MOV      r7,r4
000184  eb0471d7          ADD      r1,r4,r7,LSR #31
000188  f3c10047          UBFX     r0,r1,#1,#8
00018c  2201              MOVS     r2,#1
00018e  4669              MOV      r1,sp
000190  f7fffffe          BL       WritenDataVK2C21A
000194  e011              B        |L1.442|
                  |L1.406|
;;;235    	}
;;;236    	else
;;;237    	{
;;;238    		seg=seg-4;  //8com seg4为起始地址=0x00
000196  1f20              SUBS     r0,r4,#4
000198  b2c4              UXTB     r4,r0
;;;239    		addrbit=(1<<com);
00019a  2001              MOVS     r0,#1
00019c  40b0              LSLS     r0,r0,r6
00019e  b2c5              UXTB     r5,r0
;;;240    		tempdat=VK2C21A_dispram[seg]&~addrbit;
0001a0  4881              LDR      r0,|L1.936|
0001a2  5d00              LDRB     r0,[r0,r4]
0001a4  43a8              BICS     r0,r0,r5
0001a6  9000              STR      r0,[sp,#0]
;;;241    	  VK2C21A_dispram[seg]=tempdat;
0001a8  f89d0000          LDRB     r0,[sp,#0]
0001ac  497e              LDR      r1,|L1.936|
0001ae  5508              STRB     r0,[r1,r4]
;;;242    		WritenDataVK2C21A(seg,&tempdat,1);//这里送8位数据低4bit有效，每8bit数据地址加1，每8位数据1个ACK
0001b0  2201              MOVS     r2,#1
0001b2  4669              MOV      r1,sp
0001b4  4620              MOV      r0,r4
0001b6  f7fffffe          BL       WritenDataVK2C21A
                  |L1.442|
;;;243    	}
;;;244    }
0001ba  bdf8              POP      {r3-r7,pc}
;;;245    /*******************************************************************************
                          ENDP

                  VK2C21A_Enter_PowerOff PROC
;;;251    *******************************************************************************/
;;;252    void VK2C21A_Enter_PowerOff(void)
0001bc  b510              PUSH     {r4,lr}
;;;253    {		
;;;254    	WriteCmdVK2C21A(VK2C21A_SYSSET,SYSOFF_LCDOFF);
0001be  2100              MOVS     r1,#0
0001c0  2084              MOVS     r0,#0x84
0001c2  f7fffffe          BL       WriteCmdVK2C21A
;;;255    }
0001c6  bd10              POP      {r4,pc}
;;;256    /*******************************************************************************
                          ENDP

                  VK2C21A_Exit_PowerOff PROC
;;;262    *******************************************************************************/
;;;263    void VK2C21A_Exit_PowerOff(void)
0001c8  b510              PUSH     {r4,lr}
;;;264    {	
;;;265    	WriteCmdVK2C21A(VK2C21A_SYSSET,SYSON_LCDON);
0001ca  2103              MOVS     r1,#3
0001cc  2084              MOVS     r0,#0x84
0001ce  f7fffffe          BL       WriteCmdVK2C21A
;;;266    }
0001d2  bd10              POP      {r4,pc}
;;;267    /*******************************************************************************
                          ENDP

                  VK2C21A_InitSequence PROC
;;;273    *******************************************************************************/
;;;274    void VK2C21A_InitSequence(void)
0001d4  b510              PUSH     {r4,lr}
;;;275    {	
;;;276    	WriteCmdVK2C21A(VK2C21A_MODESET,CCOM_1_3__4); 	//模式设置  1/3 Bais 1/4 Duty
0001d6  2100              MOVS     r1,#0
0001d8  2082              MOVS     r0,#0x82
0001da  f7fffffe          BL       WriteCmdVK2C21A
;;;277    //	WriteCmdVK2C21A(VK2C21A_MODESET,CCOM_1_4__4); //模式设置  1/4 Bais 1/4 Duty
;;;278    	VK2C21A_maxcom=4;
0001de  2004              MOVS     r0,#4
0001e0  4970              LDR      r1,|L1.932|
0001e2  7008              STRB     r0,[r1,#0]
;;;279    	VK2C21A_maxseg=20;//VK2C21A 4COM时为20个SEG
0001e4  2014              MOVS     r0,#0x14
0001e6  4971              LDR      r1,|L1.940|
0001e8  7008              STRB     r0,[r1,#0]
;;;280    //	WriteCmdVK2C21A(VK2C21A_MODESET,CCOM_1_3__8); //模式设置  1/3 Bais 1/8 Duty
;;;281    //	WriteCmdVK2C21A(VK2C21A_MODESET,CCOM_1_4__8); //模式设置  1/4 Bais 1/8 Duty
;;;282    //	VK2C21A_maxcom=8;
;;;283    //	VK2C21A_maxseg=16;//VK2C21A 8COM时为16个SEG
;;;284    	WriteCmdVK2C21A(VK2C21A_SYSSET,SYSON_LCDON); 		//内部系统振荡器开，lcd开显示
0001ea  2103              MOVS     r1,#3
0001ec  2084              MOVS     r0,#0x84
0001ee  f7fffffe          BL       WriteCmdVK2C21A
;;;285    	WriteCmdVK2C21A(VK2C21A_FRAMESET,FRAME_80HZ); 	//帧频率80Hz
0001f2  2100              MOVS     r1,#0
0001f4  2086              MOVS     r0,#0x86
0001f6  f7fffffe          BL       WriteCmdVK2C21A
;;;286    //	WriteCmdVK2C21A(VK2C21A_FRAMESET,FRAME_160HZ);//帧频率160Hz
;;;287    	WriteCmdVK2C21A(VK2C21A_BLINKSET,BLINK_OFF);  //闪烁关闭
0001fa  2100              MOVS     r1,#0
0001fc  2088              MOVS     r0,#0x88
0001fe  f7fffffe          BL       WriteCmdVK2C21A
;;;288    //	WriteCmdVK2C21A(VK2C21A_BLINKSET,BLINK_2HZ); 		//闪烁2HZ
;;;289    //	WriteCmdVK2C21A(VK2C21A_BLINKSET,BLINK_1HZ); 		//闪烁1HZ
;;;290    //	WriteCmdVK2C21A(VK2C21A_BLINKSET,BLINK_0D5HZ); 	//闪烁0.5HZ
;;;291    	
;;;292    	//SEG/VLCD共用脚设为VLCD，内部电压调整功能关闭,VLCD和VDD短接VR=0偏置电压=VDD
;;;293    //	WriteCmdVK2C21A(VK2C21A_IVASET,VLCDSEL_IVAOFF_R0); 
;;;294    
;;;295    	//SEG/VLCD共用脚设为SEG，内部偏置电压调整：1/3bias=0.652VDD 1/4bias=0.714VDD
;;;296    	WriteCmdVK2C21A(VK2C21A_IVASET,SEGSEL_IVA02H);	
000202  2132              MOVS     r1,#0x32
000204  208a              MOVS     r0,#0x8a
000206  f7fffffe          BL       WriteCmdVK2C21A
;;;297    }
00020a  bd10              POP      {r4,pc}
;;;298    /*******************************************************************************
                          ENDP

                  VK2C21A_Init PROC
;;;304    *******************************************************************************/
;;;305    void VK2C21A_Init(void)
00020c  b510              PUSH     {r4,lr}
;;;306    {	
;;;307    	//初始化时序
;;;308    	VK2C21A_InitSequence();
00020e  f7fffffe          BL       VK2C21A_InitSequence
;;;309    }
000212  bd10              POP      {r4,pc}
;;;310    
                          ENDP

                  VK2C21A_Main PROC
;;;317    *******************************************************************************/
;;;318    void VK2C21A_Main(void)
000214  f7fffffe          BL       VK2C21A_Init
;;;319    {	
;;;320    	VK2C21A_Init();
;;;321    	//上电后显示数据清0
;;;322    	VK2C21A_DisAll(0x00);	
000218  2000              MOVS     r0,#0
00021a  f7fffffe          BL       VK2C21A_DisAll
;;;323    	while(1)
00021e  e0c0              B        |L1.930|
                  |L1.544|
;;;324    	{			
;;;325    		VK2C21A_DisAll(0xff);			//LCD全显
000220  20ff              MOVS     r0,#0xff
000222  f7fffffe          BL       VK2C21A_DisAll
;;;326    		Delay_nmS(3000);					//延时1S
000226  f64030b8          MOV      r0,#0xbb8
00022a  f7fffffe          BL       Delay_nmS
;;;327    	
;;;328    		VK2C21A_DisAll(0x00);			//LCD全关
00022e  2000              MOVS     r0,#0
000230  f7fffffe          BL       VK2C21A_DisAll
;;;329    		Delay_nmS(3000);					//延时1S
000234  f64030b8          MOV      r0,#0xbb8
000238  f7fffffe          BL       Delay_nmS
;;;330    		
;;;331    		//LCD半显
;;;332    		VK2C21A_DisAll(0xAA);			
00023c  20aa              MOVS     r0,#0xaa
00023e  f7fffffe          BL       VK2C21A_DisAll
;;;333    		ReadnDataVK2C21A(0,VK2C21A_readbuf,16);	//读回RAM数据
000242  2210              MOVS     r2,#0x10
000244  495a              LDR      r1,|L1.944|
000246  2000              MOVS     r0,#0
000248  f7fffffe          BL       ReadnDataVK2C21A
;;;334    		Delay_nmS(1500);					//延时
00024c  f24050dc          MOV      r0,#0x5dc
000250  f7fffffe          BL       Delay_nmS
;;;335    		VK2C21A_DisAll(0x55);			
000254  2055              MOVS     r0,#0x55
000256  f7fffffe          BL       VK2C21A_DisAll
;;;336    		ReadnDataVK2C21A(0,VK2C21A_readbuf,16);	//读回RAM数据
00025a  2210              MOVS     r2,#0x10
00025c  4954              LDR      r1,|L1.944|
00025e  2000              MOVS     r0,#0
000260  f7fffffe          BL       ReadnDataVK2C21A
;;;337    		Delay_nmS(1500);					//延时
000264  f24050dc          MOV      r0,#0x5dc
000268  f7fffffe          BL       Delay_nmS
;;;338    
;;;339    		//掉电
;;;340    		VK2C21A_DisAll(0x00);			//LCD全关		
00026c  2000              MOVS     r0,#0
00026e  f7fffffe          BL       VK2C21A_DisAll
;;;341    		VK2C21A_Enter_PowerOff();	//进入掉电模式
000272  f7fffffe          BL       VK2C21A_Enter_PowerOff
;;;342    		Delay_nmS(5000);					//延时5S		
000276  f2413088          MOV      r0,#0x1388
00027a  f7fffffe          BL       Delay_nmS
;;;343    		VK2C21A_Exit_PowerOff();	//退出掉电模式
00027e  f7fffffe          BL       VK2C21A_Exit_PowerOff
;;;344    		
;;;345    		VK2C21A_DisAll(0x00);			//LCD全关
000282  2000              MOVS     r0,#0
000284  f7fffffe          BL       VK2C21A_DisAll
;;;346    		Delay_nmS(500);					  //延时
000288  f44f70fa          MOV      r0,#0x1f4
00028c  f7fffffe          BL       Delay_nmS
;;;347    		for(VK2C21A_segi=0;VK2C21A_segi<VK2C21A_maxseg;VK2C21A_segi++)//seg
000290  2000              MOVS     r0,#0
000292  4948              LDR      r1,|L1.948|
000294  7008              STRB     r0,[r1,#0]
000296  e034              B        |L1.770|
                  |L1.664|
;;;348    		{
;;;349    			for(VK2C21A_comi=0;VK2C21A_comi<VK2C21A_maxcom;VK2C21A_comi++)//com
000298  2000              MOVS     r0,#0
00029a  4947              LDR      r1,|L1.952|
00029c  7008              STRB     r0,[r1,#0]
00029e  e025              B        |L1.748|
                  |L1.672|
;;;350    			{
;;;351    				if(VK2C21A_maxcom==8)
0002a0  4840              LDR      r0,|L1.932|
0002a2  7800              LDRB     r0,[r0,#0]  ; VK2C21A_maxcom
0002a4  2808              CMP      r0,#8
0002a6  d108              BNE      |L1.698|
;;;352    					VK2C21A_DisDotOn(VK2C21A_segtab[VK2C21A_segi],VK2C21A_comi);	//LCD单点点亮
0002a8  4944              LDR      r1,|L1.956|
0002aa  4a42              LDR      r2,|L1.948|
0002ac  7812              LDRB     r2,[r2,#0]  ; VK2C21A_segi
0002ae  5c88              LDRB     r0,[r1,r2]
0002b0  4941              LDR      r1,|L1.952|
0002b2  7809              LDRB     r1,[r1,#0]  ; VK2C21A_comi
0002b4  f7fffffe          BL       VK2C21A_DisDotOn
0002b8  e007              B        |L1.714|
                  |L1.698|
;;;353    				else
;;;354    					VK2C21A_DisDotOn(VK2C21A_segtab[VK2C21A_segi],VK2C21A_comi);	//LCD单点点亮
0002ba  4940              LDR      r1,|L1.956|
0002bc  4a3d              LDR      r2,|L1.948|
0002be  7812              LDRB     r2,[r2,#0]  ; VK2C21A_segi
0002c0  5c88              LDRB     r0,[r1,r2]
0002c2  493d              LDR      r1,|L1.952|
0002c4  7809              LDRB     r1,[r1,#0]  ; VK2C21A_comi
0002c6  f7fffffe          BL       VK2C21A_DisDotOn
                  |L1.714|
;;;355    				Delay_nmS(300);				//延时300mS
0002ca  f44f7096          MOV      r0,#0x12c
0002ce  f7fffffe          BL       Delay_nmS
;;;356    				VK2C21A_DisDotOff(VK2C21A_segtab[VK2C21A_segi],VK2C21A_comi);	  //此行配合单点点亮函数实现单点点亮，屏蔽此行顺序点亮
0002d2  493a              LDR      r1,|L1.956|
0002d4  4a37              LDR      r2,|L1.948|
0002d6  7812              LDRB     r2,[r2,#0]  ; VK2C21A_segi
0002d8  5c88              LDRB     r0,[r1,r2]
0002da  4937              LDR      r1,|L1.952|
0002dc  7809              LDRB     r1,[r1,#0]  ; VK2C21A_comi
0002de  f7fffffe          BL       VK2C21A_DisDotOff
0002e2  4835              LDR      r0,|L1.952|
0002e4  7800              LDRB     r0,[r0,#0]            ;349  ; VK2C21A_comi
0002e6  1c40              ADDS     r0,r0,#1              ;349
0002e8  4933              LDR      r1,|L1.952|
0002ea  7008              STRB     r0,[r1,#0]            ;349
                  |L1.748|
0002ec  4832              LDR      r0,|L1.952|
0002ee  7800              LDRB     r0,[r0,#0]            ;349  ; VK2C21A_comi
0002f0  492c              LDR      r1,|L1.932|
0002f2  7809              LDRB     r1,[r1,#0]            ;349  ; VK2C21A_maxcom
0002f4  4288              CMP      r0,r1                 ;349
0002f6  dbd3              BLT      |L1.672|
0002f8  482e              LDR      r0,|L1.948|
0002fa  7800              LDRB     r0,[r0,#0]            ;347  ; VK2C21A_segi
0002fc  1c40              ADDS     r0,r0,#1              ;347
0002fe  492d              LDR      r1,|L1.948|
000300  7008              STRB     r0,[r1,#0]            ;347
                  |L1.770|
000302  482c              LDR      r0,|L1.948|
000304  7800              LDRB     r0,[r0,#0]            ;347  ; VK2C21A_segi
000306  4929              LDR      r1,|L1.940|
000308  7809              LDRB     r1,[r1,#0]            ;347  ; VK2C21A_maxseg
00030a  4288              CMP      r0,r1                 ;347
00030c  dbc4              BLT      |L1.664|
;;;357    			}
;;;358    		}
;;;359    		
;;;360    		VK2C21A_DisAll(0xff);			//LCD全显
00030e  20ff              MOVS     r0,#0xff
000310  f7fffffe          BL       VK2C21A_DisAll
;;;361    		Delay_nmS(500);					  //延时
000314  f44f70fa          MOV      r0,#0x1f4
000318  f7fffffe          BL       Delay_nmS
;;;362    		for(VK2C21A_segi=0;VK2C21A_segi<VK2C21A_maxseg;VK2C21A_segi++)//seg
00031c  2000              MOVS     r0,#0
00031e  4925              LDR      r1,|L1.948|
000320  7008              STRB     r0,[r1,#0]
000322  e034              B        |L1.910|
                  |L1.804|
;;;363    		{
;;;364    			for(VK2C21A_comi=0;VK2C21A_comi<VK2C21A_maxcom;VK2C21A_comi++)//com
000324  2000              MOVS     r0,#0
000326  4924              LDR      r1,|L1.952|
000328  7008              STRB     r0,[r1,#0]
00032a  e025              B        |L1.888|
                  |L1.812|
;;;365    			{
;;;366    				if(VK2C21A_maxcom==8)
00032c  481d              LDR      r0,|L1.932|
00032e  7800              LDRB     r0,[r0,#0]  ; VK2C21A_maxcom
000330  2808              CMP      r0,#8
000332  d108              BNE      |L1.838|
;;;367    					VK2C21A_DisDotOff(VK2C21A_segtab[VK2C21A_segi],VK2C21A_comi);	//LCD单点关闭
000334  4921              LDR      r1,|L1.956|
000336  4a1f              LDR      r2,|L1.948|
000338  7812              LDRB     r2,[r2,#0]  ; VK2C21A_segi
00033a  5c88              LDRB     r0,[r1,r2]
00033c  491e              LDR      r1,|L1.952|
00033e  7809              LDRB     r1,[r1,#0]  ; VK2C21A_comi
000340  f7fffffe          BL       VK2C21A_DisDotOff
000344  e007              B        |L1.854|
                  |L1.838|
;;;368    				else
;;;369    					VK2C21A_DisDotOff(VK2C21A_segtab[VK2C21A_segi],VK2C21A_comi);	//LCD单点关闭
000346  491d              LDR      r1,|L1.956|
000348  4a1a              LDR      r2,|L1.948|
00034a  7812              LDRB     r2,[r2,#0]  ; VK2C21A_segi
00034c  5c88              LDRB     r0,[r1,r2]
00034e  491a              LDR      r1,|L1.952|
000350  7809              LDRB     r1,[r1,#0]  ; VK2C21A_comi
000352  f7fffffe          BL       VK2C21A_DisDotOff
                  |L1.854|
;;;370    				Delay_nmS(300);				//延时300mS
000356  f44f7096          MOV      r0,#0x12c
00035a  f7fffffe          BL       Delay_nmS
;;;371    				VK2C21A_DisDotOn(VK2C21A_segtab[VK2C21A_segi],VK2C21A_comi);  //此行配合单点关闭函数实现单点关闭，屏蔽此行顺序关闭
00035e  4917              LDR      r1,|L1.956|
000360  4a14              LDR      r2,|L1.948|
000362  7812              LDRB     r2,[r2,#0]  ; VK2C21A_segi
000364  5c88              LDRB     r0,[r1,r2]
000366  4914              LDR      r1,|L1.952|
000368  7809              LDRB     r1,[r1,#0]  ; VK2C21A_comi
00036a  f7fffffe          BL       VK2C21A_DisDotOn
00036e  4812              LDR      r0,|L1.952|
000370  7800              LDRB     r0,[r0,#0]            ;364  ; VK2C21A_comi
000372  1c40              ADDS     r0,r0,#1              ;364
000374  4910              LDR      r1,|L1.952|
000376  7008              STRB     r0,[r1,#0]            ;364
                  |L1.888|
000378  480f              LDR      r0,|L1.952|
00037a  7800              LDRB     r0,[r0,#0]            ;364  ; VK2C21A_comi
00037c  4909              LDR      r1,|L1.932|
00037e  7809              LDRB     r1,[r1,#0]            ;364  ; VK2C21A_maxcom
000380  4288              CMP      r0,r1                 ;364
000382  dbd3              BLT      |L1.812|
000384  480b              LDR      r0,|L1.948|
000386  7800              LDRB     r0,[r0,#0]            ;362  ; VK2C21A_segi
000388  1c40              ADDS     r0,r0,#1              ;362
00038a  490a              LDR      r1,|L1.948|
00038c  7008              STRB     r0,[r1,#0]            ;362
                  |L1.910|
00038e  4809              LDR      r0,|L1.948|
000390  7800              LDRB     r0,[r0,#0]            ;362  ; VK2C21A_segi
000392  4906              LDR      r1,|L1.940|
000394  7809              LDRB     r1,[r1,#0]            ;362  ; VK2C21A_maxseg
000396  4288              CMP      r0,r1                 ;362
000398  dbc4              BLT      |L1.804|
;;;372    			}
;;;373    		}
;;;374    		Delay_nmS(1000);					  //延时
00039a  f44f707a          MOV      r0,#0x3e8
00039e  f7fffffe          BL       Delay_nmS
                  |L1.930|
0003a2  e73d              B        |L1.544|
;;;375    	}
;;;376    }
;;;377    /************************END OF FILE****/
                          ENDP

                  |L1.932|
                          DCD      VK2C21A_maxcom
                  |L1.936|
                          DCD      VK2C21A_dispram
                  |L1.940|
                          DCD      VK2C21A_maxseg
                  |L1.944|
                          DCD      VK2C21A_readbuf
                  |L1.948|
                          DCD      VK2C21A_segi
                  |L1.952|
                          DCD      VK2C21A_comi
                  |L1.956|
                          DCD      VK2C21A_segtab

                          AREA ||.bss||, DATA, NOINIT, ALIGN=0

                  VK2C21A_dispram
                          %        20
                  VK2C21A_readbuf
                          %        20

                          AREA ||.data||, DATA, ALIGN=0

                  VK2C21A_segtab
000000  00010203          DCB      0x00,0x01,0x02,0x03
000004  04050607          DCB      0x04,0x05,0x06,0x07
000008  08090a0b          DCB      0x08,0x09,0x0a,0x0b
00000c  0c0d0e0f          DCB      0x0c,0x0d,0x0e,0x0f
000010  10111213          DCB      0x10,0x11,0x12,0x13
                  VK2C21A_segi
000014  00                DCB      0x00
                  VK2C21A_comi
000015  00                DCB      0x00
                  VK2C21A_maxcom
000016  00                DCB      0x00
                  VK2C21A_maxseg
000017  00                DCB      0x00

;*** Start embedded assembler ***

#line 1 "..\\lcd_driver\\VK2C21A_IO_I2C.c"
	AREA ||.rev16_text||, CODE
	THUMB
	EXPORT |__asm___16_VK2C21A_IO_I2C_c_705f0fde____REV16|
#line 114 "..\\..\\..\\Library\\CMSIS\\Include\\core_cmInstr.h"
|__asm___16_VK2C21A_IO_I2C_c_705f0fde____REV16| PROC
#line 115

 rev16 r0, r0
 bx lr
	ENDP
	AREA ||.revsh_text||, CODE
	THUMB
	EXPORT |__asm___16_VK2C21A_IO_I2C_c_705f0fde____REVSH|
#line 128
|__asm___16_VK2C21A_IO_I2C_c_705f0fde____REVSH| PROC
#line 129

 revsh r0, r0
 bx lr
	ENDP

;*** End   embedded assembler ***
