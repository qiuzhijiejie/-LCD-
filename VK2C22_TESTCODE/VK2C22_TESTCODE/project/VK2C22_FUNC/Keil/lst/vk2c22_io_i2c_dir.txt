; generated by Component: ARM Compiler 5.05 update 2 (build 169) Tool: ArmCC [4d0f38]
; commandline ArmCC [--list --debug -c --asm --interleave -o.\obj\vk2c22_io_i2c_dir.o --asm_dir=.\lst\ --list_dir=.\lst\ --depend=.\obj\vk2c22_io_i2c_dir.d --cpu=Cortex-M4.fp --apcs=interwork -O0 --diag_suppress=9931 -I..\..\..\Library\CMSIS\Include -I..\..\..\Library\Device\Nuvoton\M451Series\Include -I..\..\..\Library\StdDriver\inc -I..\Bsp -I..\User -I..\lcd_driver -I..\exti_driver -I..\led_driver -I..\touch -I..\dotmatix_lcd -I..\KH -ID:\工作\A工程资料\LCD\抗干扰系列_VK2C\VK2C例程\VK2C22_TESTCODE\project\VK2C22_FUNC\Keil\RTE -IC:\Keil_v5\ARM\PACK\ARM\CMSIS\4.3.0\CMSIS\Include -D__UVISION_VERSION=515 -D_RTE_ --omf_browse=.\obj\vk2c22_io_i2c_dir.crf ..\lcd_driver\VK2C22_IO_I2C_DIR.c]
                          THUMB

                          AREA ||.text||, CODE, READONLY, ALIGN=2

                  delay_nus PROC
;;;62     *******************************************************************************/
;;;63     void delay_nus(unsigned int n)	   
000000  e007              B        |L1.18|
                  |L1.2|
;;;64     {
;;;65     	unsigned char i;
;;;66     	while(n--)
;;;67     	{
;;;68     		i=10;
000002  210a              MOVS     r1,#0xa
;;;69     		while(i--)
000004  e000              B        |L1.8|
                  |L1.6|
;;;70     		{//nop指令根据单片机做相应的修改
;;;71     			__nop();
000006  bf00              NOP      
                  |L1.8|
000008  000a              MOVS     r2,r1                 ;69
00000a  f1a10301          SUB      r3,r1,#1              ;69
00000e  b2d9              UXTB     r1,r3                 ;69
000010  d1f9              BNE      |L1.6|
                  |L1.18|
000012  0002              MOVS     r2,r0                 ;66
000014  f1a00001          SUB      r0,r0,#1              ;66
000018  d1f3              BNE      |L1.2|
;;;72     		}
;;;73     	}
;;;74     }
00001a  4770              BX       lr
;;;75     /*******************************************************************************
                          ENDP

                  delay_nms PROC
;;;81     *******************************************************************************/
;;;82     void delay_nms(unsigned long int n)
00001c  b510              PUSH     {r4,lr}
;;;83     {
00001e  4604              MOV      r4,r0
;;;84     	while(n--)
000020  e003              B        |L1.42|
                  |L1.34|
;;;85     	{
;;;86     		delay_nus(1000);
000022  f44f707a          MOV      r0,#0x3e8
000026  f7fffffe          BL       delay_nus
                  |L1.42|
00002a  0020              MOVS     r0,r4                 ;84
00002c  f1a40401          SUB      r4,r4,#1              ;84
000030  d1f7              BNE      |L1.34|
;;;87     	}
;;;88     }
000032  bd10              POP      {r4,pc}
;;;89     /*******************************************************************************
                          ENDP

                  VK2C22_I2CStart PROC
;;;95     *******************************************************************************/
;;;96     void VK2C22_I2CStart( void )
000034  b500              PUSH     {lr}
;;;97     {
;;;98       VK2C22_SCL_H();
000036  2001              MOVS     r0,#1
000038  49f9              LDR      r1,|L1.1056|
00003a  6008              STR      r0,[r1,#0]
;;;99       VK2C22_SDA_H();
00003c  49f8              LDR      r1,|L1.1056|
00003e  3928              SUBS     r1,r1,#0x28
000040  6008              STR      r0,[r1,#0]
;;;100      delay_nus(VK2C22_CLK);
000042  200a              MOVS     r0,#0xa
000044  f7fffffe          BL       delay_nus
;;;101      VK2C22_SDA_L();
000048  2000              MOVS     r0,#0
00004a  49f5              LDR      r1,|L1.1056|
00004c  3928              SUBS     r1,r1,#0x28
00004e  6008              STR      r0,[r1,#0]
;;;102      delay_nus(VK2C22_CLK);
000050  200a              MOVS     r0,#0xa
000052  f7fffffe          BL       delay_nus
;;;103    }
000056  bd00              POP      {pc}
;;;104    /*******************************************************************************
                          ENDP

                  VK2C22_I2CStop PROC
;;;110    *******************************************************************************/
;;;111    void VK2C22_I2CStop( void )
000058  b500              PUSH     {lr}
;;;112    {
;;;113      VK2C22_SCL_H();
00005a  2001              MOVS     r0,#1
00005c  49f0              LDR      r1,|L1.1056|
00005e  6008              STR      r0,[r1,#0]
;;;114      VK2C22_SDA_L();
000060  2000              MOVS     r0,#0
000062  49ef              LDR      r1,|L1.1056|
000064  3928              SUBS     r1,r1,#0x28
000066  6008              STR      r0,[r1,#0]
;;;115      delay_nus(VK2C22_CLK);
000068  200a              MOVS     r0,#0xa
00006a  f7fffffe          BL       delay_nus
;;;116      VK2C22_SDA_H();
00006e  2001              MOVS     r0,#1
000070  49eb              LDR      r1,|L1.1056|
000072  3928              SUBS     r1,r1,#0x28
000074  6008              STR      r0,[r1,#0]
;;;117      delay_nus(VK2C22_CLK);
000076  200a              MOVS     r0,#0xa
000078  f7fffffe          BL       delay_nus
;;;118    }
00007c  bd00              POP      {pc}
;;;119    /*******************************************************************************
                          ENDP

                  VK2C22_I2CSlaveAck PROC
;;;125    *******************************************************************************/
;;;126    unsigned char VK2C22_I2CSlaveAck( void )
00007e  b570              PUSH     {r4-r6,lr}
;;;127    {
;;;128      unsigned int TimeOut;
;;;129      unsigned char RetValue;
;;;130    	
;;;131    	VK2C22_SET_SDA_IN();
000080  2200              MOVS     r2,#0
000082  2120              MOVS     r1,#0x20
000084  48e7              LDR      r0,|L1.1060|
000086  f7fffffe          BL       GPIO_SetMode
;;;132    //	VK2C22_SDA_H();	
;;;133    	VK2C22_SDA_L();	//SDA脚设为输入后，有些单片机需送1，有些单片机需送0
00008a  2000              MOVS     r0,#0
00008c  49e4              LDR      r1,|L1.1056|
00008e  3928              SUBS     r1,r1,#0x28
000090  6008              STR      r0,[r1,#0]
;;;134      VK2C22_SCL_L();
000092  49e3              LDR      r1,|L1.1056|
000094  6008              STR      r0,[r1,#0]
;;;135      delay_nus(VK2C22_CLK);
000096  200a              MOVS     r0,#0xa
000098  f7fffffe          BL       delay_nus
;;;136      VK2C22_SCL_H();//第9个sclk上升沿
00009c  2001              MOVS     r0,#1
00009e  49e0              LDR      r1,|L1.1056|
0000a0  6008              STR      r0,[r1,#0]
;;;137      TimeOut = 10000;
0000a2  f2427510          MOV      r5,#0x2710
;;;138      while( TimeOut-- > 0 )
0000a6  e007              B        |L1.184|
                  |L1.168|
;;;139      {
;;;140        if( VK2C22_GET_SDA()!=0 )//读取ack
0000a8  48dd              LDR      r0,|L1.1056|
0000aa  3828              SUBS     r0,r0,#0x28
0000ac  6800              LDR      r0,[r0,#0]
0000ae  b108              CBZ      r0,|L1.180|
;;;141        {
;;;142          RetValue = 1;
0000b0  2401              MOVS     r4,#1
0000b2  e001              B        |L1.184|
                  |L1.180|
;;;143        }
;;;144        else
;;;145        {
;;;146          RetValue = 0;
0000b4  2400              MOVS     r4,#0
;;;147          break;
0000b6  e003              B        |L1.192|
                  |L1.184|
0000b8  0028              MOVS     r0,r5                 ;138
0000ba  f1a50501          SUB      r5,r5,#1              ;138
0000be  d1f3              BNE      |L1.168|
                  |L1.192|
0000c0  bf00              NOP      
;;;148        }
;;;149      } 
;;;150    	VK2C22_SCL_L(); 
0000c2  2000              MOVS     r0,#0
0000c4  49d6              LDR      r1,|L1.1056|
0000c6  6008              STR      r0,[r1,#0]
;;;151      VK2C22_SET_SDA_OUT();
0000c8  2201              MOVS     r2,#1
0000ca  2120              MOVS     r1,#0x20
0000cc  48d5              LDR      r0,|L1.1060|
0000ce  f7fffffe          BL       GPIO_SetMode
;;;152      return RetValue;
0000d2  4620              MOV      r0,r4
;;;153    }
0000d4  bd70              POP      {r4-r6,pc}
;;;154    /*******************************************************************************
                          ENDP

                  VK2C22_I2CSendAck PROC
;;;160    *******************************************************************************/
;;;161    void VK2C22_I2CSendAck( void )
0000d6  b500              PUSH     {lr}
;;;162    {
;;;163      VK2C22_SCL_L();
0000d8  2000              MOVS     r0,#0
0000da  49d1              LDR      r1,|L1.1056|
0000dc  6008              STR      r0,[r1,#0]
;;;164      VK2C22_SDA_L();
0000de  49d0              LDR      r1,|L1.1056|
0000e0  3928              SUBS     r1,r1,#0x28
0000e2  6008              STR      r0,[r1,#0]
;;;165      delay_nus(VK2C22_CLK*2);
0000e4  2014              MOVS     r0,#0x14
0000e6  f7fffffe          BL       delay_nus
;;;166      VK2C22_SCL_H();
0000ea  2001              MOVS     r0,#1
0000ec  49cc              LDR      r1,|L1.1056|
0000ee  6008              STR      r0,[r1,#0]
;;;167      delay_nus(VK2C22_CLK*2);
0000f0  2014              MOVS     r0,#0x14
0000f2  f7fffffe          BL       delay_nus
;;;168      VK2C22_SCL_L();
0000f6  2000              MOVS     r0,#0
0000f8  49c9              LDR      r1,|L1.1056|
0000fa  6008              STR      r0,[r1,#0]
;;;169      VK2C22_SDA_H();
0000fc  2001              MOVS     r0,#1
0000fe  49c8              LDR      r1,|L1.1056|
000100  3928              SUBS     r1,r1,#0x28
000102  6008              STR      r0,[r1,#0]
;;;170    }
000104  bd00              POP      {pc}
;;;171    /*******************************************************************************
                          ENDP

                  VK2C22_I2CSendNAck PROC
;;;177    *******************************************************************************/
;;;178    void VK2C22_I2CSendNAck( void )
000106  b500              PUSH     {lr}
;;;179    {
;;;180      VK2C22_SCL_L();
000108  2000              MOVS     r0,#0
00010a  49c5              LDR      r1,|L1.1056|
00010c  6008              STR      r0,[r1,#0]
;;;181      VK2C22_SDA_H();
00010e  2001              MOVS     r0,#1
000110  49c3              LDR      r1,|L1.1056|
000112  3928              SUBS     r1,r1,#0x28
000114  6008              STR      r0,[r1,#0]
;;;182      delay_nus(VK2C22_CLK);
000116  200a              MOVS     r0,#0xa
000118  f7fffffe          BL       delay_nus
;;;183      VK2C22_SCL_H();
00011c  2001              MOVS     r0,#1
00011e  49c0              LDR      r1,|L1.1056|
000120  6008              STR      r0,[r1,#0]
;;;184      delay_nus(VK2C22_CLK);
000122  200a              MOVS     r0,#0xa
000124  f7fffffe          BL       delay_nus
;;;185    }
000128  bd00              POP      {pc}
;;;186    /*******************************************************************************
                          ENDP

                  VK2C22_I2CWriteByte PROC
;;;192    *******************************************************************************/
;;;193    void VK2C22_I2CWriteByte( unsigned char byte )
00012a  b530              PUSH     {r4,r5,lr}
;;;194    {
00012c  4604              MOV      r4,r0
;;;195    	unsigned char i=8;
00012e  2508              MOVS     r5,#8
;;;196    	while (i--)
000130  e019              B        |L1.358|
                  |L1.306|
;;;197    	{ 
;;;198    		VK2C22_SCL_L();
000132  2000              MOVS     r0,#0
000134  49ba              LDR      r1,|L1.1056|
000136  6008              STR      r0,[r1,#0]
;;;199    		if(byte&0x80)
000138  f0040080          AND      r0,r4,#0x80
00013c  b120              CBZ      r0,|L1.328|
;;;200    			VK2C22_SDA_H();
00013e  2001              MOVS     r0,#1
000140  49b7              LDR      r1,|L1.1056|
000142  3928              SUBS     r1,r1,#0x28
000144  6008              STR      r0,[r1,#0]
000146  e003              B        |L1.336|
                  |L1.328|
;;;201    		else
;;;202    			VK2C22_SDA_L();
000148  2000              MOVS     r0,#0
00014a  49b5              LDR      r1,|L1.1056|
00014c  3928              SUBS     r1,r1,#0x28
00014e  6008              STR      r0,[r1,#0]
                  |L1.336|
;;;203    		byte<<=1; 
000150  0660              LSLS     r0,r4,#25
000152  0e04              LSRS     r4,r0,#24
;;;204    		delay_nus(VK2C22_CLK);
000154  200a              MOVS     r0,#0xa
000156  f7fffffe          BL       delay_nus
;;;205    		VK2C22_SCL_H();     
00015a  2001              MOVS     r0,#1
00015c  49b0              LDR      r1,|L1.1056|
00015e  6008              STR      r0,[r1,#0]
;;;206    		delay_nus(VK2C22_CLK);
000160  200a              MOVS     r0,#0xa
000162  f7fffffe          BL       delay_nus
                  |L1.358|
000166  0028              MOVS     r0,r5                 ;196
000168  f1a50101          SUB      r1,r5,#1              ;196
00016c  b2cd              UXTB     r5,r1                 ;196
00016e  d1e0              BNE      |L1.306|
;;;207    	}
;;;208    }
000170  bd30              POP      {r4,r5,pc}
;;;209    
                          ENDP

                  WriteCmdVK2C22 PROC
;;;216    *******************************************************************************/
;;;217    unsigned char WriteCmdVK2C22(unsigned char cmd)
000172  b510              PUSH     {r4,lr}
;;;218    {
000174  4604              MOV      r4,r0
;;;219    	VK2C22_I2CStart();
000176  f7fffffe          BL       VK2C22_I2CStart
;;;220    
;;;221    	VK2C22_I2CWriteByte( VK2C22_ADDRWR|0x00 );
00017a  207e              MOVS     r0,#0x7e
00017c  f7fffffe          BL       VK2C22_I2CWriteByte
;;;222    	if( 1 == VK2C22_I2CSlaveAck() )
000180  f7fffffe          BL       VK2C22_I2CSlaveAck
000184  2801              CMP      r0,#1
000186  d103              BNE      |L1.400|
;;;223    	{
;;;224    		VK2C22_I2CStop(); 
000188  f7fffffe          BL       VK2C22_I2CStop
;;;225    		return 0;   
00018c  2000              MOVS     r0,#0
                  |L1.398|
;;;226    	}
;;;227    	VK2C22_I2CWriteByte( cmd );
;;;228    	if( 1 == VK2C22_I2CSlaveAck() )
;;;229    	{
;;;230    		VK2C22_I2CStop(); 
;;;231    		return 0;   
;;;232    	}
;;;233      VK2C22_I2CStop();
;;;234     
;;;235      return 0;    //返回操作成败标志
;;;236    }
00018e  bd10              POP      {r4,pc}
                  |L1.400|
000190  4620              MOV      r0,r4                 ;227
000192  f7fffffe          BL       VK2C22_I2CWriteByte
000196  f7fffffe          BL       VK2C22_I2CSlaveAck
00019a  2801              CMP      r0,#1                 ;228
00019c  d103              BNE      |L1.422|
00019e  f7fffffe          BL       VK2C22_I2CStop
0001a2  2000              MOVS     r0,#0                 ;231
0001a4  e7f3              B        |L1.398|
                  |L1.422|
0001a6  f7fffffe          BL       VK2C22_I2CStop
0001aa  2000              MOVS     r0,#0                 ;235
0001ac  e7ef              B        |L1.398|
;;;237    /*******************************************************************************
                          ENDP

                  VK2C22_I2CRDDat PROC
;;;243    *******************************************************************************/
;;;244    unsigned char VK2C22_I2CRDDat( void )
0001ae  b570              PUSH     {r4-r6,lr}
;;;245    {
;;;246    	unsigned char i,RetValue,bit;
;;;247    	
;;;248    	VK2C22_SET_SDA_IN();
0001b0  2200              MOVS     r2,#0
0001b2  2120              MOVS     r1,#0x20
0001b4  489b              LDR      r0,|L1.1060|
0001b6  f7fffffe          BL       GPIO_SetMode
;;;249    // VK2C22_SDA_H();	
;;;250    	VK2C22_SDA_L();	//SDA脚设为输入后，有些单片机需送1，有些单片机需送0
0001ba  2000              MOVS     r0,#0
0001bc  4998              LDR      r1,|L1.1056|
0001be  3928              SUBS     r1,r1,#0x28
0001c0  6008              STR      r0,[r1,#0]
;;;251    	RetValue=0;	
0001c2  2500              MOVS     r5,#0
;;;252      for( i=0; i<8; i++ )
0001c4  2400              MOVS     r4,#0
0001c6  e018              B        |L1.506|
                  |L1.456|
;;;253      {
;;;254    		VK2C22_SCL_H(); 
0001c8  2001              MOVS     r0,#1
0001ca  4995              LDR      r1,|L1.1056|
0001cc  6008              STR      r0,[r1,#0]
;;;255        delay_nus(VK2C22_CLK);
0001ce  200a              MOVS     r0,#0xa
0001d0  f7fffffe          BL       delay_nus
;;;256        if( 1 == VK2C22_GET_SDA() )
0001d4  4892              LDR      r0,|L1.1056|
0001d6  3828              SUBS     r0,r0,#0x28
0001d8  6800              LDR      r0,[r0,#0]
0001da  2801              CMP      r0,#1
0001dc  d101              BNE      |L1.482|
;;;257          bit = 0X01;
0001de  2601              MOVS     r6,#1
0001e0  e000              B        |L1.484|
                  |L1.482|
;;;258        else
;;;259          bit = 0x00;
0001e2  2600              MOVS     r6,#0
                  |L1.484|
;;;260          
;;;261        RetValue = (RetValue<<1)|bit;
0001e4  ea460045          ORR      r0,r6,r5,LSL #1
0001e8  b2c5              UXTB     r5,r0
;;;262        VK2C22_SCL_L();
0001ea  2000              MOVS     r0,#0
0001ec  498c              LDR      r1,|L1.1056|
0001ee  6008              STR      r0,[r1,#0]
;;;263        delay_nus(VK2C22_CLK);
0001f0  200a              MOVS     r0,#0xa
0001f2  f7fffffe          BL       delay_nus
0001f6  1c60              ADDS     r0,r4,#1              ;252
0001f8  b2c4              UXTB     r4,r0                 ;252
                  |L1.506|
0001fa  2c08              CMP      r4,#8                 ;252
0001fc  dbe4              BLT      |L1.456|
;;;264    	}
;;;265      VK2C22_SET_SDA_OUT();
0001fe  2201              MOVS     r2,#1
000200  2120              MOVS     r1,#0x20
000202  4888              LDR      r0,|L1.1060|
000204  f7fffffe          BL       GPIO_SetMode
;;;266      return RetValue;
000208  4628              MOV      r0,r5
;;;267    }
00020a  bd70              POP      {r4-r6,pc}
;;;268    /*******************************************************************************
                          ENDP

                  WritenDataVK2C22 PROC
;;;276    *******************************************************************************/
;;;277    unsigned char  WritenDataVK2C22(unsigned char Addr,unsigned char *Databuf,unsigned char Cnt)
00020c  e92d41f0          PUSH     {r4-r8,lr}
;;;278    {
000210  4607              MOV      r7,r0
000212  460c              MOV      r4,r1
000214  4616              MOV      r6,r2
;;;279    	unsigned char n;
;;;280    	
;;;281    	//START信号	
;;;282    	VK2C22_I2CStart(); 									
000216  f7fffffe          BL       VK2C22_I2CStart
;;;283    	//SLAVE地址
;;;284    	VK2C22_I2CWriteByte(VK2C22_ADDRWR); 	
00021a  207e              MOVS     r0,#0x7e
00021c  f7fffffe          BL       VK2C22_I2CWriteByte
;;;285    	if( 1 == VK2C22_I2CSlaveAck() )
000220  f7fffffe          BL       VK2C22_I2CSlaveAck
000224  2801              CMP      r0,#1
000226  d104              BNE      |L1.562|
;;;286    	{
;;;287    		VK2C22_I2CStop();													
000228  f7fffffe          BL       VK2C22_I2CStop
;;;288    		return 0;										
00022c  2000              MOVS     r0,#0
                  |L1.558|
;;;289    	}
;;;290    	//显示RAM起始地址
;;;291    	VK2C22_I2CWriteByte(Addr); 						
;;;292    	if( 1 == VK2C22_I2CSlaveAck() )
;;;293    	{
;;;294    		VK2C22_I2CStop();													
;;;295    		return 0;
;;;296    	}
;;;297    	//发送Cnt个数据到显示RAM
;;;298    	for(n=0;n<Cnt;n++)
;;;299    	{ 
;;;300    		VK2C22_I2CWriteByte(*Databuf++);
;;;301    		if( VK2C22_I2CSlaveAck()==1 )
;;;302    		{
;;;303    			VK2C22_I2CStop();													
;;;304    			return 0;
;;;305    		}
;;;306    	}
;;;307    	//STOP信号
;;;308    	 VK2C22_I2CStop();											
;;;309    	 return 0;    
;;;310    }
00022e  e8bd81f0          POP      {r4-r8,pc}
                  |L1.562|
000232  4638              MOV      r0,r7                 ;291
000234  f7fffffe          BL       VK2C22_I2CWriteByte
000238  f7fffffe          BL       VK2C22_I2CSlaveAck
00023c  2801              CMP      r0,#1                 ;292
00023e  d103              BNE      |L1.584|
000240  f7fffffe          BL       VK2C22_I2CStop
000244  2000              MOVS     r0,#0                 ;295
000246  e7f2              B        |L1.558|
                  |L1.584|
000248  2500              MOVS     r5,#0                 ;298
00024a  e00d              B        |L1.616|
                  |L1.588|
00024c  f8140b01          LDRB     r0,[r4],#1            ;300
000250  f7fffffe          BL       VK2C22_I2CWriteByte
000254  f7fffffe          BL       VK2C22_I2CSlaveAck
000258  2801              CMP      r0,#1                 ;301
00025a  d103              BNE      |L1.612|
00025c  f7fffffe          BL       VK2C22_I2CStop
000260  2000              MOVS     r0,#0                 ;304
000262  e7e4              B        |L1.558|
                  |L1.612|
000264  1c68              ADDS     r0,r5,#1              ;298
000266  b2c5              UXTB     r5,r0                 ;298
                  |L1.616|
000268  42b5              CMP      r5,r6                 ;298
00026a  dbef              BLT      |L1.588|
00026c  f7fffffe          BL       VK2C22_I2CStop
000270  2000              MOVS     r0,#0                 ;309
000272  e7dc              B        |L1.558|
;;;311    /*******************************************************************************
                          ENDP

                  ReadnDataVK2C22 PROC
;;;319    *******************************************************************************/
;;;320    unsigned char  ReadnDataVK2C22(unsigned char Addr,unsigned char *Databuf,unsigned char Cnt)
000274  e92d41f0          PUSH     {r4-r8,lr}
;;;321    {
000278  4607              MOV      r7,r0
00027a  460c              MOV      r4,r1
00027c  4616              MOV      r6,r2
;;;322    	unsigned char n;
;;;323    	
;;;324    	//START信号	
;;;325    	VK2C22_I2CStart(); 									
00027e  f7fffffe          BL       VK2C22_I2CStart
;;;326    	//SLAVE地址写
;;;327    	VK2C22_I2CWriteByte(VK2C22_ADDRWR); 	
000282  207e              MOVS     r0,#0x7e
000284  f7fffffe          BL       VK2C22_I2CWriteByte
;;;328    	if( 1 == VK2C22_I2CSlaveAck() )
000288  f7fffffe          BL       VK2C22_I2CSlaveAck
00028c  2801              CMP      r0,#1
00028e  d104              BNE      |L1.666|
;;;329    	{
;;;330    		VK2C22_I2CStop();													
000290  f7fffffe          BL       VK2C22_I2CStop
;;;331    		return 0;										
000294  2000              MOVS     r0,#0
                  |L1.662|
;;;332    	}                        
;;;333    	//显示RAM起始地址
;;;334    	VK2C22_I2CWriteByte(Addr); 						
;;;335    	if( 1 == VK2C22_I2CSlaveAck() )
;;;336    	{
;;;337    		VK2C22_I2CStop();													
;;;338    		return 0;
;;;339    	}
;;;340    	
;;;341    	//STOP信号
;;;342    	VK2C22_I2CStop();	
;;;343    	//START信号	
;;;344    	VK2C22_I2CStart(); 									
;;;345    	//SLAVE地址读
;;;346    	VK2C22_I2CWriteByte(VK2C22_ADDRRD); 	
;;;347    		if( 1 == VK2C22_I2CSlaveAck() )
;;;348    	{
;;;349    		VK2C22_I2CStop();													
;;;350    		return 0;										
;;;351    	}  
;;;352    	//读Cnt个数据到显示RAM
;;;353    	for(n=0;n<Cnt-1;n++)
;;;354    	{ 
;;;355    		*Databuf++=VK2C22_I2CRDDat();
;;;356    		VK2C22_I2CSendAck();
;;;357    	}
;;;358    	*Databuf++=VK2C22_I2CRDDat();
;;;359    	VK2C22_I2CSendNAck();
;;;360    	//STOP信号
;;;361    	VK2C22_I2CStop();											
;;;362    	 return 0;    
;;;363    }
000296  e8bd81f0          POP      {r4-r8,pc}
                  |L1.666|
00029a  4638              MOV      r0,r7                 ;334
00029c  f7fffffe          BL       VK2C22_I2CWriteByte
0002a0  f7fffffe          BL       VK2C22_I2CSlaveAck
0002a4  2801              CMP      r0,#1                 ;335
0002a6  d103              BNE      |L1.688|
0002a8  f7fffffe          BL       VK2C22_I2CStop
0002ac  2000              MOVS     r0,#0                 ;338
0002ae  e7f2              B        |L1.662|
                  |L1.688|
0002b0  f7fffffe          BL       VK2C22_I2CStop
0002b4  f7fffffe          BL       VK2C22_I2CStart
0002b8  207f              MOVS     r0,#0x7f              ;346
0002ba  f7fffffe          BL       VK2C22_I2CWriteByte
0002be  f7fffffe          BL       VK2C22_I2CSlaveAck
0002c2  2801              CMP      r0,#1                 ;347
0002c4  d103              BNE      |L1.718|
0002c6  f7fffffe          BL       VK2C22_I2CStop
0002ca  2000              MOVS     r0,#0                 ;350
0002cc  e7e3              B        |L1.662|
                  |L1.718|
0002ce  2500              MOVS     r5,#0                 ;353
0002d0  e007              B        |L1.738|
                  |L1.722|
0002d2  f7fffffe          BL       VK2C22_I2CRDDat
0002d6  f8040b01          STRB     r0,[r4],#1            ;355
0002da  f7fffffe          BL       VK2C22_I2CSendAck
0002de  1c68              ADDS     r0,r5,#1              ;353
0002e0  b2c5              UXTB     r5,r0                 ;353
                  |L1.738|
0002e2  1e70              SUBS     r0,r6,#1              ;353
0002e4  42a8              CMP      r0,r5                 ;353
0002e6  dcf4              BGT      |L1.722|
0002e8  f7fffffe          BL       VK2C22_I2CRDDat
0002ec  f8040b01          STRB     r0,[r4],#1            ;358
0002f0  f7fffffe          BL       VK2C22_I2CSendNAck
0002f4  f7fffffe          BL       VK2C22_I2CStop
0002f8  2000              MOVS     r0,#0                 ;362
0002fa  e7cc              B        |L1.662|
;;;364    /*******************************************************************************
                          ENDP

                  VK2C22_DisAll PROC
;;;371    *******************************************************************************/
;;;372    void VK2C22_DisAll(unsigned char dat)
0002fc  b570              PUSH     {r4-r6,lr}
;;;373    {
0002fe  4605              MOV      r5,r0
;;;374    	unsigned char segi;
;;;375    	unsigned char dispram[22];
;;;376    	
;;;377    	for(segi=0;segi<22;segi++)
000300  2400              MOVS     r4,#0
000302  e003              B        |L1.780|
                  |L1.772|
;;;378    	{
;;;379    		VK2C22_dispram[segi]=dat;
000304  4848              LDR      r0,|L1.1064|
000306  5505              STRB     r5,[r0,r4]
000308  1c60              ADDS     r0,r4,#1              ;377
00030a  b2c4              UXTB     r4,r0                 ;377
                  |L1.780|
00030c  2c16              CMP      r4,#0x16              ;377
00030e  dbf9              BLT      |L1.772|
;;;380    	}
;;;381    	WritenDataVK2C22(0,VK2C22_dispram,22);//这里送8bit数据对应2个SEG，每8bit数据地址加1，每8位数据1个ACK	
000310  2216              MOVS     r2,#0x16
000312  4945              LDR      r1,|L1.1064|
000314  2000              MOVS     r0,#0
000316  f7fffffe          BL       WritenDataVK2C22
;;;382    }
00031a  bd70              POP      {r4-r6,pc}
;;;383    /*******************************************************************************
                          ENDP

                  VK2C22_DisDotOn PROC
;;;390    *******************************************************************************/
;;;391    void VK2C22_DisDotOn(unsigned char seg,unsigned char com)
00031c  b5f8              PUSH     {r3-r7,lr}
;;;392    {
00031e  4604              MOV      r4,r0
000320  460d              MOV      r5,r1
;;;393    	unsigned char addrbit,tempdat;
;;;394    	
;;;395      if(seg%2==0)
000322  4620              MOV      r0,r4
000324  eb0471d0          ADD      r1,r4,r0,LSR #31
000328  1049              ASRS     r1,r1,#1
00032a  eba40141          SUB      r1,r4,r1,LSL #1
00032e  b919              CBNZ     r1,|L1.824|
;;;396    			addrbit=(1<<com);//这里送8位数据低4bit有效，每8bit数据地址加1，每8位数据1个ACK
000330  2001              MOVS     r0,#1
000332  40a8              LSLS     r0,r0,r5
000334  b2c6              UXTB     r6,r0
000336  e003              B        |L1.832|
                  |L1.824|
;;;397    		else
;;;398    			addrbit=(1<<(4+com));//这里送8位数据高4bit有效，每8bit数据地址加1，每8位数据1个ACK
000338  1d28              ADDS     r0,r5,#4
00033a  2101              MOVS     r1,#1
00033c  4081              LSLS     r1,r1,r0
00033e  b2ce              UXTB     r6,r1
                  |L1.832|
;;;399    		tempdat=VK2C22_dispram[seg/2]|addrbit;
000340  4620              MOV      r0,r4
000342  eb0471d0          ADD      r1,r4,r0,LSR #31
000346  1049              ASRS     r1,r1,#1
000348  4a37              LDR      r2,|L1.1064|
00034a  5c51              LDRB     r1,[r2,r1]
00034c  4331              ORRS     r1,r1,r6
00034e  9100              STR      r1,[sp,#0]
;;;400    	  VK2C22_dispram[seg/2]=tempdat;
000350  f89d1000          LDRB     r1,[sp,#0]
000354  eb0472d0          ADD      r2,r4,r0,LSR #31
000358  1052              ASRS     r2,r2,#1
00035a  4b33              LDR      r3,|L1.1064|
00035c  5499              STRB     r1,[r3,r2]
;;;401    		WritenDataVK2C22(seg/2,&tempdat,1);	
00035e  4627              MOV      r7,r4
000360  eb0471d7          ADD      r1,r4,r7,LSR #31
000364  f3c10047          UBFX     r0,r1,#1,#8
000368  2201              MOVS     r2,#1
00036a  4669              MOV      r1,sp
00036c  f7fffffe          BL       WritenDataVK2C22
;;;402    }
000370  bdf8              POP      {r3-r7,pc}
;;;403    /*******************************************************************************
                          ENDP

                  VK2C22_DisDotOff PROC
;;;410    *******************************************************************************/
;;;411    void VK2C22_DisDotOff(unsigned char seg,unsigned char com)
000372  b5f8              PUSH     {r3-r7,lr}
;;;412    {
000374  4604              MOV      r4,r0
000376  460d              MOV      r5,r1
;;;413    	unsigned char addrbit,tempdat;
;;;414      
;;;415    	if(seg%2==0)
000378  4620              MOV      r0,r4
00037a  eb0471d0          ADD      r1,r4,r0,LSR #31
00037e  1049              ASRS     r1,r1,#1
000380  eba40141          SUB      r1,r4,r1,LSL #1
000384  b919              CBNZ     r1,|L1.910|
;;;416    			addrbit=(1<<com);//这里送8位数据低4bit有效，每8bit数据地址加1，每8位数据1个ACK
000386  2001              MOVS     r0,#1
000388  40a8              LSLS     r0,r0,r5
00038a  b2c6              UXTB     r6,r0
00038c  e003              B        |L1.918|
                  |L1.910|
;;;417    		else
;;;418    			addrbit=(1<<(4+com));//这里送8位数据高4bit有效，每8bit数据地址加1，每8位数据1个ACK
00038e  1d28              ADDS     r0,r5,#4
000390  2101              MOVS     r1,#1
000392  4081              LSLS     r1,r1,r0
000394  b2ce              UXTB     r6,r1
                  |L1.918|
;;;419    		tempdat=VK2C22_dispram[seg/2]&~addrbit;
000396  4620              MOV      r0,r4
000398  eb0471d0          ADD      r1,r4,r0,LSR #31
00039c  1049              ASRS     r1,r1,#1
00039e  4a22              LDR      r2,|L1.1064|
0003a0  5c51              LDRB     r1,[r2,r1]
0003a2  43b1              BICS     r1,r1,r6
0003a4  9100              STR      r1,[sp,#0]
;;;420    	  VK2C22_dispram[seg/2]=tempdat;
0003a6  f89d1000          LDRB     r1,[sp,#0]
0003aa  eb0472d0          ADD      r2,r4,r0,LSR #31
0003ae  1052              ASRS     r2,r2,#1
0003b0  4b1d              LDR      r3,|L1.1064|
0003b2  5499              STRB     r1,[r3,r2]
;;;421    		WritenDataVK2C22(seg/2,&tempdat,1);
0003b4  4627              MOV      r7,r4
0003b6  eb0471d7          ADD      r1,r4,r7,LSR #31
0003ba  f3c10047          UBFX     r0,r1,#1,#8
0003be  2201              MOVS     r2,#1
0003c0  4669              MOV      r1,sp
0003c2  f7fffffe          BL       WritenDataVK2C22
;;;422    	
;;;423    }
0003c6  bdf8              POP      {r3-r7,pc}
;;;424    /*******************************************************************************
                          ENDP

                  VK2C22_Enter_PowerOff PROC
;;;430    *******************************************************************************/
;;;431    void VK2C22_Enter_PowerOff(void)
0003c8  b510              PUSH     {r4,lr}
;;;432    {		
;;;433    //	WriteCmdVK2C22(VK2C22_MODESET|BIAS_1_2|F_80HZ|RCOFF_LCDOFF);  //模式设置  1/2 Bais 1/4 Duty帧频率80Hz,内部系统振荡器开，lcd关显示
;;;434    	WriteCmdVK2C22(VK2C22_MODESET|BIAS_1_3|F_80HZ|RCOFF_LCDOFF);  //模式设置  1/3 Bais 1/4 Duty帧频率80Hz,内部系统振荡器开，lcd关显示
0003ca  2080              MOVS     r0,#0x80
0003cc  f7fffffe          BL       WriteCmdVK2C22
;;;435    //	WriteCmdVK2C22(VK2C22_MODESET|BIAS_1_2|F_160HZ|RCOFF_LCDOFF); //模式设置  1/2 Bais 1/4 Duty帧频率160Hz,内部系统振荡器开，lcd关显示
;;;436    //	WriteCmdVK2C22(VK2C22_MODESET|BIAS_1_3|F_160HZ|RCOFF_LCDOFF); //模式设置  1/3 Bais 1/4 Duty帧频?60Hz,内部系统振荡器开，lcd关显示
;;;437    }
0003d0  bd10              POP      {r4,pc}
;;;438    /*******************************************************************************
                          ENDP

                  VK2C22_Exit_PowerOff PROC
;;;444    *******************************************************************************/
;;;445    void VK2C22_Exit_PowerOff(void)
0003d2  b510              PUSH     {r4,lr}
;;;446    {	
;;;447    //	WriteCmdVK2C22(VK2C22_MODESET|BIAS_1_2|F_80HZ|RCON_LCDON);  //模式设置  1/2 Bais 1/4 Duty帧频率80Hz,内部系统振荡器开，lcd开显示
;;;448    	WriteCmdVK2C22(VK2C22_MODESET|BIAS_1_3|F_80HZ|RCON_LCDON);  //模式设置  1/3 Bais 1/4 Duty帧频率80Hz,内部系统振荡器开，lcd开显示
0003d4  208c              MOVS     r0,#0x8c
0003d6  f7fffffe          BL       WriteCmdVK2C22
;;;449    //	WriteCmdVK2C22(VK2C22_MODESET|BIAS_1_2|F_160HZ|RCON_LCDON); //模式设置  1/2 Bais 1/4 Duty帧频率160Hz,内部系统振荡器开，lcd开显示
;;;450    //	WriteCmdVK2C22(VK2C22_MODESET|BIAS_1_3|F_160HZ|RCON_LCDON); //模式设置  1/3 Bais 1/4 Duty帧频?60Hz,内部系统振荡器开，lcd开显示
;;;451    }
0003da  bd10              POP      {r4,pc}
;;;452    
                          ENDP

                  VK2C22_Lowlevel_Init PROC
;;;459    *******************************************************************************/
;;;460    void VK2C22_Lowlevel_Init(void)
0003dc  b510              PUSH     {r4,lr}
;;;461    {
;;;462    	//通信线电平不同，建议加电平转换电路
;;;463    	//此函数根据客户单片机做相应的修改	
;;;464    	GPIO_SetMode(VK2C22_SCL_PORT, VK2C22_SCL_PIN, GPIO_MODE_OUTPUT);
0003de  2201              MOVS     r2,#1
0003e0  03d1              LSLS     r1,r2,#15
0003e2  4810              LDR      r0,|L1.1060|
0003e4  f7fffffe          BL       GPIO_SetMode
;;;465    	GPIO_SetMode(VK2C22_SDA_PORT, VK2C22_SDA_PIN, GPIO_MODE_OUTPUT);
0003e8  2201              MOVS     r2,#1
0003ea  2120              MOVS     r1,#0x20
0003ec  480d              LDR      r0,|L1.1060|
0003ee  f7fffffe          BL       GPIO_SetMode
;;;466    	
;;;467      //I2C总线空闲为高电平		
;;;468    	VK2C22_SCL_H();  
0003f2  2001              MOVS     r0,#1
0003f4  490a              LDR      r1,|L1.1056|
0003f6  6008              STR      r0,[r1,#0]
;;;469    	VK2C22_SDA_H(); 	
0003f8  4909              LDR      r1,|L1.1056|
0003fa  3928              SUBS     r1,r1,#0x28
0003fc  6008              STR      r0,[r1,#0]
;;;470    }
0003fe  bd10              POP      {r4,pc}
;;;471    /*******************************************************************************
                          ENDP

                  VK2C22_InitSequence PROC
;;;477    *******************************************************************************/
;;;478    void VK2C22_InitSequence(void)
000400  b510              PUSH     {r4,lr}
;;;479    {	
;;;480    	//管脚配置根据客户单片机做相应的修改
;;;481    	VK2C22_Lowlevel_Init();
000402  f7fffffe          BL       VK2C22_Lowlevel_Init
;;;482    	//1/4 Duty
;;;483    //	WriteCmdVK2C22(VK2C22_MODESET|BIAS_1_2|F_80HZ|RCON_LCDON);  //模式设置  1/2 Bais 1/4 Duty帧频率80Hz,内部系统振荡器开，lcd开显示
;;;484    	WriteCmdVK2C22(VK2C22_MODESET|BIAS_1_3|F_80HZ|RCON_LCDON);  //模式设置  1/3 Bais 1/4 Duty帧频率80Hz,内部系统振荡器开，lcd开显示
000406  208c              MOVS     r0,#0x8c
000408  f7fffffe          BL       WriteCmdVK2C22
;;;485    //	WriteCmdVK2C22(VK2C22_MODESET|BIAS_1_2|F_160HZ|RCON_LCDON); //模式设置  1/2 Bais 1/4 Duty帧频率160Hz,内部系统振荡器开，lcd开显示
;;;486    //	WriteCmdVK2C22(VK2C22_MODESET|BIAS_1_3|F_160HZ|RCON_LCDON); //模式设置  1/3 Bais 1/4 Duty帧频?60Hz,内部系统振荡器开，lcd开显示
;;;487    	VK2C22_maxcom=4;
00040c  2004              MOVS     r0,#4
00040e  4907              LDR      r1,|L1.1068|
000410  7008              STRB     r0,[r1,#0]
;;;488    	WriteCmdVK2C22(VK2C22_BLINKSET|BLINK_OFF); 		//闪烁关闭	
000412  20c0              MOVS     r0,#0xc0
000414  f7fffffe          BL       WriteCmdVK2C22
;;;489    //	WriteCmdVK2C22(VK2C22_BLINKSET|BLINK_2HZ); 		//闪烁2HZ
;;;490    //	WriteCmdVK2C22(VK2C22_BLINKSET|BLINK_1HZ); 		//闪烁1HZ
;;;491    //	WriteCmdVK2C22(VK2C22_BLINKSET|BLINK_0D5HZ); 	//闪烁0.5HZ
;;;492    	//SEG/VLCD共用脚设为VLCD，内部电压调整功能关闭,VLCD和VDD短接VR=0偏置电压=VDD
;;;493    //	WriteCmdVK2C22(VK2C22_IVASET|VLCDSEL_IVAOFF_R0); 
;;;494    	//SEG/VLCD共用脚设为VLCD，内部电压调整功能关闭,VLCD和VDD串接电阻VR>0偏置电压=VLCD
;;;495    //	WriteCmdVK2C22(VK2C22_IVASET|VLCDSEL_IVAOFF_R1); 
;;;496    	//SEG/VLCD共用脚设为SEG，内部偏置电压调整：1/3bias=0.652VDD 1/4bias=0.714VDD
;;;497    	WriteCmdVK2C22(VK2C22_IVASET|SEGSEL_IVA02H);	 
000418  2072              MOVS     r0,#0x72
00041a  f7fffffe          BL       WriteCmdVK2C22
;;;498    }
00041e  bd10              POP      {r4,pc}
                  |L1.1056|
                          DCD      0x4000487c
                  |L1.1060|
                          DCD      0x40004040
                  |L1.1064|
                          DCD      VK2C22_dispram
                  |L1.1068|
                          DCD      VK2C22_maxcom
                          ENDP

                  VK2C22_Init PROC
;;;505    *******************************************************************************/
;;;506    void VK2C22_Init(void)
000430  b510              PUSH     {r4,lr}
;;;507    {	
;;;508    	//管脚配置根据客户单片机做相应的修改
;;;509    	VK2C22_Lowlevel_Init();
000432  f7fffffe          BL       VK2C22_Lowlevel_Init
;;;510    	//初始化时序
;;;511    	VK2C22_InitSequence();
000436  f7fffffe          BL       VK2C22_InitSequence
;;;512    }
00043a  bd10              POP      {r4,pc}
;;;513    
                          ENDP

                  VK2C22_Main PROC
;;;520    *******************************************************************************/
;;;521    void VK2C22_Main(void)
00043c  f7fffffe          BL       VK2C22_Init
;;;522    {	
;;;523    	VK2C22_Init();
;;;524    	VK2C22_DisAll(0x00);
000440  2000              MOVS     r0,#0
000442  f7fffffe          BL       VK2C22_DisAll
;;;525    	while(1)
000446  e0bc              B        |L1.1474|
                  |L1.1096|
;;;526    	{
;;;527    		VK2C22_DisAll(0xff);			//LCD全显
000448  20ff              MOVS     r0,#0xff
00044a  f7fffffe          BL       VK2C22_DisAll
;;;528    		delay_nms(3000);					//延时1S
00044e  f64030b8          MOV      r0,#0xbb8
000452  f7fffffe          BL       delay_nms
;;;529    	
;;;530    		VK2C22_DisAll(0x00);			//LCD全关
000456  2000              MOVS     r0,#0
000458  f7fffffe          BL       VK2C22_DisAll
;;;531    		delay_nms(3000);					//延时1S
00045c  f64030b8          MOV      r0,#0xbb8
000460  f7fffffe          BL       delay_nms
;;;532    		
;;;533    		//LCD半显
;;;534    		VK2C22_DisAll(0xAA);			
000464  20aa              MOVS     r0,#0xaa
000466  f7fffffe          BL       VK2C22_DisAll
;;;535    		ReadnDataVK2C22(0,VK2C22_readbuf,22);	//读回RAM数据
00046a  2216              MOVS     r2,#0x16
00046c  4955              LDR      r1,|L1.1476|
00046e  2000              MOVS     r0,#0
000470  f7fffffe          BL       ReadnDataVK2C22
;;;536    		delay_nms(1500);					//延时
000474  f24050dc          MOV      r0,#0x5dc
000478  f7fffffe          BL       delay_nms
;;;537    		VK2C22_DisAll(0x55);			
00047c  2055              MOVS     r0,#0x55
00047e  f7fffffe          BL       VK2C22_DisAll
;;;538    		ReadnDataVK2C22(0,VK2C22_readbuf,22);	//读回RAM数据
000482  2216              MOVS     r2,#0x16
000484  494f              LDR      r1,|L1.1476|
000486  2000              MOVS     r0,#0
000488  f7fffffe          BL       ReadnDataVK2C22
;;;539    		delay_nms(1500);					//延时
00048c  f24050dc          MOV      r0,#0x5dc
000490  f7fffffe          BL       delay_nms
;;;540    		
;;;541    		//掉电
;;;542    		VK2C22_DisAll(0x00);			//LCD全关		
000494  2000              MOVS     r0,#0
000496  f7fffffe          BL       VK2C22_DisAll
;;;543    		VK2C22_Enter_PowerOff();	//进入掉电模式
00049a  f7fffffe          BL       VK2C22_Enter_PowerOff
;;;544    		delay_nms(5000);					//延时5S		
00049e  f2413088          MOV      r0,#0x1388
0004a2  f7fffffe          BL       delay_nms
;;;545    		VK2C22_Exit_PowerOff();	//退出掉电模式
0004a6  f7fffffe          BL       VK2C22_Exit_PowerOff
;;;546    		
;;;547    		VK2C22_DisAll(0x00);			//LCD全关
0004aa  2000              MOVS     r0,#0
0004ac  f7fffffe          BL       VK2C22_DisAll
;;;548    		delay_nms(500);					  //延时
0004b0  f44f70fa          MOV      r0,#0x1f4
0004b4  f7fffffe          BL       delay_nms
;;;549    		for(VK2C22_segi=0;VK2C22_segi<VK2C22_SEGNUM;VK2C22_segi++)//seg
0004b8  2000              MOVS     r0,#0
0004ba  4943              LDR      r1,|L1.1480|
0004bc  7008              STRB     r0,[r1,#0]
0004be  e034              B        |L1.1322|
                  |L1.1216|
;;;550    		{
;;;551    			for(VK2C22_comi=0;VK2C22_comi<VK2C22_maxcom;VK2C22_comi++)//com
0004c0  2000              MOVS     r0,#0
0004c2  4942              LDR      r1,|L1.1484|
0004c4  7008              STRB     r0,[r1,#0]
0004c6  e025              B        |L1.1300|
                  |L1.1224|
;;;552    			{
;;;553    				if(VK2C22_maxcom==8)
0004c8  4841              LDR      r0,|L1.1488|
0004ca  7800              LDRB     r0,[r0,#0]  ; VK2C22_maxcom
0004cc  2808              CMP      r0,#8
0004ce  d108              BNE      |L1.1250|
;;;554    					VK2C22_DisDotOn(VK2C22_segtab[VK2C22_segi],VK2C22_comi);	//LCD单点点亮
0004d0  4940              LDR      r1,|L1.1492|
0004d2  4a3d              LDR      r2,|L1.1480|
0004d4  7812              LDRB     r2,[r2,#0]  ; VK2C22_segi
0004d6  5c88              LDRB     r0,[r1,r2]
0004d8  493c              LDR      r1,|L1.1484|
0004da  7809              LDRB     r1,[r1,#0]  ; VK2C22_comi
0004dc  f7fffffe          BL       VK2C22_DisDotOn
0004e0  e007              B        |L1.1266|
                  |L1.1250|
;;;555    				else
;;;556    					VK2C22_DisDotOn(VK2C22_segtab[VK2C22_segi],VK2C22_comi);	//LCD单点点亮
0004e2  493c              LDR      r1,|L1.1492|
0004e4  4a38              LDR      r2,|L1.1480|
0004e6  7812              LDRB     r2,[r2,#0]  ; VK2C22_segi
0004e8  5c88              LDRB     r0,[r1,r2]
0004ea  4938              LDR      r1,|L1.1484|
0004ec  7809              LDRB     r1,[r1,#0]  ; VK2C22_comi
0004ee  f7fffffe          BL       VK2C22_DisDotOn
                  |L1.1266|
;;;557    				delay_nms(300);				//延时300mS
0004f2  f44f7096          MOV      r0,#0x12c
0004f6  f7fffffe          BL       delay_nms
;;;558    				VK2C22_DisDotOff(VK2C22_segtab[VK2C22_segi],VK2C22_comi);	  //此行配合单点点亮函数实现单点点亮，屏蔽此行顺序点亮
0004fa  4936              LDR      r1,|L1.1492|
0004fc  4a32              LDR      r2,|L1.1480|
0004fe  7812              LDRB     r2,[r2,#0]  ; VK2C22_segi
000500  5c88              LDRB     r0,[r1,r2]
000502  4932              LDR      r1,|L1.1484|
000504  7809              LDRB     r1,[r1,#0]  ; VK2C22_comi
000506  f7fffffe          BL       VK2C22_DisDotOff
00050a  4830              LDR      r0,|L1.1484|
00050c  7800              LDRB     r0,[r0,#0]            ;551  ; VK2C22_comi
00050e  1c40              ADDS     r0,r0,#1              ;551
000510  492e              LDR      r1,|L1.1484|
000512  7008              STRB     r0,[r1,#0]            ;551
                  |L1.1300|
000514  482d              LDR      r0,|L1.1484|
000516  7800              LDRB     r0,[r0,#0]            ;551  ; VK2C22_comi
000518  492d              LDR      r1,|L1.1488|
00051a  7809              LDRB     r1,[r1,#0]            ;551  ; VK2C22_maxcom
00051c  4288              CMP      r0,r1                 ;551
00051e  dbd3              BLT      |L1.1224|
000520  4829              LDR      r0,|L1.1480|
000522  7800              LDRB     r0,[r0,#0]            ;549  ; VK2C22_segi
000524  1c40              ADDS     r0,r0,#1              ;549
000526  4928              LDR      r1,|L1.1480|
000528  7008              STRB     r0,[r1,#0]            ;549
                  |L1.1322|
00052a  4827              LDR      r0,|L1.1480|
00052c  7800              LDRB     r0,[r0,#0]            ;549  ; VK2C22_segi
00052e  2828              CMP      r0,#0x28              ;549
000530  dbc6              BLT      |L1.1216|
;;;559    			}
;;;560    		}
;;;561    		
;;;562    		VK2C22_DisAll(0xff);			//LCD全显
000532  20ff              MOVS     r0,#0xff
000534  f7fffffe          BL       VK2C22_DisAll
;;;563    		delay_nms(500);					  //延时
000538  f44f70fa          MOV      r0,#0x1f4
00053c  f7fffffe          BL       delay_nms
;;;564    		for(VK2C22_segi=0;VK2C22_segi<VK2C22_SEGNUM;VK2C22_segi++)//seg
000540  2000              MOVS     r0,#0
000542  4921              LDR      r1,|L1.1480|
000544  7008              STRB     r0,[r1,#0]
000546  e034              B        |L1.1458|
                  |L1.1352|
;;;565    		{
;;;566    			for(VK2C22_comi=0;VK2C22_comi<VK2C22_maxcom;VK2C22_comi++)//com
000548  2000              MOVS     r0,#0
00054a  4920              LDR      r1,|L1.1484|
00054c  7008              STRB     r0,[r1,#0]
00054e  e025              B        |L1.1436|
                  |L1.1360|
;;;567    			{
;;;568    				if(VK2C22_maxcom==8)
000550  481f              LDR      r0,|L1.1488|
000552  7800              LDRB     r0,[r0,#0]  ; VK2C22_maxcom
000554  2808              CMP      r0,#8
000556  d108              BNE      |L1.1386|
;;;569    					VK2C22_DisDotOff(VK2C22_segtab[VK2C22_segi],VK2C22_comi);	//LCD单点关闭
000558  491e              LDR      r1,|L1.1492|
00055a  4a1b              LDR      r2,|L1.1480|
00055c  7812              LDRB     r2,[r2,#0]  ; VK2C22_segi
00055e  5c88              LDRB     r0,[r1,r2]
000560  491a              LDR      r1,|L1.1484|
000562  7809              LDRB     r1,[r1,#0]  ; VK2C22_comi
000564  f7fffffe          BL       VK2C22_DisDotOff
000568  e007              B        |L1.1402|
                  |L1.1386|
;;;570    				else
;;;571    					VK2C22_DisDotOff(VK2C22_segtab[VK2C22_segi],VK2C22_comi);	//LCD单点关闭
00056a  491a              LDR      r1,|L1.1492|
00056c  4a16              LDR      r2,|L1.1480|
00056e  7812              LDRB     r2,[r2,#0]  ; VK2C22_segi
000570  5c88              LDRB     r0,[r1,r2]
000572  4916              LDR      r1,|L1.1484|
000574  7809              LDRB     r1,[r1,#0]  ; VK2C22_comi
000576  f7fffffe          BL       VK2C22_DisDotOff
                  |L1.1402|
;;;572    				delay_nms(300);				//延时300mS
00057a  f44f7096          MOV      r0,#0x12c
00057e  f7fffffe          BL       delay_nms
;;;573    				VK2C22_DisDotOn(VK2C22_segtab[VK2C22_segi],VK2C22_comi);  //此行配合单点关闭函数实现单点关闭，屏蔽此行顺序关闭
000582  4914              LDR      r1,|L1.1492|
000584  4a10              LDR      r2,|L1.1480|
000586  7812              LDRB     r2,[r2,#0]  ; VK2C22_segi
000588  5c88              LDRB     r0,[r1,r2]
00058a  4910              LDR      r1,|L1.1484|
00058c  7809              LDRB     r1,[r1,#0]  ; VK2C22_comi
00058e  f7fffffe          BL       VK2C22_DisDotOn
000592  480e              LDR      r0,|L1.1484|
000594  7800              LDRB     r0,[r0,#0]            ;566  ; VK2C22_comi
000596  1c40              ADDS     r0,r0,#1              ;566
000598  490c              LDR      r1,|L1.1484|
00059a  7008              STRB     r0,[r1,#0]            ;566
                  |L1.1436|
00059c  480b              LDR      r0,|L1.1484|
00059e  7800              LDRB     r0,[r0,#0]            ;566  ; VK2C22_comi
0005a0  490b              LDR      r1,|L1.1488|
0005a2  7809              LDRB     r1,[r1,#0]            ;566  ; VK2C22_maxcom
0005a4  4288              CMP      r0,r1                 ;566
0005a6  dbd3              BLT      |L1.1360|
0005a8  4807              LDR      r0,|L1.1480|
0005aa  7800              LDRB     r0,[r0,#0]            ;564  ; VK2C22_segi
0005ac  1c40              ADDS     r0,r0,#1              ;564
0005ae  4906              LDR      r1,|L1.1480|
0005b0  7008              STRB     r0,[r1,#0]            ;564
                  |L1.1458|
0005b2  4805              LDR      r0,|L1.1480|
0005b4  7800              LDRB     r0,[r0,#0]            ;564  ; VK2C22_segi
0005b6  2828              CMP      r0,#0x28              ;564
0005b8  dbc6              BLT      |L1.1352|
;;;574    			}
;;;575    		}
;;;576    		delay_nms(1000);					  //延时
0005ba  f44f707a          MOV      r0,#0x3e8
0005be  f7fffffe          BL       delay_nms
                  |L1.1474|
0005c2  e741              B        |L1.1096|
;;;577    	}
;;;578    }
;;;579    /************************END OF FILE****/
                          ENDP

                  |L1.1476|
                          DCD      VK2C22_readbuf
                  |L1.1480|
                          DCD      VK2C22_segi
                  |L1.1484|
                          DCD      VK2C22_comi
                  |L1.1488|
                          DCD      VK2C22_maxcom
                  |L1.1492|
                          DCD      VK2C22_segtab

                          AREA ||.bss||, DATA, NOINIT, ALIGN=0

                  VK2C22_dispram
                          %        20
                  VK2C22_readbuf
                          %        22

                          AREA ||.data||, DATA, ALIGN=0

                  VK2C22_segtab
000000  00010203          DCB      0x00,0x01,0x02,0x03
000004  04050607          DCB      0x04,0x05,0x06,0x07
000008  08090a0b          DCB      0x08,0x09,0x0a,0x0b
00000c  0c0d0e0f          DCB      0x0c,0x0d,0x0e,0x0f
000010  10111213          DCB      0x10,0x11,0x12,0x13
000014  14151617          DCB      0x14,0x15,0x16,0x17
000018  18191a1b          DCB      0x18,0x19,0x1a,0x1b
00001c  1c1d1e1f          DCB      0x1c,0x1d,0x1e,0x1f
000020  20212223          DCB      0x20,0x21,0x22,0x23
000024  24252627          DCB      0x24,0x25,0x26,0x27
                  VK2C22_segi
000028  00                DCB      0x00
                  VK2C22_comi
000029  00                DCB      0x00
                  VK2C22_maxcom
00002a  00                DCB      0x00

;*** Start embedded assembler ***

#line 1 "..\\lcd_driver\\VK2C22_IO_I2C_DIR.c"
	AREA ||.rev16_text||, CODE
	THUMB
	EXPORT |__asm___19_VK2C22_IO_I2C_DIR_c_06e40452____REV16|
#line 114 "..\\..\\..\\Library\\CMSIS\\Include\\core_cmInstr.h"
|__asm___19_VK2C22_IO_I2C_DIR_c_06e40452____REV16| PROC
#line 115

 rev16 r0, r0
 bx lr
	ENDP
	AREA ||.revsh_text||, CODE
	THUMB
	EXPORT |__asm___19_VK2C22_IO_I2C_DIR_c_06e40452____REVSH|
#line 128
|__asm___19_VK2C22_IO_I2C_DIR_c_06e40452____REVSH| PROC
#line 129

 revsh r0, r0
 bx lr
	ENDP

;*** End   embedded assembler ***
