; generated by Component: ARM Compiler 5.05 update 2 (build 169) Tool: ArmCC [4d0f38]
; commandline ArmCC [--list --debug -c --asm --interleave -o.\obj\vk2c21a_io_i2c_quasi.o --asm_dir=.\lst\ --list_dir=.\lst\ --depend=.\obj\vk2c21a_io_i2c_quasi.d --cpu=Cortex-M4.fp --apcs=interwork -O0 --diag_suppress=9931 -I..\..\..\Library\CMSIS\Include -I..\..\..\Library\Device\Nuvoton\M451Series\Include -I..\..\..\Library\StdDriver\inc -I..\Bsp -I..\User -I..\lcd_driver -I..\exti_driver -I..\led_driver -I..\touch -I..\dotmatix_lcd -I..\KH -ID:\工作\A工程资料\LCD\抗干扰系列_VK2C\VK2C例程\VK2C21A_TESTCODE\project\VK2C21A_FUNC\Keil\RTE -IC:\Keil_v5\ARM\PACK\ARM\CMSIS\4.3.0\CMSIS\Include -D__UVISION_VERSION=515 -D_RTE_ --omf_browse=.\obj\vk2c21a_io_i2c_quasi.crf ..\lcd_driver\VK2C21A_IO_I2C_QUASI.c]
                          THUMB

                          AREA ||.text||, CODE, READONLY, ALIGN=2

                  Delay_nuS PROC
;;;85     *******************************************************************************/
;;;86     void Delay_nuS(unsigned int n)	   
000000  e007              B        |L1.18|
                  |L1.2|
;;;87     {
;;;88     	unsigned char i;
;;;89     	while(n--)
;;;90     	{
;;;91     		i=10;
000002  210a              MOVS     r1,#0xa
;;;92     		while(i--)
000004  e000              B        |L1.8|
                  |L1.6|
;;;93     		{//nop指令根据单片机做相应的修改
;;;94     			__nop();
000006  bf00              NOP      
                  |L1.8|
000008  000a              MOVS     r2,r1                 ;92
00000a  f1a10301          SUB      r3,r1,#1              ;92
00000e  b2d9              UXTB     r1,r3                 ;92
000010  d1f9              BNE      |L1.6|
                  |L1.18|
000012  0002              MOVS     r2,r0                 ;89
000014  f1a00001          SUB      r0,r0,#1              ;89
000018  d1f3              BNE      |L1.2|
;;;95     		}
;;;96     	}
;;;97     }
00001a  4770              BX       lr
;;;98     /*******************************************************************************
                          ENDP

                  Delay_nmS PROC
;;;104    *******************************************************************************/
;;;105    void Delay_nmS(unsigned long int n)
00001c  b510              PUSH     {r4,lr}
;;;106    {
00001e  4604              MOV      r4,r0
;;;107    	while(n--)
000020  e003              B        |L1.42|
                  |L1.34|
;;;108    	{
;;;109    		Delay_nuS(1000);
000022  f44f707a          MOV      r0,#0x3e8
000026  f7fffffe          BL       Delay_nuS
                  |L1.42|
00002a  0020              MOVS     r0,r4                 ;107
00002c  f1a40401          SUB      r4,r4,#1              ;107
000030  d1f7              BNE      |L1.34|
;;;110    	}
;;;111    }
000032  bd10              POP      {r4,pc}
;;;112    /*******************************************************************************
                          ENDP

                  VK2C21A_I2CStart PROC
;;;118    *******************************************************************************/
;;;119    void VK2C21A_I2CStart( void )
000034  b500              PUSH     {lr}
;;;120    {
;;;121      VK2C21A_SCL_H();
000036  2001              MOVS     r0,#1
000038  49f8              LDR      r1,|L1.1052|
00003a  6008              STR      r0,[r1,#0]
;;;122      VK2C21A_SDA_H();
00003c  1f09              SUBS     r1,r1,#4
00003e  6008              STR      r0,[r1,#0]
;;;123      Delay_nuS(VK2C21A_CLK);
000040  2064              MOVS     r0,#0x64
000042  f7fffffe          BL       Delay_nuS
;;;124      VK2C21A_SDA_L();
000046  2000              MOVS     r0,#0
000048  49f4              LDR      r1,|L1.1052|
00004a  1f09              SUBS     r1,r1,#4
00004c  6008              STR      r0,[r1,#0]
;;;125      Delay_nuS(VK2C21A_CLK);
00004e  2064              MOVS     r0,#0x64
000050  f7fffffe          BL       Delay_nuS
;;;126    }
000054  bd00              POP      {pc}
;;;127    /*******************************************************************************
                          ENDP

                  VK2C21A_I2CStop PROC
;;;133    *******************************************************************************/
;;;134    void VK2C21A_I2CStop( void )
000056  b500              PUSH     {lr}
;;;135    {
;;;136      VK2C21A_SCL_H();
000058  2001              MOVS     r0,#1
00005a  49f0              LDR      r1,|L1.1052|
00005c  6008              STR      r0,[r1,#0]
;;;137      VK2C21A_SDA_L();
00005e  2000              MOVS     r0,#0
000060  1f09              SUBS     r1,r1,#4
000062  6008              STR      r0,[r1,#0]
;;;138      Delay_nuS(VK2C21A_CLK);
000064  2064              MOVS     r0,#0x64
000066  f7fffffe          BL       Delay_nuS
;;;139      VK2C21A_SDA_H();
00006a  2001              MOVS     r0,#1
00006c  49eb              LDR      r1,|L1.1052|
00006e  1f09              SUBS     r1,r1,#4
000070  6008              STR      r0,[r1,#0]
;;;140      Delay_nuS(VK2C21A_CLK);
000072  2064              MOVS     r0,#0x64
000074  f7fffffe          BL       Delay_nuS
;;;141    }
000078  bd00              POP      {pc}
;;;142    /*******************************************************************************
                          ENDP

                  VK2C21A_I2CSlaveAck PROC
;;;148    *******************************************************************************/
;;;149    unsigned char VK2C21A_I2CSlaveAck( void )
00007a  b530              PUSH     {r4,r5,lr}
;;;150    {
;;;151      unsigned int TimeOut;
;;;152      unsigned char RetValue;
;;;153    	
;;;154      VK2C21A_SCL_L();
00007c  2000              MOVS     r0,#0
00007e  49e7              LDR      r1,|L1.1052|
000080  6008              STR      r0,[r1,#0]
;;;155      Delay_nuS(VK2C21A_CLK);
000082  2064              MOVS     r0,#0x64
000084  f7fffffe          BL       Delay_nuS
;;;156      VK2C21A_SCL_H();//第9个sclk上升沿
000088  2001              MOVS     r0,#1
00008a  49e4              LDR      r1,|L1.1052|
00008c  6008              STR      r0,[r1,#0]
;;;157      TimeOut = 10000;
00008e  f2427510          MOV      r5,#0x2710
;;;158      while( TimeOut-- > 0 )
000092  e007              B        |L1.164|
                  |L1.148|
;;;159      {
;;;160        if( VK2C21A_GET_SDA()!=0 )//读取ack
000094  48e1              LDR      r0,|L1.1052|
000096  1f00              SUBS     r0,r0,#4
000098  6800              LDR      r0,[r0,#0]
00009a  b108              CBZ      r0,|L1.160|
;;;161        {
;;;162          RetValue = 1;
00009c  2401              MOVS     r4,#1
00009e  e001              B        |L1.164|
                  |L1.160|
;;;163        }
;;;164        else
;;;165        {
;;;166          RetValue = 0;
0000a0  2400              MOVS     r4,#0
;;;167          break;
0000a2  e003              B        |L1.172|
                  |L1.164|
0000a4  0028              MOVS     r0,r5                 ;158
0000a6  f1a50501          SUB      r5,r5,#1              ;158
0000aa  d1f3              BNE      |L1.148|
                  |L1.172|
0000ac  bf00              NOP      
;;;168        }
;;;169      } 
;;;170    	VK2C21A_SCL_L();
0000ae  2000              MOVS     r0,#0
0000b0  49da              LDR      r1,|L1.1052|
0000b2  6008              STR      r0,[r1,#0]
;;;171      
;;;172      return RetValue;
0000b4  4620              MOV      r0,r4
;;;173    }
0000b6  bd30              POP      {r4,r5,pc}
;;;174    /*******************************************************************************
                          ENDP

                  VK2C21A_I2CSendAck PROC
;;;180    *******************************************************************************/
;;;181    void VK2C21A_I2CSendAck( void )
0000b8  b500              PUSH     {lr}
;;;182    {
;;;183      VK2C21A_SCL_L();
0000ba  2000              MOVS     r0,#0
0000bc  49d7              LDR      r1,|L1.1052|
0000be  6008              STR      r0,[r1,#0]
;;;184      VK2C21A_SDA_L();
0000c0  1f09              SUBS     r1,r1,#4
0000c2  6008              STR      r0,[r1,#0]
;;;185      Delay_nuS(VK2C21A_CLK*2);
0000c4  20c8              MOVS     r0,#0xc8
0000c6  f7fffffe          BL       Delay_nuS
;;;186      VK2C21A_SCL_H();
0000ca  2001              MOVS     r0,#1
0000cc  49d3              LDR      r1,|L1.1052|
0000ce  6008              STR      r0,[r1,#0]
;;;187      Delay_nuS(VK2C21A_CLK*2);
0000d0  20c8              MOVS     r0,#0xc8
0000d2  f7fffffe          BL       Delay_nuS
;;;188      VK2C21A_SCL_L();
0000d6  2000              MOVS     r0,#0
0000d8  49d0              LDR      r1,|L1.1052|
0000da  6008              STR      r0,[r1,#0]
;;;189      VK2C21A_SDA_H();
0000dc  2001              MOVS     r0,#1
0000de  1f09              SUBS     r1,r1,#4
0000e0  6008              STR      r0,[r1,#0]
;;;190    }
0000e2  bd00              POP      {pc}
;;;191    /*******************************************************************************
                          ENDP

                  VK2C21A_I2CSendNAck PROC
;;;197    *******************************************************************************/
;;;198    void VK2C21A_I2CSendNAck( void )
0000e4  b500              PUSH     {lr}
;;;199    {
;;;200      VK2C21A_SCL_L();
0000e6  2000              MOVS     r0,#0
0000e8  49cc              LDR      r1,|L1.1052|
0000ea  6008              STR      r0,[r1,#0]
;;;201      VK2C21A_SDA_H();
0000ec  2001              MOVS     r0,#1
0000ee  1f09              SUBS     r1,r1,#4
0000f0  6008              STR      r0,[r1,#0]
;;;202      Delay_nuS(VK2C21A_CLK);
0000f2  2064              MOVS     r0,#0x64
0000f4  f7fffffe          BL       Delay_nuS
;;;203      VK2C21A_SCL_H();
0000f8  2001              MOVS     r0,#1
0000fa  49c8              LDR      r1,|L1.1052|
0000fc  6008              STR      r0,[r1,#0]
;;;204      Delay_nuS(VK2C21A_CLK);
0000fe  2064              MOVS     r0,#0x64
000100  f7fffffe          BL       Delay_nuS
;;;205    }
000104  bd00              POP      {pc}
;;;206    /*******************************************************************************
                          ENDP

                  VK2C21A_I2CWriteByte PROC
;;;212    *******************************************************************************/
;;;213    void VK2C21A_I2CWriteByte( unsigned char byte )
000106  b530              PUSH     {r4,r5,lr}
;;;214    {
000108  4604              MOV      r4,r0
;;;215    	unsigned char i=8;
00010a  2508              MOVS     r5,#8
;;;216    	while (i--)
00010c  e018              B        |L1.320|
                  |L1.270|
;;;217    	{ 
;;;218    		VK2C21A_SCL_L();
00010e  2000              MOVS     r0,#0
000110  49c2              LDR      r1,|L1.1052|
000112  6008              STR      r0,[r1,#0]
;;;219    		if(byte&0x80)
000114  f0040080          AND      r0,r4,#0x80
000118  b118              CBZ      r0,|L1.290|
;;;220    			VK2C21A_SDA_H();
00011a  2001              MOVS     r0,#1
00011c  1f09              SUBS     r1,r1,#4
00011e  6008              STR      r0,[r1,#0]
000120  e003              B        |L1.298|
                  |L1.290|
;;;221    		else
;;;222    			VK2C21A_SDA_L();
000122  2000              MOVS     r0,#0
000124  49bd              LDR      r1,|L1.1052|
000126  1f09              SUBS     r1,r1,#4
000128  6008              STR      r0,[r1,#0]
                  |L1.298|
;;;223    		byte<<=1; 
00012a  0660              LSLS     r0,r4,#25
00012c  0e04              LSRS     r4,r0,#24
;;;224    		Delay_nuS(VK2C21A_CLK);
00012e  2064              MOVS     r0,#0x64
000130  f7fffffe          BL       Delay_nuS
;;;225    		VK2C21A_SCL_H();     
000134  2001              MOVS     r0,#1
000136  49b9              LDR      r1,|L1.1052|
000138  6008              STR      r0,[r1,#0]
;;;226    		Delay_nuS(VK2C21A_CLK);
00013a  2064              MOVS     r0,#0x64
00013c  f7fffffe          BL       Delay_nuS
                  |L1.320|
000140  0028              MOVS     r0,r5                 ;216
000142  f1a50101          SUB      r1,r5,#1              ;216
000146  b2cd              UXTB     r5,r1                 ;216
000148  d1e1              BNE      |L1.270|
;;;227    	}
;;;228    }
00014a  bd30              POP      {r4,r5,pc}
;;;229    
                          ENDP

                  WriteCmdVK2C21A PROC
;;;237    **************************************************************/
;;;238    unsigned char WriteCmdVK2C21A(unsigned char cmd, unsigned char data )
00014c  b530              PUSH     {r4,r5,lr}
;;;239    {
00014e  4605              MOV      r5,r0
000150  460c              MOV      r4,r1
;;;240    	VK2C21A_I2CStart();
000152  f7fffffe          BL       VK2C21A_I2CStart
;;;241    
;;;242    	VK2C21A_I2CWriteByte( VK2C21A_ADDRWR );
000156  2070              MOVS     r0,#0x70
000158  f7fffffe          BL       VK2C21A_I2CWriteByte
;;;243    	if( 1 == VK2C21A_I2CSlaveAck() )
00015c  f7fffffe          BL       VK2C21A_I2CSlaveAck
000160  2801              CMP      r0,#1
000162  d103              BNE      |L1.364|
;;;244    	{
;;;245    		VK2C21A_I2CStop(); 
000164  f7fffffe          BL       VK2C21A_I2CStop
;;;246    		return 0;   
000168  2000              MOVS     r0,#0
                  |L1.362|
;;;247    	}
;;;248    	VK2C21A_I2CWriteByte( cmd );
;;;249    	if( 1 == VK2C21A_I2CSlaveAck() )
;;;250    	{
;;;251    		VK2C21A_I2CStop(); 
;;;252    		return 0;   
;;;253    	}
;;;254    	VK2C21A_I2CWriteByte( data );
;;;255    	if( 1 == VK2C21A_I2CSlaveAck() )
;;;256    	{
;;;257    		VK2C21A_I2CStop(); 
;;;258    		return 0;   
;;;259    	}
;;;260      VK2C21A_I2CStop();
;;;261     
;;;262      return 0;    //返回操作成败标志
;;;263    }
00016a  bd30              POP      {r4,r5,pc}
                  |L1.364|
00016c  4628              MOV      r0,r5                 ;248
00016e  f7fffffe          BL       VK2C21A_I2CWriteByte
000172  f7fffffe          BL       VK2C21A_I2CSlaveAck
000176  2801              CMP      r0,#1                 ;249
000178  d103              BNE      |L1.386|
00017a  f7fffffe          BL       VK2C21A_I2CStop
00017e  2000              MOVS     r0,#0                 ;252
000180  e7f3              B        |L1.362|
                  |L1.386|
000182  4620              MOV      r0,r4                 ;254
000184  f7fffffe          BL       VK2C21A_I2CWriteByte
000188  f7fffffe          BL       VK2C21A_I2CSlaveAck
00018c  2801              CMP      r0,#1                 ;255
00018e  d103              BNE      |L1.408|
000190  f7fffffe          BL       VK2C21A_I2CStop
000194  2000              MOVS     r0,#0                 ;258
000196  e7e8              B        |L1.362|
                  |L1.408|
000198  f7fffffe          BL       VK2C21A_I2CStop
00019c  2000              MOVS     r0,#0                 ;262
00019e  e7e4              B        |L1.362|
;;;264    /*******************************************************************************
                          ENDP

                  VK2C21A_I2CRDDat PROC
;;;270    *******************************************************************************/
;;;271    unsigned char VK2C21A_I2CRDDat( void )
0001a0  b570              PUSH     {r4-r6,lr}
;;;272    {
;;;273    	unsigned char i,RetValue,bit;
;;;274    	
;;;275    	RetValue=0;	
0001a2  2500              MOVS     r5,#0
;;;276      for( i=0; i<8; i++ )
0001a4  2400              MOVS     r4,#0
0001a6  e018              B        |L1.474|
                  |L1.424|
;;;277      {
;;;278    		VK2C21A_SCL_H(); 
0001a8  2001              MOVS     r0,#1
0001aa  499c              LDR      r1,|L1.1052|
0001ac  6008              STR      r0,[r1,#0]
;;;279        Delay_nuS(VK2C21A_CLK);
0001ae  2064              MOVS     r0,#0x64
0001b0  f7fffffe          BL       Delay_nuS
;;;280        if( 1 == VK2C21A_GET_SDA() )
0001b4  4899              LDR      r0,|L1.1052|
0001b6  1f00              SUBS     r0,r0,#4
0001b8  6800              LDR      r0,[r0,#0]
0001ba  2801              CMP      r0,#1
0001bc  d101              BNE      |L1.450|
;;;281          bit = 0X01;
0001be  2601              MOVS     r6,#1
0001c0  e000              B        |L1.452|
                  |L1.450|
;;;282        else
;;;283          bit = 0x00;
0001c2  2600              MOVS     r6,#0
                  |L1.452|
;;;284          
;;;285        RetValue = (RetValue<<1)|bit;
0001c4  ea460045          ORR      r0,r6,r5,LSL #1
0001c8  b2c5              UXTB     r5,r0
;;;286        VK2C21A_SCL_L();
0001ca  2000              MOVS     r0,#0
0001cc  4993              LDR      r1,|L1.1052|
0001ce  6008              STR      r0,[r1,#0]
;;;287        Delay_nuS(VK2C21A_CLK);
0001d0  2064              MOVS     r0,#0x64
0001d2  f7fffffe          BL       Delay_nuS
0001d6  1c60              ADDS     r0,r4,#1              ;276
0001d8  b2c4              UXTB     r4,r0                 ;276
                  |L1.474|
0001da  2c08              CMP      r4,#8                 ;276
0001dc  dbe4              BLT      |L1.424|
;;;288    	}
;;;289      
;;;290      return RetValue;
0001de  4628              MOV      r0,r5
;;;291    }
0001e0  bd70              POP      {r4-r6,pc}
;;;292    /*******************************************************************************
                          ENDP

                  WritenDataVK2C21A PROC
;;;300    *******************************************************************************/
;;;301    unsigned char  WritenDataVK2C21A(unsigned char Addr,unsigned char *Databuf,unsigned char Cnt)
0001e2  b5f0              PUSH     {r4-r7,lr}
;;;302    {
0001e4  4607              MOV      r7,r0
0001e6  460c              MOV      r4,r1
0001e8  4616              MOV      r6,r2
;;;303    	unsigned char n;
;;;304    	
;;;305    	//START信号	
;;;306    	VK2C21A_I2CStart(); 									
0001ea  f7fffffe          BL       VK2C21A_I2CStart
;;;307    	//SLAVE地址
;;;308    	VK2C21A_I2CWriteByte(VK2C21A_ADDRWR); 	
0001ee  2070              MOVS     r0,#0x70
0001f0  f7fffffe          BL       VK2C21A_I2CWriteByte
;;;309    	if( 1 == VK2C21A_I2CSlaveAck() )
0001f4  f7fffffe          BL       VK2C21A_I2CSlaveAck
0001f8  2801              CMP      r0,#1
0001fa  d103              BNE      |L1.516|
;;;310    	{
;;;311    		VK2C21A_I2CStop();													
0001fc  f7fffffe          BL       VK2C21A_I2CStop
;;;312    		return 0;										
000200  2000              MOVS     r0,#0
                  |L1.514|
;;;313    	}
;;;314    	//写显示RAM命令
;;;315    	VK2C21A_I2CWriteByte(VK2C21A_RWRAM); 						
;;;316    	if( 1 == VK2C21A_I2CSlaveAck() )
;;;317    	{
;;;318    		VK2C21A_I2CStop();													
;;;319    		return 0;
;;;320    	}
;;;321    	//显示RAM起始地址
;;;322    	VK2C21A_I2CWriteByte(Addr); 						
;;;323    	if( 1 == VK2C21A_I2CSlaveAck() )
;;;324    	{
;;;325    		VK2C21A_I2CStop();													
;;;326    		return 0;
;;;327    	}
;;;328    	//发送Cnt个数据到显示RAM
;;;329    	for(n=0;n<Cnt;n++)
;;;330    	{ 
;;;331    		VK2C21A_I2CWriteByte(*Databuf++);
;;;332    		if( VK2C21A_I2CSlaveAck()==1 )
;;;333    		{
;;;334    			VK2C21A_I2CStop();													
;;;335    			return 0;
;;;336    		}
;;;337    	}
;;;338    	//STOP信号
;;;339    	 VK2C21A_I2CStop();											
;;;340    	 return 0;    
;;;341    }
000202  bdf0              POP      {r4-r7,pc}
                  |L1.516|
000204  2080              MOVS     r0,#0x80              ;315
000206  f7fffffe          BL       VK2C21A_I2CWriteByte
00020a  f7fffffe          BL       VK2C21A_I2CSlaveAck
00020e  2801              CMP      r0,#1                 ;316
000210  d103              BNE      |L1.538|
000212  f7fffffe          BL       VK2C21A_I2CStop
000216  2000              MOVS     r0,#0                 ;319
000218  e7f3              B        |L1.514|
                  |L1.538|
00021a  4638              MOV      r0,r7                 ;322
00021c  f7fffffe          BL       VK2C21A_I2CWriteByte
000220  f7fffffe          BL       VK2C21A_I2CSlaveAck
000224  2801              CMP      r0,#1                 ;323
000226  d103              BNE      |L1.560|
000228  f7fffffe          BL       VK2C21A_I2CStop
00022c  2000              MOVS     r0,#0                 ;326
00022e  e7e8              B        |L1.514|
                  |L1.560|
000230  2500              MOVS     r5,#0                 ;329
000232  e00d              B        |L1.592|
                  |L1.564|
000234  f8140b01          LDRB     r0,[r4],#1            ;331
000238  f7fffffe          BL       VK2C21A_I2CWriteByte
00023c  f7fffffe          BL       VK2C21A_I2CSlaveAck
000240  2801              CMP      r0,#1                 ;332
000242  d103              BNE      |L1.588|
000244  f7fffffe          BL       VK2C21A_I2CStop
000248  2000              MOVS     r0,#0                 ;335
00024a  e7da              B        |L1.514|
                  |L1.588|
00024c  1c68              ADDS     r0,r5,#1              ;329
00024e  b2c5              UXTB     r5,r0                 ;329
                  |L1.592|
000250  42b5              CMP      r5,r6                 ;329
000252  dbef              BLT      |L1.564|
000254  f7fffffe          BL       VK2C21A_I2CStop
000258  2000              MOVS     r0,#0                 ;340
00025a  e7d2              B        |L1.514|
;;;342    /*******************************************************************************
                          ENDP

                  ReadnDataVK2C21A PROC
;;;350    *******************************************************************************/
;;;351    unsigned char  ReadnDataVK2C21A(unsigned char Addr,unsigned char *Databuf,unsigned char Cnt)
00025c  b5f0              PUSH     {r4-r7,lr}
;;;352    {
00025e  4607              MOV      r7,r0
000260  460c              MOV      r4,r1
000262  4616              MOV      r6,r2
;;;353    	unsigned char n;
;;;354    	
;;;355    	//START信号	
;;;356    	VK2C21A_I2CStart(); 									
000264  f7fffffe          BL       VK2C21A_I2CStart
;;;357    	//SLAVE地址写
;;;358    	VK2C21A_I2CWriteByte(VK2C21A_ADDRWR); 	
000268  2070              MOVS     r0,#0x70
00026a  f7fffffe          BL       VK2C21A_I2CWriteByte
;;;359    	if( 1 == VK2C21A_I2CSlaveAck() )
00026e  f7fffffe          BL       VK2C21A_I2CSlaveAck
000272  2801              CMP      r0,#1
000274  d103              BNE      |L1.638|
;;;360    	{
;;;361    		VK2C21A_I2CStop();													
000276  f7fffffe          BL       VK2C21A_I2CStop
;;;362    		return 0;										
00027a  2000              MOVS     r0,#0
                  |L1.636|
;;;363    	}                        
;;;364    	//写显示RAM命令
;;;365    	VK2C21A_I2CWriteByte(VK2C21A_RWRAM); 						
;;;366    	if( 1 == VK2C21A_I2CSlaveAck() )
;;;367    	{
;;;368    		VK2C21A_I2CStop();													
;;;369    		return 0;
;;;370    	}
;;;371    	//显示RAM起始地址
;;;372    	VK2C21A_I2CWriteByte(Addr); 						
;;;373    	if( 1 == VK2C21A_I2CSlaveAck() )
;;;374    	{
;;;375    		VK2C21A_I2CStop();													
;;;376    		return 0;
;;;377    	}
;;;378    	
;;;379    	//STOP信号
;;;380    	VK2C21A_I2CStop();	
;;;381    	//START信号	
;;;382    	VK2C21A_I2CStart(); 									
;;;383    	//SLAVE地址读
;;;384    	VK2C21A_I2CWriteByte(VK2C21A_ADDRRD); 	
;;;385    		if( 1 == VK2C21A_I2CSlaveAck() )
;;;386    	{
;;;387    		VK2C21A_I2CStop();													
;;;388    		return 0;										
;;;389    	}  
;;;390    	//读Cnt个数据到显示RAM
;;;391    	for(n=0;n<Cnt-1;n++)
;;;392    	{ 
;;;393    		*Databuf++=VK2C21A_I2CRDDat();
;;;394    		VK2C21A_I2CSendAck();
;;;395    	}
;;;396    	*Databuf++=VK2C21A_I2CRDDat();
;;;397    	VK2C21A_I2CSendNAck();
;;;398    	//STOP信号
;;;399    	 VK2C21A_I2CStop();											
;;;400    	 return 0;    
;;;401    }
00027c  bdf0              POP      {r4-r7,pc}
                  |L1.638|
00027e  2080              MOVS     r0,#0x80              ;365
000280  f7fffffe          BL       VK2C21A_I2CWriteByte
000284  f7fffffe          BL       VK2C21A_I2CSlaveAck
000288  2801              CMP      r0,#1                 ;366
00028a  d103              BNE      |L1.660|
00028c  f7fffffe          BL       VK2C21A_I2CStop
000290  2000              MOVS     r0,#0                 ;369
000292  e7f3              B        |L1.636|
                  |L1.660|
000294  4638              MOV      r0,r7                 ;372
000296  f7fffffe          BL       VK2C21A_I2CWriteByte
00029a  f7fffffe          BL       VK2C21A_I2CSlaveAck
00029e  2801              CMP      r0,#1                 ;373
0002a0  d103              BNE      |L1.682|
0002a2  f7fffffe          BL       VK2C21A_I2CStop
0002a6  2000              MOVS     r0,#0                 ;376
0002a8  e7e8              B        |L1.636|
                  |L1.682|
0002aa  f7fffffe          BL       VK2C21A_I2CStop
0002ae  f7fffffe          BL       VK2C21A_I2CStart
0002b2  2071              MOVS     r0,#0x71              ;384
0002b4  f7fffffe          BL       VK2C21A_I2CWriteByte
0002b8  f7fffffe          BL       VK2C21A_I2CSlaveAck
0002bc  2801              CMP      r0,#1                 ;385
0002be  d103              BNE      |L1.712|
0002c0  f7fffffe          BL       VK2C21A_I2CStop
0002c4  2000              MOVS     r0,#0                 ;388
0002c6  e7d9              B        |L1.636|
                  |L1.712|
0002c8  2500              MOVS     r5,#0                 ;391
0002ca  e007              B        |L1.732|
                  |L1.716|
0002cc  f7fffffe          BL       VK2C21A_I2CRDDat
0002d0  f8040b01          STRB     r0,[r4],#1            ;393
0002d4  f7fffffe          BL       VK2C21A_I2CSendAck
0002d8  1c68              ADDS     r0,r5,#1              ;391
0002da  b2c5              UXTB     r5,r0                 ;391
                  |L1.732|
0002dc  1e70              SUBS     r0,r6,#1              ;391
0002de  42a8              CMP      r0,r5                 ;391
0002e0  dcf4              BGT      |L1.716|
0002e2  f7fffffe          BL       VK2C21A_I2CRDDat
0002e6  f8040b01          STRB     r0,[r4],#1            ;396
0002ea  f7fffffe          BL       VK2C21A_I2CSendNAck
0002ee  f7fffffe          BL       VK2C21A_I2CStop
0002f2  2000              MOVS     r0,#0                 ;400
0002f4  e7c2              B        |L1.636|
;;;402    /*******************************************************************************
                          ENDP

                  VK2C21A_DisAll PROC
;;;409    *******************************************************************************/
;;;410    void VK2C21A_DisAll(unsigned char dat)
0002f6  b530              PUSH     {r4,r5,lr}
;;;411    {
0002f8  4605              MOV      r5,r0
;;;412    	unsigned char segi;
;;;413    	
;;;414    	if(VK2C21A_maxcom==4)
0002fa  4849              LDR      r0,|L1.1056|
0002fc  7800              LDRB     r0,[r0,#0]  ; VK2C21A_maxcom
0002fe  2804              CMP      r0,#4
000300  d10d              BNE      |L1.798|
;;;415    	{
;;;416    		for(segi=0;segi<10;segi++)
000302  2400              MOVS     r4,#0
000304  e003              B        |L1.782|
                  |L1.774|
;;;417    		{				
;;;418    			VK2C21A_dispram[segi]=dat;
000306  4847              LDR      r0,|L1.1060|
000308  5505              STRB     r5,[r0,r4]
00030a  1c60              ADDS     r0,r4,#1              ;416
00030c  b2c4              UXTB     r4,r0                 ;416
                  |L1.782|
00030e  2c0a              CMP      r4,#0xa               ;416
000310  dbf9              BLT      |L1.774|
;;;419    		}
;;;420    		WritenDataVK2C21A(0,VK2C21A_dispram,10);//这里送8bit数据对应2个SEG，每8bit数据地址加1，每8位数据1个ACK
000312  220a              MOVS     r2,#0xa
000314  4943              LDR      r1,|L1.1060|
000316  2000              MOVS     r0,#0
000318  f7fffffe          BL       WritenDataVK2C21A
00031c  e00c              B        |L1.824|
                  |L1.798|
;;;421    	}
;;;422    	else
;;;423    	{
;;;424    		for(segi=0;segi<16;segi++)
00031e  2400              MOVS     r4,#0
000320  e003              B        |L1.810|
                  |L1.802|
;;;425    		{
;;;426    			VK2C21A_dispram[segi]=dat;
000322  4840              LDR      r0,|L1.1060|
000324  5505              STRB     r5,[r0,r4]
000326  1c60              ADDS     r0,r4,#1              ;424
000328  b2c4              UXTB     r4,r0                 ;424
                  |L1.810|
00032a  2c10              CMP      r4,#0x10              ;424
00032c  dbf9              BLT      |L1.802|
;;;427    		}
;;;428    		WritenDataVK2C21A(0,VK2C21A_dispram,16);//这里送8bit数据对应1个SEG，每8bit数据地址加1，每8位数据1个ACK
00032e  2210              MOVS     r2,#0x10
000330  493c              LDR      r1,|L1.1060|
000332  2000              MOVS     r0,#0
000334  f7fffffe          BL       WritenDataVK2C21A
                  |L1.824|
;;;429    	}
;;;430    }
000338  bd30              POP      {r4,r5,pc}
;;;431    /*******************************************************************************
                          ENDP

                  VK2C21A_DisDotOn PROC
;;;438    *******************************************************************************/
;;;439    void VK2C21A_DisDotOn(unsigned char seg,unsigned char com)
00033a  b5f8              PUSH     {r3-r7,lr}
;;;440    {
00033c  4604              MOV      r4,r0
00033e  460e              MOV      r6,r1
;;;441    	unsigned char addrbit,tempdat;
;;;442    	
;;;443    	//判断8COM还是4COM
;;;444    	if(VK2C21A_maxcom==4)
000340  4837              LDR      r0,|L1.1056|
000342  7800              LDRB     r0,[r0,#0]  ; VK2C21A_maxcom
000344  2804              CMP      r0,#4
000346  d127              BNE      |L1.920|
;;;445    	{
;;;446    		if(seg%2==0)
000348  4620              MOV      r0,r4
00034a  eb0471d0          ADD      r1,r4,r0,LSR #31
00034e  1049              ASRS     r1,r1,#1
000350  eba40141          SUB      r1,r4,r1,LSL #1
000354  b919              CBNZ     r1,|L1.862|
;;;447    			addrbit=(1<<com);//这里送8位数据低4bit有效，每8bit数据地址加1，每8位数据1个ACK
000356  2001              MOVS     r0,#1
000358  40b0              LSLS     r0,r0,r6
00035a  b2c5              UXTB     r5,r0
00035c  e003              B        |L1.870|
                  |L1.862|
;;;448    		else
;;;449    			addrbit=(1<<(4+com));//这里送8位数据高4bit有效，每8bit数据地址加1，每8位数据1个ACK
00035e  1d30              ADDS     r0,r6,#4
000360  2101              MOVS     r1,#1
000362  4081              LSLS     r1,r1,r0
000364  b2cd              UXTB     r5,r1
                  |L1.870|
;;;450    		tempdat=VK2C21A_dispram[seg/2]|addrbit;
000366  4620              MOV      r0,r4
000368  eb0471d0          ADD      r1,r4,r0,LSR #31
00036c  1049              ASRS     r1,r1,#1
00036e  4a2d              LDR      r2,|L1.1060|
000370  5c51              LDRB     r1,[r2,r1]
000372  4329              ORRS     r1,r1,r5
000374  9100              STR      r1,[sp,#0]
;;;451    	  VK2C21A_dispram[seg/2]=tempdat;
000376  f89d1000          LDRB     r1,[sp,#0]
00037a  eb0472d0          ADD      r2,r4,r0,LSR #31
00037e  1052              ASRS     r2,r2,#1
000380  4b28              LDR      r3,|L1.1060|
000382  5499              STRB     r1,[r3,r2]
;;;452    		WritenDataVK2C21A(seg/2,&tempdat,1);
000384  4627              MOV      r7,r4
000386  eb0471d7          ADD      r1,r4,r7,LSR #31
00038a  f3c10047          UBFX     r0,r1,#1,#8
00038e  2201              MOVS     r2,#1
000390  4669              MOV      r1,sp
000392  f7fffffe          BL       WritenDataVK2C21A
000396  e011              B        |L1.956|
                  |L1.920|
;;;453    	}
;;;454    	else
;;;455    	{
;;;456    		seg=seg-4; //8com seg4为起始地址=0x00
000398  1f20              SUBS     r0,r4,#4
00039a  b2c4              UXTB     r4,r0
;;;457    		addrbit=(1<<com);
00039c  2001              MOVS     r0,#1
00039e  40b0              LSLS     r0,r0,r6
0003a0  b2c5              UXTB     r5,r0
;;;458    		tempdat=VK2C21A_dispram[seg]|addrbit;
0003a2  4820              LDR      r0,|L1.1060|
0003a4  5d00              LDRB     r0,[r0,r4]
0003a6  4328              ORRS     r0,r0,r5
0003a8  9000              STR      r0,[sp,#0]
;;;459    	  VK2C21A_dispram[seg]=tempdat;
0003aa  f89d0000          LDRB     r0,[sp,#0]
0003ae  491d              LDR      r1,|L1.1060|
0003b0  5508              STRB     r0,[r1,r4]
;;;460    		WritenDataVK2C21A(seg,&tempdat,1);//这里送8位数据低4bit有效，每8bit数据地址加1，每8位数据1个ACK
0003b2  2201              MOVS     r2,#1
0003b4  4669              MOV      r1,sp
0003b6  4620              MOV      r0,r4
0003b8  f7fffffe          BL       WritenDataVK2C21A
                  |L1.956|
;;;461    	}
;;;462    }
0003bc  bdf8              POP      {r3-r7,pc}
;;;463    /*******************************************************************************
                          ENDP

                  VK2C21A_DisDotOff PROC
;;;470    *******************************************************************************/
;;;471    void VK2C21A_DisDotOff(unsigned char seg,unsigned char com)
0003be  b5f8              PUSH     {r3-r7,lr}
;;;472    {
0003c0  4604              MOV      r4,r0
0003c2  460e              MOV      r6,r1
;;;473    	unsigned char addrbit,tempdat;
;;;474    	
;;;475    	//判断8COM还是4COM
;;;476    	if(VK2C21A_maxcom==4)
0003c4  4816              LDR      r0,|L1.1056|
0003c6  7800              LDRB     r0,[r0,#0]  ; VK2C21A_maxcom
0003c8  2804              CMP      r0,#4
0003ca  d12d              BNE      |L1.1064|
;;;477    	{
;;;478    		if(seg%2==0)
0003cc  4620              MOV      r0,r4
0003ce  eb0471d0          ADD      r1,r4,r0,LSR #31
0003d2  1049              ASRS     r1,r1,#1
0003d4  eba40141          SUB      r1,r4,r1,LSL #1
0003d8  b919              CBNZ     r1,|L1.994|
;;;479    			addrbit=(1<<com);//这里送8位数据低4bit有效，每8bit数据地址加1，每8位数据1个ACK
0003da  2001              MOVS     r0,#1
0003dc  40b0              LSLS     r0,r0,r6
0003de  b2c5              UXTB     r5,r0
0003e0  e003              B        |L1.1002|
                  |L1.994|
;;;480    		else
;;;481    			addrbit=(1<<(4+com));//这里送8位数据高4bit有效，每8bit数据地址加1，每8位数据1个ACK
0003e2  1d30              ADDS     r0,r6,#4
0003e4  2101              MOVS     r1,#1
0003e6  4081              LSLS     r1,r1,r0
0003e8  b2cd              UXTB     r5,r1
                  |L1.1002|
;;;482    		tempdat=VK2C21A_dispram[seg/2]&~addrbit;
0003ea  4620              MOV      r0,r4
0003ec  eb0471d0          ADD      r1,r4,r0,LSR #31
0003f0  1049              ASRS     r1,r1,#1
0003f2  4a0c              LDR      r2,|L1.1060|
0003f4  5c51              LDRB     r1,[r2,r1]
0003f6  43a9              BICS     r1,r1,r5
0003f8  9100              STR      r1,[sp,#0]
;;;483    	  VK2C21A_dispram[seg/2]=tempdat;
0003fa  f89d1000          LDRB     r1,[sp,#0]
0003fe  eb0472d0          ADD      r2,r4,r0,LSR #31
000402  1052              ASRS     r2,r2,#1
000404  4b07              LDR      r3,|L1.1060|
000406  5499              STRB     r1,[r3,r2]
;;;484    		WritenDataVK2C21A(seg/2,&tempdat,1);
000408  4627              MOV      r7,r4
00040a  eb0471d7          ADD      r1,r4,r7,LSR #31
00040e  f3c10047          UBFX     r0,r1,#1,#8
000412  2201              MOVS     r2,#1
000414  4669              MOV      r1,sp
000416  f7fffffe          BL       WritenDataVK2C21A
00041a  e017              B        |L1.1100|
                  |L1.1052|
                          DCD      0x40004870
                  |L1.1056|
                          DCD      VK2C21A_maxcom
                  |L1.1060|
                          DCD      VK2C21A_dispram
                  |L1.1064|
;;;485    	}
;;;486    	else
;;;487    	{
;;;488    		seg=seg-4;  //8com seg4为起始地址=0x00
000428  1f20              SUBS     r0,r4,#4
00042a  b2c4              UXTB     r4,r0
;;;489    		addrbit=(1<<com);
00042c  2001              MOVS     r0,#1
00042e  40b0              LSLS     r0,r0,r6
000430  b2c5              UXTB     r5,r0
;;;490    		tempdat=VK2C21A_dispram[seg]&~addrbit;
000432  488b              LDR      r0,|L1.1632|
000434  5d00              LDRB     r0,[r0,r4]
000436  43a8              BICS     r0,r0,r5
000438  9000              STR      r0,[sp,#0]
;;;491    	  VK2C21A_dispram[seg]=tempdat;
00043a  f89d0000          LDRB     r0,[sp,#0]
00043e  4988              LDR      r1,|L1.1632|
000440  5508              STRB     r0,[r1,r4]
;;;492    		WritenDataVK2C21A(seg,&tempdat,1);//这里送8位数据低4bit有效，每8bit数据地址加1，每8位数据1个ACK
000442  2201              MOVS     r2,#1
000444  4669              MOV      r1,sp
000446  4620              MOV      r0,r4
000448  f7fffffe          BL       WritenDataVK2C21A
                  |L1.1100|
;;;493    	}
;;;494    }
00044c  bdf8              POP      {r3-r7,pc}
;;;495    /*******************************************************************************
                          ENDP

                  VK2C21A_Enter_PowerOff PROC
;;;501    *******************************************************************************/
;;;502    void VK2C21A_Enter_PowerOff(void)
00044e  b500              PUSH     {lr}
;;;503    {		
;;;504    	WriteCmdVK2C21A(VK2C21A_SYSSET,SYSOFF_LCDOFF);
000450  2100              MOVS     r1,#0
000452  2084              MOVS     r0,#0x84
000454  f7fffffe          BL       WriteCmdVK2C21A
;;;505    }
000458  bd00              POP      {pc}
;;;506    /*******************************************************************************
                          ENDP

                  VK2C21A_Exit_PowerOff PROC
;;;512    *******************************************************************************/
;;;513    void VK2C21A_Exit_PowerOff(void)
00045a  b500              PUSH     {lr}
;;;514    {	
;;;515    	WriteCmdVK2C21A(VK2C21A_SYSSET,SYSON_LCDON);
00045c  2103              MOVS     r1,#3
00045e  2084              MOVS     r0,#0x84
000460  f7fffffe          BL       WriteCmdVK2C21A
;;;516    }
000464  bd00              POP      {pc}
;;;517    
                          ENDP

                  VK2C21A_Lowlevel_Init PROC
;;;524    *******************************************************************************/
;;;525    void VK2C21A_Lowlevel_Init(void)
000466  b510              PUSH     {r4,lr}
;;;526    {
;;;527    	//通信线电平不同，建议加电平转换电路
;;;528    	//此函数根据客户单片机做相应的修改	
;;;529    	GPIO_SetMode(VK2C21A_SCL_PORT, VK2C21A_SCL_PIN, GPIO_MODE_QUASI);
000468  2203              MOVS     r2,#3
00046a  f44f5180          MOV      r1,#0x1000
00046e  487d              LDR      r0,|L1.1636|
000470  f7fffffe          BL       GPIO_SetMode
;;;530    	GPIO_SetMode(VK2C21A_SDA_PORT, VK2C21A_SDA_PIN, GPIO_MODE_QUASI);
000474  2203              MOVS     r2,#3
000476  f44f6100          MOV      r1,#0x800
00047a  487a              LDR      r0,|L1.1636|
00047c  f7fffffe          BL       GPIO_SetMode
;;;531    	
;;;532      //I2C总线空闲为高电平		
;;;533    	VK2C21A_SCL_H();  
000480  2001              MOVS     r0,#1
000482  4979              LDR      r1,|L1.1640|
000484  6008              STR      r0,[r1,#0]
;;;534    	VK2C21A_SDA_H(); 	
000486  1f09              SUBS     r1,r1,#4
000488  6008              STR      r0,[r1,#0]
;;;535    }
00048a  bd10              POP      {r4,pc}
;;;536    /*******************************************************************************
                          ENDP

                  VK2C21A_InitSequence PROC
;;;542    *******************************************************************************/
;;;543    void VK2C21A_InitSequence(void)
00048c  b500              PUSH     {lr}
;;;544    {	
;;;545    	WriteCmdVK2C21A(VK2C21A_MODESET,CCOM_1_3__4); 	//模式设置  1/3 Bais 1/4 Duty
00048e  2100              MOVS     r1,#0
000490  2082              MOVS     r0,#0x82
000492  f7fffffe          BL       WriteCmdVK2C21A
;;;546    //	WriteCmdVK2C21A(VK2C21A_MODESET,CCOM_1_4__4); //模式设置  1/4 Bais 1/4 Duty
;;;547    	VK2C21A_maxcom=4;
000496  2004              MOVS     r0,#4
000498  4974              LDR      r1,|L1.1644|
00049a  7008              STRB     r0,[r1,#0]
;;;548    	VK2C21A_maxseg=20;//VK2C21A 4COM时为20个SEG
00049c  2014              MOVS     r0,#0x14
00049e  4974              LDR      r1,|L1.1648|
0004a0  7008              STRB     r0,[r1,#0]
;;;549    //	WriteCmdVK2C21A(VK2C21A_MODESET,CCOM_1_3__8); //模式设置  1/3 Bais 1/8 Duty
;;;550    //	WriteCmdVK2C21A(VK2C21A_MODESET,CCOM_1_4__8); //模式设置  1/4 Bais 1/8 Duty
;;;551    //	VK2C21A_maxcom=8;
;;;552    //	VK2C21A_maxseg=16;//VK2C21A 8COM时为16个SEG
;;;553    	WriteCmdVK2C21A(VK2C21A_SYSSET,SYSON_LCDON); 		//内部系统振荡器开，lcd开显示
0004a2  2103              MOVS     r1,#3
0004a4  2084              MOVS     r0,#0x84
0004a6  f7fffffe          BL       WriteCmdVK2C21A
;;;554    	WriteCmdVK2C21A(VK2C21A_FRAMESET,FRAME_80HZ); 	//帧频率80Hz
0004aa  2100              MOVS     r1,#0
0004ac  2086              MOVS     r0,#0x86
0004ae  f7fffffe          BL       WriteCmdVK2C21A
;;;555    //	WriteCmdVK2C21A(VK2C21A_FRAMESET,FRAME_160HZ);//帧频率160Hz
;;;556    	WriteCmdVK2C21A(VK2C21A_BLINKSET,BLINK_OFF);  //闪烁关闭
0004b2  2100              MOVS     r1,#0
0004b4  2088              MOVS     r0,#0x88
0004b6  f7fffffe          BL       WriteCmdVK2C21A
;;;557    //	WriteCmdVK2C21A(VK2C21A_BLINKSET,BLINK_2HZ); 		//闪烁2HZ
;;;558    //	WriteCmdVK2C21A(VK2C21A_BLINKSET,BLINK_1HZ); 		//闪烁1HZ
;;;559    //	WriteCmdVK2C21A(VK2C21A_BLINKSET,BLINK_0D5HZ); 	//闪烁0.5HZ
;;;560    	
;;;561    	//SEG/VLCD共用脚设为VLCD，内部电压调整功能关闭,VLCD和VDD短接VR=0偏置电压=VDD
;;;562    //	WriteCmdVK2C21A(VK2C21A_IVASET,VLCDSEL_IVAOFF_R0); 
;;;563    
;;;564    	//SEG/VLCD共用脚设为SEG，内部偏置电压调整：1/3bias=0.652VDD 1/4bias=0.714VDD
;;;565    	WriteCmdVK2C21A(VK2C21A_IVASET,SEGSEL_IVA02H);	
0004ba  2132              MOVS     r1,#0x32
0004bc  208a              MOVS     r0,#0x8a
0004be  f7fffffe          BL       WriteCmdVK2C21A
;;;566    }
0004c2  bd00              POP      {pc}
;;;567    /*******************************************************************************
                          ENDP

                  VK2C21A_Init PROC
;;;573    *******************************************************************************/
;;;574    void VK2C21A_Init(void)
0004c4  b510              PUSH     {r4,lr}
;;;575    {	
;;;576    	//管脚配置根据客户单片机做相应的修改
;;;577    	VK2C21A_Lowlevel_Init();
0004c6  f7fffffe          BL       VK2C21A_Lowlevel_Init
;;;578    	//初始化时序
;;;579    	VK2C21A_InitSequence();
0004ca  f7fffffe          BL       VK2C21A_InitSequence
;;;580    }
0004ce  bd10              POP      {r4,pc}
;;;581    
                          ENDP

                  VK2C21A_Main PROC
;;;588    *******************************************************************************/
;;;589    void VK2C21A_Main(void)
0004d0  f7fffffe          BL       VK2C21A_Init
;;;590    {	
;;;591    	VK2C21A_Init();
;;;592    	//上电后显示数据清0
;;;593    	VK2C21A_DisAll(0x00);	
0004d4  2000              MOVS     r0,#0
0004d6  f7fffffe          BL       VK2C21A_DisAll
;;;594    	while(1)
0004da  e0c0              B        |L1.1630|
                  |L1.1244|
;;;595    	{			
;;;596    		VK2C21A_DisAll(0xff);			//LCD全显
0004dc  20ff              MOVS     r0,#0xff
0004de  f7fffffe          BL       VK2C21A_DisAll
;;;597    		Delay_nmS(3000);					//延时1S
0004e2  f64030b8          MOV      r0,#0xbb8
0004e6  f7fffffe          BL       Delay_nmS
;;;598    	
;;;599    		VK2C21A_DisAll(0x00);			//LCD全关
0004ea  2000              MOVS     r0,#0
0004ec  f7fffffe          BL       VK2C21A_DisAll
;;;600    		Delay_nmS(3000);					//延时1S
0004f0  f64030b8          MOV      r0,#0xbb8
0004f4  f7fffffe          BL       Delay_nmS
;;;601    		
;;;602    		//LCD半显
;;;603    		VK2C21A_DisAll(0xAA);			
0004f8  20aa              MOVS     r0,#0xaa
0004fa  f7fffffe          BL       VK2C21A_DisAll
;;;604    		ReadnDataVK2C21A(0,VK2C21A_readbuf,16);	//读回RAM数据
0004fe  2210              MOVS     r2,#0x10
000500  495c              LDR      r1,|L1.1652|
000502  2000              MOVS     r0,#0
000504  f7fffffe          BL       ReadnDataVK2C21A
;;;605    		Delay_nmS(1500);					//延时
000508  f24050dc          MOV      r0,#0x5dc
00050c  f7fffffe          BL       Delay_nmS
;;;606    		VK2C21A_DisAll(0x55);			
000510  2055              MOVS     r0,#0x55
000512  f7fffffe          BL       VK2C21A_DisAll
;;;607    		ReadnDataVK2C21A(0,VK2C21A_readbuf,16);	//读回RAM数据
000516  2210              MOVS     r2,#0x10
000518  4956              LDR      r1,|L1.1652|
00051a  2000              MOVS     r0,#0
00051c  f7fffffe          BL       ReadnDataVK2C21A
;;;608    		Delay_nmS(1500);					//延时
000520  f24050dc          MOV      r0,#0x5dc
000524  f7fffffe          BL       Delay_nmS
;;;609    
;;;610    		//掉电
;;;611    		VK2C21A_DisAll(0x00);			//LCD全关		
000528  2000              MOVS     r0,#0
00052a  f7fffffe          BL       VK2C21A_DisAll
;;;612    		VK2C21A_Enter_PowerOff();	//进入掉电模式
00052e  f7fffffe          BL       VK2C21A_Enter_PowerOff
;;;613    		Delay_nmS(5000);					//延时5S		
000532  f2413088          MOV      r0,#0x1388
000536  f7fffffe          BL       Delay_nmS
;;;614    		VK2C21A_Exit_PowerOff();	//退出掉电模式
00053a  f7fffffe          BL       VK2C21A_Exit_PowerOff
;;;615    		
;;;616    		VK2C21A_DisAll(0x00);			//LCD全关
00053e  2000              MOVS     r0,#0
000540  f7fffffe          BL       VK2C21A_DisAll
;;;617    		Delay_nmS(500);					  //延时
000544  f44f70fa          MOV      r0,#0x1f4
000548  f7fffffe          BL       Delay_nmS
;;;618    		for(VK2C21A_segi=0;VK2C21A_segi<VK2C21A_maxseg;VK2C21A_segi++)//seg
00054c  2000              MOVS     r0,#0
00054e  494a              LDR      r1,|L1.1656|
000550  7008              STRB     r0,[r1,#0]
000552  e034              B        |L1.1470|
                  |L1.1364|
;;;619    		{
;;;620    			for(VK2C21A_comi=0;VK2C21A_comi<VK2C21A_maxcom;VK2C21A_comi++)//com
000554  2000              MOVS     r0,#0
000556  4949              LDR      r1,|L1.1660|
000558  7008              STRB     r0,[r1,#0]
00055a  e025              B        |L1.1448|
                  |L1.1372|
;;;621    			{
;;;622    				if(VK2C21A_maxcom==8)
00055c  4843              LDR      r0,|L1.1644|
00055e  7800              LDRB     r0,[r0,#0]  ; VK2C21A_maxcom
000560  2808              CMP      r0,#8
000562  d108              BNE      |L1.1398|
;;;623    					VK2C21A_DisDotOn(VK2C21A_segtab[VK2C21A_segi],VK2C21A_comi);	//LCD单点点亮
000564  4946              LDR      r1,|L1.1664|
000566  4a44              LDR      r2,|L1.1656|
000568  7812              LDRB     r2,[r2,#0]  ; VK2C21A_segi
00056a  5c88              LDRB     r0,[r1,r2]
00056c  4943              LDR      r1,|L1.1660|
00056e  7809              LDRB     r1,[r1,#0]  ; VK2C21A_comi
000570  f7fffffe          BL       VK2C21A_DisDotOn
000574  e007              B        |L1.1414|
                  |L1.1398|
;;;624    				else
;;;625    					VK2C21A_DisDotOn(VK2C21A_segtab[VK2C21A_segi],VK2C21A_comi);	//LCD单点点亮
000576  4942              LDR      r1,|L1.1664|
000578  4a3f              LDR      r2,|L1.1656|
00057a  7812              LDRB     r2,[r2,#0]  ; VK2C21A_segi
00057c  5c88              LDRB     r0,[r1,r2]
00057e  493f              LDR      r1,|L1.1660|
000580  7809              LDRB     r1,[r1,#0]  ; VK2C21A_comi
000582  f7fffffe          BL       VK2C21A_DisDotOn
                  |L1.1414|
;;;626    				Delay_nmS(300);				//延时300mS
000586  f44f7096          MOV      r0,#0x12c
00058a  f7fffffe          BL       Delay_nmS
;;;627    				VK2C21A_DisDotOff(VK2C21A_segtab[VK2C21A_segi],VK2C21A_comi);	  //此行配合单点点亮函数实现单点点亮，屏蔽此行顺序点亮
00058e  493c              LDR      r1,|L1.1664|
000590  4a39              LDR      r2,|L1.1656|
000592  7812              LDRB     r2,[r2,#0]  ; VK2C21A_segi
000594  5c88              LDRB     r0,[r1,r2]
000596  4939              LDR      r1,|L1.1660|
000598  7809              LDRB     r1,[r1,#0]  ; VK2C21A_comi
00059a  f7fffffe          BL       VK2C21A_DisDotOff
00059e  4837              LDR      r0,|L1.1660|
0005a0  7800              LDRB     r0,[r0,#0]            ;620  ; VK2C21A_comi
0005a2  1c40              ADDS     r0,r0,#1              ;620
0005a4  4935              LDR      r1,|L1.1660|
0005a6  7008              STRB     r0,[r1,#0]            ;620
                  |L1.1448|
0005a8  4834              LDR      r0,|L1.1660|
0005aa  7800              LDRB     r0,[r0,#0]            ;620  ; VK2C21A_comi
0005ac  492f              LDR      r1,|L1.1644|
0005ae  7809              LDRB     r1,[r1,#0]            ;620  ; VK2C21A_maxcom
0005b0  4288              CMP      r0,r1                 ;620
0005b2  dbd3              BLT      |L1.1372|
0005b4  4830              LDR      r0,|L1.1656|
0005b6  7800              LDRB     r0,[r0,#0]            ;618  ; VK2C21A_segi
0005b8  1c40              ADDS     r0,r0,#1              ;618
0005ba  492f              LDR      r1,|L1.1656|
0005bc  7008              STRB     r0,[r1,#0]            ;618
                  |L1.1470|
0005be  482e              LDR      r0,|L1.1656|
0005c0  7800              LDRB     r0,[r0,#0]            ;618  ; VK2C21A_segi
0005c2  492b              LDR      r1,|L1.1648|
0005c4  7809              LDRB     r1,[r1,#0]            ;618  ; VK2C21A_maxseg
0005c6  4288              CMP      r0,r1                 ;618
0005c8  dbc4              BLT      |L1.1364|
;;;628    			}
;;;629    		}
;;;630    		
;;;631    		VK2C21A_DisAll(0xff);			//LCD全显
0005ca  20ff              MOVS     r0,#0xff
0005cc  f7fffffe          BL       VK2C21A_DisAll
;;;632    		Delay_nmS(500);					  //延时
0005d0  f44f70fa          MOV      r0,#0x1f4
0005d4  f7fffffe          BL       Delay_nmS
;;;633    		for(VK2C21A_segi=0;VK2C21A_segi<VK2C21A_maxseg;VK2C21A_segi++)//seg
0005d8  2000              MOVS     r0,#0
0005da  4927              LDR      r1,|L1.1656|
0005dc  7008              STRB     r0,[r1,#0]
0005de  e034              B        |L1.1610|
                  |L1.1504|
;;;634    		{
;;;635    			for(VK2C21A_comi=0;VK2C21A_comi<VK2C21A_maxcom;VK2C21A_comi++)//com
0005e0  2000              MOVS     r0,#0
0005e2  4926              LDR      r1,|L1.1660|
0005e4  7008              STRB     r0,[r1,#0]
0005e6  e025              B        |L1.1588|
                  |L1.1512|
;;;636    			{
;;;637    				if(VK2C21A_maxcom==8)
0005e8  4820              LDR      r0,|L1.1644|
0005ea  7800              LDRB     r0,[r0,#0]  ; VK2C21A_maxcom
0005ec  2808              CMP      r0,#8
0005ee  d108              BNE      |L1.1538|
;;;638    					VK2C21A_DisDotOff(VK2C21A_segtab[VK2C21A_segi],VK2C21A_comi);	//LCD单点关闭
0005f0  4923              LDR      r1,|L1.1664|
0005f2  4a21              LDR      r2,|L1.1656|
0005f4  7812              LDRB     r2,[r2,#0]  ; VK2C21A_segi
0005f6  5c88              LDRB     r0,[r1,r2]
0005f8  4920              LDR      r1,|L1.1660|
0005fa  7809              LDRB     r1,[r1,#0]  ; VK2C21A_comi
0005fc  f7fffffe          BL       VK2C21A_DisDotOff
000600  e007              B        |L1.1554|
                  |L1.1538|
;;;639    				else
;;;640    					VK2C21A_DisDotOff(VK2C21A_segtab[VK2C21A_segi],VK2C21A_comi);	//LCD单点关闭
000602  491f              LDR      r1,|L1.1664|
000604  4a1c              LDR      r2,|L1.1656|
000606  7812              LDRB     r2,[r2,#0]  ; VK2C21A_segi
000608  5c88              LDRB     r0,[r1,r2]
00060a  491c              LDR      r1,|L1.1660|
00060c  7809              LDRB     r1,[r1,#0]  ; VK2C21A_comi
00060e  f7fffffe          BL       VK2C21A_DisDotOff
                  |L1.1554|
;;;641    				Delay_nmS(300);				//延时300mS
000612  f44f7096          MOV      r0,#0x12c
000616  f7fffffe          BL       Delay_nmS
;;;642    				VK2C21A_DisDotOn(VK2C21A_segtab[VK2C21A_segi],VK2C21A_comi);  //此行配合单点关闭函数实现单点关闭，屏蔽此行顺序关闭
00061a  4919              LDR      r1,|L1.1664|
00061c  4a16              LDR      r2,|L1.1656|
00061e  7812              LDRB     r2,[r2,#0]  ; VK2C21A_segi
000620  5c88              LDRB     r0,[r1,r2]
000622  4916              LDR      r1,|L1.1660|
000624  7809              LDRB     r1,[r1,#0]  ; VK2C21A_comi
000626  f7fffffe          BL       VK2C21A_DisDotOn
00062a  4814              LDR      r0,|L1.1660|
00062c  7800              LDRB     r0,[r0,#0]            ;635  ; VK2C21A_comi
00062e  1c40              ADDS     r0,r0,#1              ;635
000630  4912              LDR      r1,|L1.1660|
000632  7008              STRB     r0,[r1,#0]            ;635
                  |L1.1588|
000634  4811              LDR      r0,|L1.1660|
000636  7800              LDRB     r0,[r0,#0]            ;635  ; VK2C21A_comi
000638  490c              LDR      r1,|L1.1644|
00063a  7809              LDRB     r1,[r1,#0]            ;635  ; VK2C21A_maxcom
00063c  4288              CMP      r0,r1                 ;635
00063e  dbd3              BLT      |L1.1512|
000640  480d              LDR      r0,|L1.1656|
000642  7800              LDRB     r0,[r0,#0]            ;633  ; VK2C21A_segi
000644  1c40              ADDS     r0,r0,#1              ;633
000646  490c              LDR      r1,|L1.1656|
000648  7008              STRB     r0,[r1,#0]            ;633
                  |L1.1610|
00064a  480b              LDR      r0,|L1.1656|
00064c  7800              LDRB     r0,[r0,#0]            ;633  ; VK2C21A_segi
00064e  4908              LDR      r1,|L1.1648|
000650  7809              LDRB     r1,[r1,#0]            ;633  ; VK2C21A_maxseg
000652  4288              CMP      r0,r1                 ;633
000654  dbc4              BLT      |L1.1504|
;;;643    			}
;;;644    		}
;;;645    		Delay_nmS(1000);					  //延时
000656  f44f707a          MOV      r0,#0x3e8
00065a  f7fffffe          BL       Delay_nmS
                  |L1.1630|
00065e  e73d              B        |L1.1244|
;;;646    	}
;;;647    }
;;;648    /************************END OF FILE****/
                          ENDP

                  |L1.1632|
                          DCD      VK2C21A_dispram
                  |L1.1636|
                          DCD      0x40004040
                  |L1.1640|
                          DCD      0x40004870
                  |L1.1644|
                          DCD      VK2C21A_maxcom
                  |L1.1648|
                          DCD      VK2C21A_maxseg
                  |L1.1652|
                          DCD      VK2C21A_readbuf
                  |L1.1656|
                          DCD      VK2C21A_segi
                  |L1.1660|
                          DCD      VK2C21A_comi
                  |L1.1664|
                          DCD      VK2C21A_segtab

                          AREA ||.bss||, DATA, NOINIT, ALIGN=0

                  VK2C21A_dispram
                          %        20
                  VK2C21A_readbuf
                          %        20

                          AREA ||.data||, DATA, ALIGN=0

                  VK2C21A_segtab
000000  00010203          DCB      0x00,0x01,0x02,0x03
000004  04050607          DCB      0x04,0x05,0x06,0x07
000008  08090a0b          DCB      0x08,0x09,0x0a,0x0b
00000c  0c0d0e0f          DCB      0x0c,0x0d,0x0e,0x0f
000010  10111213          DCB      0x10,0x11,0x12,0x13
                  VK2C21A_segi
000014  00                DCB      0x00
                  VK2C21A_comi
000015  00                DCB      0x00
                  VK2C21A_maxcom
000016  00                DCB      0x00
                  VK2C21A_maxseg
000017  00                DCB      0x00

;*** Start embedded assembler ***

#line 1 "..\\lcd_driver\\VK2C21A_IO_I2C_QUASI.c"
	AREA ||.rev16_text||, CODE
	THUMB
	EXPORT |__asm___22_VK2C21A_IO_I2C_QUASI_c_705f0fde____REV16|
#line 114 "..\\..\\..\\Library\\CMSIS\\Include\\core_cmInstr.h"
|__asm___22_VK2C21A_IO_I2C_QUASI_c_705f0fde____REV16| PROC
#line 115

 rev16 r0, r0
 bx lr
	ENDP
	AREA ||.revsh_text||, CODE
	THUMB
	EXPORT |__asm___22_VK2C21A_IO_I2C_QUASI_c_705f0fde____REVSH|
#line 128
|__asm___22_VK2C21A_IO_I2C_QUASI_c_705f0fde____REVSH| PROC
#line 129

 revsh r0, r0
 bx lr
	ENDP

;*** End   embedded assembler ***
