C51 COMPILER V9.60.7.0   MAIN                                                              11/22/2024 14:49:07 PAGE 1   


C51 COMPILER V9.60.7.0, COMPILATION OF MODULE MAIN
OBJECT MODULE PLACED IN .\Objects\main.obj
COMPILER INVOKED BY: D:\KEIL_STM32\C51\BIN\C51.EXE main.c OPTIMIZE(8,SPEED) BROWSE DEBUG OBJECTEXTEND PRINT(.\Listings\m
                    -ain.lst) OBJECT(.\Objects\main.obj)

line level    source

   1          //#include <REGX52.H>
   2          //#include "LCD4004.h"
   3          //      unsigned char mode;
   4          //      unsigned char data pattern1[8] = {0x15, 0x0A, 0x15, 0x0A, 0x15, 0x0A, 0x15}; // 棋盘
   5          //      unsigned char data pattern2[8] = {0x0A, 0x15, 0x0A, 0x15, 0x0A, 0x15, 0x0A};    
   6          //      unsigned char data pattern3[8] = {0x15, 0x15, 0x15, 0x15, 0x15, 0x15, 0x15, 0x15}; //竖线
   7          //    unsigned char data pattern4[8] = {0x0A, 0x0A, 0x0A, 0x0A, 0x0A, 0x0A, 0x0A, 0x0A}; 
   8          //    unsigned char data pattern5[8] = {0x1F, 0x00, 0x1F, 0x00, 0x1F, 0x00, 0x1F, 0x00};//横线 
   9          //      unsigned char data pattern6[8] = {0x00, 0x1F, 0x00, 0x1F, 0x00, 0x1F, 0x00, 0x1F};      
  10          //      unsigned char data pattern7[8] = {0x00, 0x15, 0x00, 0x15, 0x00, 0x15, 0x00, 0x15}; //麻点
  11          //int main() 
  12          //{
  13          //      LCD_Init(); 
  14          //      LCD_Clear();
  15          //      displayCustomCharacter1(pattern1); // 显示棋盘
  16          //      Delay(80); 
  17          //      displayCustomCharacter1(pattern2); 
  18          //      Delay(80); 
  19          //      displayCustomCharacter1(pattern3); // 显示竖线
  20          //      Delay(80); 
  21          //      displayCustomCharacter1(pattern4); 
  22          //      Delay(80); 
  23          //      displayCustomCharacter1(pattern5); // 显示横线
  24          //      Delay(80); 
  25          //      displayCustomCharacter1(pattern6); 
  26          //      Delay(80); 
  27          //      displayCustomCharacter1(pattern7); // 显示麻点
  28          //      Delay(80); 
  29          //      write_CGROM(0x10);//内置
  30          //      Delay(80);
  31          //      write_CGROM(0x60);//内置
  32          //      Delay(80);
  33          //      write_CGROM(0xB0);//内置
  34          //      Delay(80);
  35          //      Write_DDRAM(0xCE);//内置字符
  36          //      Delay(80);
  37          //      LCD_Clear();
  38          //      LCD_ShowString(2,5,"LCM4004_01");
  39          //      LCD_ShowString(1,2,"YeHuiDisplay.com");
  40          //                      
  41          //while (1) 
  42          //{
  43          
  44          //              if (ReadKey1()) 
  45          //        {  
  46          //              LCD_Clear();
  47          //              mode++;
  48          //              mode %= 10;                     
  49          //              switch (mode) 
  50          //        {
  51          //        case 1:            
  52          //                      displayCustomCharacter1(pattern1); 
  53          //            break;
  54          //        case 2:
C51 COMPILER V9.60.7.0   MAIN                                                              11/22/2024 14:49:07 PAGE 2   

  55          //            displayCustomCharacter1(pattern2);  
  56          //            break;
  57          //        case 3:
  58          //            displayCustomCharacter1(pattern3); 
  59          //            break;
  60          //        case 4:
  61          //           displayCustomCharacter1(pattern4);  
  62          //            break;
  63          //        case 5:
  64          //            displayCustomCharacter1(pattern5);  
  65          //            break;
  66          //        case 6:
  67          //            displayCustomCharacter1(pattern6);  
  68          //            break;
  69          //              case 7:
  70          //                      displayCustomCharacter1(pattern7);
  71          //                      break;
  72          //              case 8:
  73          //                      write_CGROM(0x10); 
  74          //                 break;
  75          //              case 9:
  76          //                      write_CGROM(0x60); 
  77          //                 break;
  78          //        default://mode不等于1到9中的任意一个值,则执行write_CGROM(0xB0) 
  79          //                      write_CGROM(0xB0);
  80          //            break;
  81          //    
  82          //              }
  83          //      }                       
  84          //}
  85          
  86          //      }
  87          
  88          //----------------------------------------------------------------------
  89          /*EASTRISING TECHNOLOGY CO,.LTD.*/
  90          // Module    : ERM4004-1
  91          // Create    : JAVEN
  92          // Date      : 2009-06-18
  93          // Drive IC  : KS0066/SPLC780D/AIP31066*2
  94          // INTERFACE : 6800_8bit
  95          // MCU           : AT89C52
  96          // VDD           : 5V
  97          //----------------------------------------------------------------------
  98          #include <reg51.h>
  99          #include <intrins.h>
 100          
 101          #define uchar   unsigned char
 102          #define uint    unsigned int
 103          
 104          
 105          sbit    RS=P3^0;
 106          sbit    R_W=P3^1;
 107          sbit    E=P3^2;
 108          sbit    E1=P3^3;
 109          bit     log=0;
 110          sbit    int0=P2^2;
 111          #define  DATA_BUS       P1
 112          #define  TIMING     8                 //8     8 bit data transmission            4       4 bit data transm
             -ission
 113          
 114          void LCD_initialize(void);
 115          void Write_CGRAM(uchar  a[]);
C51 COMPILER V9.60.7.0   MAIN                                                              11/22/2024 14:49:07 PAGE 3   

 116          void Write_Command(uchar cmd);
 117          void Write_Data(uchar dat);
 118          void Busy(void);
 119          void Delay(uint n);
 120          void Delay1(uint n);
 121          void Write_DDRAM(uchar a);
 122          void write_CGROM(uchar a);
 123          void shaw_character_string(uchar a[]);
 124          
 125          
 126          uchar code character_string[]=
 127          {
 128                     "buydisplay.com*buydisplay.ocm*buydisplay"
 129                     "buydisplay.com*buydisplay.ocm*buydisplay"
 130          };
 131          
 132          uchar code font[]=
 133          {
 134                  0x1f,0x00,0x1f,0x00,0x1f,0x00,0x1f,0x00,
 135                  0x00,0x1f,0x00,0x1f,0x00,0x1f,0x00,0x1f,
 136                  0x15,0x15,0x15,0x15,0x15,0x15,0x15,0x15,
 137                  0x0a,0x0a,0x0a,0x0a,0x0a,0x0a,0x0a,0x0a,
 138                  0x08,0x0f,0x12,0x0f,0x0a,0x1f,0x02,0x02,        //  
 139                  0x0f,0x09,0x0f,0x09,0x0f,0x09,0x09,0x13,        //  
 140                  0x1f,0x11,0x11,0x1f,0x11,0x11,0x11,0x1F,        //  
 141                  0x0C,0x0a,0x11,0x1f,0x09,0x09,0x09,0x13,        //  
 142          };
 143          
 144          
 145          
 146          void Step(void) interrupt 0 using 0
 147          {
 148   1              Delay1(500);
 149   1              if(int0==0)     log=!log;
 150   1         while(!int0);
 151   1        return;
 152   1      
 153   1      }
 154          
 155          
 156          void Delay1(uint n)
 157          {while(n--);
 158   1         
 159   1      }
 160          
 161          void Delay(uint n)
 162          {while(n)
 163   1       { 
 164   2                n--;
 165   2       }
 166   1              for(;log==1;)
 167   1              {
 168   2      
 169   2              }
 170   1      
 171   1      }
 172          
 173          #if  (TIMING==8)
 174          
 175          void Busy(void)
 176          {
 177   1          uchar flag=0xff;
C51 COMPILER V9.60.7.0   MAIN                                                              11/22/2024 14:49:07 PAGE 4   

 178   1          RS=0;E=0;R_W=1;
 179   1              while ((flag&0x80)==0x80)
 180   1              {       P1=0xff;
 181   2                      E=1;
 182   2                      _nop_();
 183   2                  flag=DATA_BUS;
 184   2              E=0;
 185   2              }
 186   1      
 187   1         flag=0xff;
 188   1          RS=0;E1=1;R_W=1;
 189   1              while ((flag&0x80)==0x80)
 190   1              {       P1=0xff;
 191   2                      E1=1;
 192   2                      _nop_();
 193   2                  flag=DATA_BUS;
 194   2              E1=0;
 195   2              }
 196   1      
 197   1      
 198   1      }
 199          
 200          #else
              void Busy(void)
              {
                  uchar flag=0xf0;
                  RS=0;E=0;R_W=1;
                      while ((flag&0x80)==0x80)
                      {       P1=0xf0;
                              E=1;
                              _nop_();
                          flag=DATA_BUS;
                      E=0;
                      }
              
                   flag=0xf0;
                  RS=0;E1=0;R_W=1;
                      while ((flag&0x80)==0x80)
                      {       P1=0xf0;
                              E1=1;
                              _nop_();
                          flag=DATA_BUS;
                      E1=0;
                      }
              
              
              
              }
              
              
              #endif
 229          
 230          
 231          
 232          
 233          
 234          
 235          
 236          #if  (TIMING==8)
 237          void Write_Data(uchar dat) 
 238          {
 239   1          Busy();
C51 COMPILER V9.60.7.0   MAIN                                                              11/22/2024 14:49:07 PAGE 5   

 240   1          RS=1;
 241   1          R_W=0;
 242   1              DATA_BUS=dat;
 243   1              E=1;
 244   1          _nop_();
 245   1          E=0;
 246   1      }
 247          
 248          #else
              
              void Write_Data(uchar dat) 
              {
                  Busy();
                  RS=1;
                  R_W=0;
                      DATA_BUS=dat&0xf0;
                      E=1;
                  _nop_();
                  E=0;
                      dat<<=4;
                      DATA_BUS=dat&0xf0;
                      E=1;
                  _nop_();
                  E=0;
              
              }
              
              #endif
 268          
 269          
 270          #if  (TIMING==8)
 271          void Write_Data1(uchar dat) 
 272          {
 273   1          Busy();
 274   1          RS=1;
 275   1          R_W=0;
 276   1              DATA_BUS=dat;
 277   1              E1=1;
 278   1          _nop_();
 279   1          E1=0;
 280   1      }
 281          
 282          #else
              
              void Write_Data1(uchar dat) 
              {
                  Busy();
                  RS=1;
                  R_W=0;
                      DATA_BUS=dat&0xf0;
                      E1=1;
                  _nop_();
                  E1=0;
                      dat<<=4;
                      DATA_BUS=dat&0xf0;
                      E1=1;
                  _nop_();
                  E1=0;
              
              }
              
              #endif
C51 COMPILER V9.60.7.0   MAIN                                                              11/22/2024 14:49:07 PAGE 6   

 302          
 303          
 304          
 305          
 306          #if  (TIMING==8)
 307          void Write_Command(uchar cmd)
 308          {
 309   1         Busy();
 310   1          RS=0;
 311   1          R_W=0;
 312   1              DATA_BUS=cmd;
 313   1              E=1;
 314   1              _nop_();
 315   1          E=0;
 316   1      }
 317          
 318          #else                                   
              void Write_Command(uchar cmd)
              {
                  Busy();
                  RS=0;
                  R_W=0;
                      DATA_BUS=cmd&0xf0;                      
                      E=1;
                      _nop_();
                  E=0;
                      cmd<<=4;
                      DATA_BUS=cmd&0xf0;
                      E=1;
                  _nop_();
                  E=0;
              
              }
              #endif
 336          
 337          #if  (TIMING==8)
 338          void Write_Command1(uchar cmd)
 339          {
 340   1         Busy();
 341   1          RS=0;
 342   1          R_W=0;
 343   1              DATA_BUS=cmd;
 344   1              E1=1;
 345   1              _nop_();
 346   1          E1=0;
 347   1      }
 348          
 349          #else                                   
              void Write_Command1(uchar cmd)
              {
                  Busy();
                  RS=0;
                  R_W=0;
                      DATA_BUS=cmd&0xf0;                      
                      E1=1;
                      _nop_();
                  E1=0;
                      cmd<<=4;
                      DATA_BUS=cmd&0xf0;
                      E1=1;
                  _nop_();
                  E1=0;
C51 COMPILER V9.60.7.0   MAIN                                                              11/22/2024 14:49:07 PAGE 7   

              
              }
              #endif
 367          
 368          
 369          
 370          
 371          void Write_CGRAM(uchar  a[])
 372          {uchar i=64,k;
 373   1              Write_Command(0x40);
 374   1              for(k=0;k<64;k++)
 375   1              {Write_Data(a[k]);
 376   2              }
 377   1              Write_Command1(0x40);
 378   1              for(k=0;k<64;k++)
 379   1              {Write_Data1(a[k]);
 380   2              }
 381   1      }
 382          
 383          
 384          void LCD_initialize(void)
 385          {
 386   1      if(TIMING==8)   Write_Command(0x38);
 387   1        else   Write_Command(0x28);
 388   1      
 389   1       Write_Command(0x0c);
 390   1       Write_Command(0x06);
 391   1       Write_Command(0x01);
 392   1      
 393   1      if(TIMING==8)   Write_Command1(0x38);
 394   1        else   Write_Command1(0x28);
 395   1      
 396   1       Write_Command1(0x0c);
 397   1       Write_Command1(0x06);
 398   1       Write_Command1(0x01);
 399   1      
 400   1       Delay(1000);
 401   1       Write_CGRAM(font);
 402   1      
 403   1      }
 404          
 405          void Write_DDRAM(uchar a)
 406          {uchar j;
 407   1       Write_Command(0x02);
 408   1       Write_Command1(0x02);
 409   1        Delay(1000);
 410   1       Write_Command(0x80);
 411   1              for(j=0;j<40;j++)
 412   1              {Write_Data(a);
 413   2              }
 414   1       Write_Command(0xc0);
 415   1              for(j=0;j<40;j++)
 416   1              {Write_Data(a);
 417   2              }
 418   1      
 419   1      
 420   1       Write_Command1(0x80);
 421   1              for(j=0;j<40;j++)
 422   1              {Write_Data1(a);
 423   2              }
 424   1       Write_Command1(0xc0);
 425   1              for(j=0;j<40;j++)
C51 COMPILER V9.60.7.0   MAIN                                                              11/22/2024 14:49:07 PAGE 8   

 426   1              {Write_Data1(a);
 427   2              }
 428   1      
 429   1      
 430   1                      Delay(35000);
 431   1                      Delay(65000);
 432   1                      LCD_initialize();
 433   1      }
 434          
 435          
 436          
 437          void write_CGROM(uchar a)
 438          {uchar j,k=a;
 439   1       Write_Command(0x02);
 440   1       Write_Command1(0x02);
 441   1        Delay(1000);
 442   1       Write_Command(0x80);
 443   1              for(j=0;j<40;j++)
 444   1              {Write_Data(a);a+=1;
 445   2              }
 446   1       Write_Command(0xc0);
 447   1              for(j=0;j<40;j++)
 448   1              {Write_Data(a);a+=1;
 449   2              }
 450   1      
 451   1              a=k;
 452   1       Write_Command1(0x80);
 453   1              for(j=0;j<40;j++)
 454   1              {Write_Data1(a);a+=1;
 455   2              }
 456   1       Write_Command1(0xc0);
 457   1              for(j=0;j<40;j++)
 458   1              {Write_Data1(a);a+=1;
 459   2              }
 460   1      
 461   1                      Delay(35000);
 462   1                      Delay(65000);
 463   1                      LCD_initialize();
 464   1      }
 465          
 466          
 467          void shaw_character_string(uchar a[])
 468          {uchar j;
 469   1       Write_Command(0x02);
 470   1       Write_Command1(0x02);
 471   1        Delay(1000);
 472   1       Write_Command(0x80);
 473   1              for(j=0;j<40;j++)
 474   1              {Write_Data(a[j]);
 475   2              }
 476   1       Write_Command(0xc0);
 477   1              for(j=40;j<80;j++)
 478   1              {Write_Data(a[j]);
 479   2              }
 480   1      
 481   1       Write_Command1(0x80);
 482   1              for(j=0;j<40;j++)
 483   1              {Write_Data1(a[j]);
 484   2              }
 485   1       Write_Command1(0xc0);
 486   1              for(j=40;j<80;j++)
 487   1              {Write_Data1(a[j]);
C51 COMPILER V9.60.7.0   MAIN                                                              11/22/2024 14:49:07 PAGE 9   

 488   2              }
 489   1      
 490   1                      Delay(35000);
 491   1                      Delay(65000);
 492   1              LCD_initialize();
 493   1      }
 494          
 495          void main(void)
 496          {       IE=0x81;
 497   1              IP=0x01;
 498   1              TCON=0x01;
 499   1              int0=1;
 500   1              DATA_BUS=0xff;
 501   1              P2=0xff;
 502   1              Delay(1000);
 503   1              LCD_initialize();
 504   1      while(1)
 505   1              {Write_DDRAM(0xff);     
 506   2              Write_DDRAM(0); 
 507   2              Write_DDRAM(1);
 508   2              Write_DDRAM(2);
 509   2              Write_DDRAM(3);
 510   2              write_CGROM(0xa0);
 511   2              Write_DDRAM(4); 
 512   2              Write_DDRAM(5);
 513   2              Write_DDRAM(6);
 514   2              Write_DDRAM(7);
 515   2              shaw_character_string(character_string);
 516   2      
 517   2              }
 518   1      }
 519          
 520          
 521          
 522          
 523          
 524          
*** WARNING C294 IN LINE 387 OF main.c: unreachable code
*** WARNING C294 IN LINE 394 OF main.c: unreachable code


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    671    ----
   CONSTANT SIZE    =    145    ----
   XDATA SIZE       =   ----    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =   ----       7
   IDATA SIZE       =   ----    ----
   BIT SIZE         =      1    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  2 WARNING(S),  0 ERROR(S)
