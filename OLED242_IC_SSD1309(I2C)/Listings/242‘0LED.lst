C51 COMPILER V9.60.7.0   242__0LED                                                         11/08/2024 10:38:50 PAGE 1   


C51 COMPILER V9.60.7.0, COMPILATION OF MODULE 242__0LED
OBJECT MODULE PLACED IN .\Objects\242‘0LED.obj
COMPILER INVOKED BY: D:\KEIL_STM32\C51\BIN\C51.EXE 242‘0LED.c OPTIMIZE(8,SPEED) BROWSE DEBUG OBJECTEXTEND PRINT(.\Listi
                    -ngs\242‘0LED.lst) OBJECT(.\Objects\242‘0LED.obj)

line level    source

   1          /********************金逸晨**************************
   2          *****************2.42‘   4PIN iic OLED FOR AT89S52/STC12*************
   3          *****AT89S52驱动**************************
   4          ***** P20----3  SCK   ,  P21----4  SDA   ,  
   5          ***** BY:GU 
   6          *********SSD1309
   7          
   8          ********************************************************/
   9          #include "reg51.h"
  10          //#include <REGX52.H>
  11          
  12          #define set_0   0x01
  13          #define set_1   0x02
  14          #define set_2   0x04
  15          #define set_3   0x08    
  16          #define set_4   0x10
  17          #define set_5   0x20
  18          #define set_6   0x40
  19          #define set_7   0x80
  20          
  21          #define clr_0   0xFE
  22          #define clr_1   0xFD
  23          #define clr_2   0xFB
  24          #define clr_3   0xF7    
  25          #define clr_4   0xEF
  26          #define clr_5   0xDF
  27          #define clr_6   0xBF
  28          #define clr_7   0x7F
  29          /**********SPI引脚分配，连接oled屏，更具实际情况修改*********/
  30          
  31          #define IIC_SCK_0  P3 &=clr_0        //P2_0      
  32          #define IIC_SCK_1  P3|=set_0       
  33          #define IIC_SDA_0  P3&=clr_1        //P2_1        
  34          #define IIC_SDA_1  P3|=set_1
  35          
  36          
  37          
  38          //#define IIC_SCK_0  P3_0     
  39          //#define IIC_SCK_1  P3_0     
  40          //#define IIC_SDA_0  P3_1        
  41          //#define IIC_SDA_1  P3_1
  42          
  43          
  44          
  45          #define OLED_COLUMN_NUMBER 128
  46          #define OLED_LINE_NUMBER 64
  47          #define OLED_PAGE_NUMBER (OLED_LINE_NUMBER/8)
  48          #define OLED_COLUMN_OFFSET 0
  49          #define OLED_LINE_OFFSET 0
  50          
  51          const unsigned char  *point;
  52          unsigned char ACK=0;
  53          
  54          code unsigned char  OLED_init_cmd[25]=
C51 COMPILER V9.60.7.0   242__0LED                                                         11/08/2024 10:38:50 PAGE 2   

  55          {
  56                 0xAE,//关闭显示
  57                  
  58                 0xD5,//设置时钟分频因子,震荡频率
  59                 0x80,  //[3:0],分频因子;[7:4],震荡频率
  60          
  61                 0xA8,//设置驱动路数
  62                 0X3F,//默认(1/64)
  63                  
  64                 0xD3,//设置显示偏移
  65                 0X00,//默认为0
  66                  
  67                 0x40,//设置显示开始行 [5:0],行数.
  68                  
  69                 0x8D,//电荷泵设置
  70                 0x10,//bit2，开启/关闭
  71                 0x20,//设置内存地址模式
  72                 0x02,//[1:0],00，列地址模式;01，行地址模式;10,页地址模式;默认10;
  73                 0xA1,//段重定义设置,bit0:0,0->0;1,0->127;  A1
  74                  
  75                 0xC8,//设置COM扫描方向;bit3:0,普通模式;1,重定义模式 COM[N-1]->COM0;N:驱动路数 (C0 翻转显示) C8
  76                     
  77                 0xDA,//设置COM硬件引脚配置
  78                 0x12,//[5:4]配置  
  79                     
  80                 0x81,//对比度设置
  81                 0xf0,//1~255;默认0X7F (亮度设置,越大越亮)
  82                     
  83                 0xD9,//设置预充电周期
  84                 0x71,//[3:0],PHASE 1;[7:4],PHASE 2;
  85                     
  86                 0xDB,//设置VCOMH 电压倍率
  87                 0x00,//[6:4] 000,0.65*vcc;001,0.77*vcc;011,0.83*vcc;
  88                     
  89                 0xA4,//全局显示开启;bit0:1,开启;0,关闭;(白屏/黑屏)
  90                     
  91                 0xA6,//设置显示方式;bit0:1,反相显示;0,正常显示 
  92                 
  93                 0xAF,//开启显示   
  94          };
  95          code unsigned char  picture_tab[]={
  96          //图片显示，列行式，低位在前，阴码
  97          0xFF,0x01,0x01,0x01,0x01,0x01,0x01,0x01,0x01,0x01,0x01,0x01,0x01,0x01,0x01,0x01,
  98          0x01,0x01,0x01,0x01,0x01,0x01,0x01,0x01,0x01,0x01,0x01,0x01,0x01,0x01,0x01,0x01,
  99          0x01,0x01,0x01,0x01,0x01,0x01,0x01,0x01,0x01,0x01,0x01,0x01,0x01,0x01,0x01,0x01,
 100          0x01,0x01,0x01,0x01,0x01,0x01,0x01,0x01,0x01,0x01,0x01,0x01,0x01,0x01,0x01,0x01,
 101          0x01,0x01,0x01,0x01,0x01,0x01,0x01,0x01,0x01,0x01,0x01,0x01,0x01,0x01,0x01,0x01,
 102          0x01,0x01,0x01,0x01,0x01,0x01,0x01,0x01,0x01,0x01,0x01,0x01,0x01,0x01,0x01,0x01,
 103          0x01,0x01,0x01,0x01,0x01,0x01,0x01,0x01,0x01,0x01,0x01,0x01,0x01,0x01,0x01,0x01,
 104          0x01,0x01,0x01,0x01,0x01,0x01,0x01,0x01,0x01,0x01,0x01,0x01,0x01,0x01,0x01,0xFF,
 105          0xFF,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
 106          0x00,0x00,0x00,0x20,0x44,0x08,0x00,0x18,0x48,0x28,0xC8,0x08,0x28,0x48,0x18,0x00,
 107          0x40,0x40,0xFC,0x40,0x40,0xFC,0x00,0x00,0xF8,0x00,0x00,0xFC,0x00,0x40,0x40,0xA0,
 108          0x90,0x88,0x84,0x88,0x90,0x20,0x40,0x40,0x00,0x00,0x40,0x44,0xD8,0x20,0xF0,0xAC,
 109          0xA8,0xE8,0xB8,0xA8,0xE0,0x00,0x00,0x00,0xC0,0x7C,0x54,0x54,0x54,0x54,0x54,0x54,
 110          0x7C,0x40,0x40,0x00,0x00,0xF0,0x90,0x90,0x90,0xFC,0x90,0x90,0x90,0xF0,0x00,0x00,
 111          0x00,0x80,0x88,0x88,0x88,0x88,0x88,0xE8,0xA8,0x98,0x8C,0x88,0x80,0x00,0x00,0x00,
 112          0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0xFF,
 113          0xFF,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
 114          0x00,0x00,0x00,0x04,0x3E,0x01,0x10,0x11,0x09,0x05,0x3F,0x05,0x09,0x11,0x11,0x00,
 115          0x08,0x18,0x0F,0x24,0x14,0x0F,0x00,0x00,0x0F,0x00,0x00,0x3F,0x00,0x20,0x22,0x2A,
 116          0x32,0x22,0x3F,0x22,0x32,0x2A,0x22,0x20,0x00,0x00,0x20,0x10,0x0F,0x10,0x28,0x24,
C51 COMPILER V9.60.7.0   242__0LED                                                         11/08/2024 10:38:50 PAGE 3   

 117          0x23,0x20,0x2F,0x28,0x2A,0x2C,0x00,0x30,0x0F,0x04,0x3D,0x25,0x15,0x15,0x0D,0x15,
 118          0x2D,0x24,0x24,0x00,0x00,0x07,0x04,0x04,0x04,0x1F,0x24,0x24,0x24,0x27,0x20,0x38,
 119          0x00,0x00,0x00,0x00,0x00,0x00,0x20,0x3F,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
 120          0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0xFF,
 121          0xFF,0x80,0x80,0x80,0x80,0x80,0x80,0x80,0x80,0x80,0x80,0x80,0x80,0x80,0x80,0x80,
 122          0x80,0x80,0x80,0x80,0x80,0x80,0x80,0x80,0x80,0x80,0x80,0x80,0x80,0x80,0x80,0x80,
 123          0x80,0x80,0x80,0x80,0x80,0x80,0x80,0x80,0x80,0x80,0x80,0x80,0x80,0x80,0x80,0x80,
 124          0x80,0x80,0x80,0x80,0x80,0x80,0x80,0x80,0x80,0x80,0x80,0x80,0x80,0x80,0x80,0x80,
 125          0x80,0x80,0x80,0x80,0x80,0x80,0x80,0x80,0x80,0x80,0x80,0x80,0x80,0x80,0x80,0x80,
 126          0x80,0x80,0x80,0x80,0x80,0x80,0x80,0x80,0x80,0x80,0x80,0x80,0x80,0x80,0x80,0x80,
 127          0x80,0x80,0x80,0x80,0x80,0x80,0x80,0x80,0x80,0x80,0x80,0x80,0x80,0x80,0x80,0x80,
 128          0x80,0x80,0x80,0x80,0x80,0x80,0x80,0x80,0x80,0x80,0x80,0x80,0x80,0x80,0x80,0xFF,
 129          0xFF,0x01,0x01,0x01,0x01,0x01,0x01,0x01,0x01,0x01,0x01,0x01,0x01,0x01,0x01,0x01,
 130          0x01,0x01,0x01,0x81,0x41,0x21,0x21,0x61,0x01,0x01,0x21,0xE1,0xE1,0x01,0xE1,0xE1,
 131          0x21,0x01,0x01,0x01,0x01,0x01,0x01,0x01,0x21,0xE1,0x21,0x21,0x21,0x61,0x01,0x01,
 132          0x21,0x21,0xE1,0x01,0x01,0x01,0x01,0x01,0x01,0x01,0x01,0x01,0x01,0x01,0x01,0x01,
 133          0x01,0x01,0x01,0x01,0x01,0x01,0xC1,0x01,0x01,0x01,0x01,0x01,0x01,0x01,0x01,0x01,
 134          0x01,0x01,0x01,0x01,0x01,0x01,0x01,0x01,0x01,0x01,0x01,0x01,0x01,0x01,0x01,0x01,
 135          0x01,0x01,0x01,0x21,0x01,0x01,0x01,0x01,0x01,0x01,0x01,0x01,0x01,0x01,0x01,0x01,
 136          0x01,0x01,0x01,0x01,0x01,0x01,0x01,0x01,0x01,0x01,0x01,0x01,0x01,0x01,0x01,0xFF,
 137          0xFF,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
 138          0x00,0x00,0x00,0x0F,0x10,0x20,0x24,0x1C,0x04,0x00,0x20,0x3F,0x01,0x3E,0x01,0x3F,
 139          0x20,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x20,0x3F,0x22,0x22,0x27,0x30,0x00,0x00,
 140          0x20,0x20,0x3F,0x20,0x20,0x00,0x00,0x1E,0x25,0x25,0x25,0x16,0x00,0x00,0x1E,0x21,
 141          0x21,0x21,0x13,0x00,0x01,0x01,0x1F,0x21,0x21,0x00,0x00,0x00,0x21,0x3F,0x22,0x21,
 142          0x01,0x00,0x00,0x1E,0x21,0x21,0x21,0x1E,0x00,0x21,0x3F,0x22,0x01,0x01,0x3E,0x20,
 143          0x00,0x21,0x21,0x3F,0x20,0x20,0x00,0x00,0x1E,0x21,0x21,0x21,0x13,0x00,0x00,0x00,
 144          0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0xFF,
 145          0xFF,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
 146          0x00,0x00,0x00,0xF0,0x08,0x04,0x04,0x04,0x0C,0x00,0xF0,0x08,0x04,0x04,0x08,0xF0,
 147          0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x80,0x80,0x00,0x00,0x00,0x00,0x00,
 148          0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x04,0xFC,0x04,0x00,
 149          0x00,0x00,0x00,0x00,0x0C,0x04,0xFC,0x04,0x0C,0x00,0x04,0xFC,0x04,0x04,0x08,0xF0,
 150          0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
 151          0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
 152          0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0xFF,
 153          0xFF,0x80,0x80,0x80,0x80,0x80,0x80,0x80,0x80,0x80,0x80,0x80,0x80,0x80,0x80,0x80,
 154          0x80,0x80,0x80,0x81,0x82,0x84,0x84,0x84,0x82,0x80,0x81,0x82,0x84,0x84,0x82,0x81,
 155          0x80,0x80,0x86,0x86,0x80,0x80,0x80,0x80,0x80,0x85,0x83,0x80,0x80,0x80,0x80,0x80,
 156          0x80,0x80,0x80,0x80,0x80,0x80,0x80,0x80,0x80,0x80,0x80,0x80,0x84,0x87,0x84,0x84,
 157          0x84,0x86,0x80,0x80,0x80,0x84,0x87,0x84,0x80,0x80,0x84,0x87,0x84,0x84,0x82,0x81,
 158          0x80,0x80,0x80,0x80,0x80,0x80,0x80,0x80,0x80,0x80,0x80,0x80,0x80,0x80,0x80,0x80,
 159          0x80,0x80,0x80,0x80,0x80,0x80,0x80,0x80,0x80,0x80,0x80,0x80,0x80,0x80,0x80,0x80,
 160          0x80,0x80,0x80,0x80,0x80,0x80,0x80,0x80,0x80,0x80,0x80,0x80,0x80,0x80,0x80,0xFF
 161          
 162          
 163          };
 164          
 165          void delay_us(unsigned int _us_time)
 166          {       
 167   1        unsigned char x=0;
 168   1        for(;_us_time>0;_us_time--)
 169   1        {
 170   2          x++;
 171   2        }
 172   1      }
 173          void delay_ms(unsigned int _ms_time)
 174            {
 175   1          unsigned int i,j;
 176   1          for(i=0;i<_ms_time;i++)
 177   1          {
 178   2          for(j=0;j<900;j++)
C51 COMPILER V9.60.7.0   242__0LED                                                         11/08/2024 10:38:50 PAGE 4   

 179   2            {;}
 180   2          }
 181   1        }
 182          /**************************IIC模块发送函数************************************************
 183          
 184           *************************************************************************/
 185          //写入  最后将SDA拉高，以等待从设备产生应答
 186          void IIC_write(unsigned char date)
 187          {
 188   1              unsigned char i, temp;
 189   1              temp = date;
 190   1                              
 191   1              for(i=0; i<8; i++)
 192   1              {       IIC_SCK_0;
 193   2                      
 194   2                      if ((temp&0x80)==0)
 195   2                        IIC_SDA_0;
 196   2                      else IIC_SDA_1;
 197   2                      temp = temp << 1;
 198   2                                                        //最少250ns延时
 199   2                      IIC_SCK_1;
 200   2                      
 201   2              }
 202   1              IIC_SCK_0;
 203   1              
 204   1              IIC_SDA_1;
 205   1              
 206   1              IIC_SCK_1;
 207   1              
 208   1               ACK =0;
 209   1              IIC_SCK_0;
 210   1              
 211   1      
 212   1      }
 213          //启动信号
 214          //SCL在高电平期间，SDA由高电平向低电平的变化定义为启动信号
 215          void IIC_start()
 216          {
 217   1              IIC_SDA_1;
 218   1              
 219   1              IIC_SCK_1;
 220   1                                                 //所有操作结束释放SCL        
 221   1              IIC_SDA_0;
 222   1              
 223   1              IIC_SCK_0;
 224   1              
 225   1              IIC_write(0x78);
 226   1              
 227   1      }
 228          
 229          //停止信号
 230          //SCL在高电平期间，SDA由低电平向高电平的变化定义为停止信号
 231          void IIC_stop()
 232          {
 233   1              IIC_SDA_0;
 234   1              
 235   1              IIC_SCK_1;
 236   1              
 237   1              IIC_SDA_1;
 238   1              
 239   1      }
 240          
C51 COMPILER V9.60.7.0   242__0LED                                                         11/08/2024 10:38:50 PAGE 5   

 241          void OLED_send_cmd(unsigned char o_command)
 242            {
 243   1          
 244   1          IIC_start();
 245   1          IIC_write(0x00); 
 246   1          IIC_write(o_command);
 247   1          IIC_stop();
 248   1          
 249   1        }
 250          void OLED_send_data(unsigned char o_data)
 251            { 
 252   1          IIC_start();
 253   1          IIC_write(0x40);
 254   1          IIC_write(o_data);
 255   1          IIC_stop();
 256   1         }
 257          void Column_set(unsigned char column)
 258            {
 259   1          column+=OLED_COLUMN_OFFSET;
 260   1          OLED_send_cmd(0x10|(column>>4));    //设置列地址高位
 261   1          OLED_send_cmd(0x00|(column&0x0f));   //设置列地址低位  
 262   1               
 263   1        }
 264          void Page_set(unsigned char page)
 265          {
 266   1          OLED_send_cmd(0xb0+page);
 267   1      }
 268          void OLED_clear(void)
 269          {
 270   1          unsigned char page,column;
 271   1          for(page=0;page<OLED_PAGE_NUMBER;page++)             //page loop
 272   1            { 
 273   2                Page_set(page);
 274   2                Column_set(0);          
 275   2                for(column=0;column<OLED_COLUMN_NUMBER;column++)      //column loop
 276   2                  {
 277   3                    OLED_send_data(0x00);
 278   3                  }
 279   2            }
 280   1      }
 281          void OLED_full(unsigned char fill_data)
 282          {
 283   1          unsigned char page,column;
 284   1          for(page=0;page<OLED_PAGE_NUMBER;page++)             //page loop
 285   1            { 
 286   2              Page_set(page);
 287   2              Column_set(0);    
 288   2                      for(column=0;column<OLED_COLUMN_NUMBER;column++)        //column loop
 289   2                {
 290   3                  OLED_send_data(fill_data);
 291   3                }
 292   2            }
 293   1      }
 294            
 295          void OLED_full_vertical(unsigned char fill_data) {
 296   1          unsigned char page, column;
 297   1          for (column = 0; column < OLED_COLUMN_NUMBER; column++) {  // column loop
 298   2              Column_set(column);  // 设置列位置
 299   2              Page_set(page);         // 设定起始页
 300   2              for (page = 0; page < OLED_PAGE_NUMBER; page++) {  // page loop
 301   3                  Page_set(page);  // 设置当前页位置
 302   3                  OLED_send_data(fill_data);  // 使用填充数据
C51 COMPILER V9.60.7.0   242__0LED                                                         11/08/2024 10:38:50 PAGE 6   

 303   3              }
 304   2          }
 305   1      }
 306          
 307          
 308          
 309          void OLED_init(void)
 310            {
 311   1          unsigned char i;
 312   1          for(i=0;i<25;i++)
 313   1            {
 314   2              OLED_send_cmd(OLED_init_cmd[i]);
 315   2            }
 316   1        }
 317          
 318          void Picture_display(const unsigned char *ptr_pic)
 319            {
 320   1          unsigned char page,column;
 321   1          for(page=0;page<OLED_PAGE_NUMBER;page++)        //page loop
 322   1            { 
 323   2              Page_set(page);
 324   2              Column_set(0);    
 325   2              for(column=0;column<OLED_COLUMN_NUMBER;column++)        //column loop
 326   2                {
 327   3                  OLED_send_data(*ptr_pic++);
 328   3                }
 329   2            }
 330   1        }
 331          void Picture_ReverseDisplay(const unsigned char *ptr_pic)
 332          {
 333   1          unsigned char page,column,dis_data;
 334   1          for(page=0;page<OLED_PAGE_NUMBER;page++)        //page loop
 335   1            { 
 336   2              Page_set(page);
 337   2              Column_set(0);    
 338   2              for(column=0;column<OLED_COLUMN_NUMBER;column++)        //column loop
 339   2                {
 340   3                  dis_data=*ptr_pic++;
 341   3                  dis_data=~dis_data;
 342   3                  OLED_send_data(dis_data);
 343   3                }
 344   2            }
 345   1        }
 346          
 347          void IO_init(void)
 348          {
 349   1        P2|=0xFF;                        
 350   1        
 351   1      
 352   1      }


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    400    ----
   CONSTANT SIZE    =   1049    ----
   XDATA SIZE       =   ----    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =      4       8
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
